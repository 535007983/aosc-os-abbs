diff -Naur efl-1.22.4/configure.ac efl-1.22.4.bugmacro/configure.ac
--- efl-1.22.4/configure.ac	2019-09-04 18:40:21.000000000 +0000
+++ efl-1.22.4.bugmacro/configure.ac	2019-09-14 04:09:30.659743800 +0000
@@ -299,9 +299,6 @@
     # it's not found. So we are using an internal variable
     # that does the work for now, may get broken in the future.
     AC_DEFINE([_POSIX_C_SOURCE], [200809L], [Define the POSIX version])
-    if test "x${ac_ct_CXX}" = "x" -a "x${CXX}" = "xg++"; then
-       AC_MSG_ERROR([efl requires a C++ compiler got ${ac_ct_CXX} and ${CXX}.])
-    fi
 else
    CXXFLAGS="${CXXFLAGS} -fPIC -DPIC"
    LDFLAGS="${LDFLAGS} -fPIC -DPIC"
@@ -1144,22 +1141,7 @@
    [AS_HELP_STRING([--disable-cxx-bindings],[disable C++11 bindings. @<:@default=enabled@:>@])],
    [want_cxx11="${enableval}"], [want_cxx11="yes"])
 
-have_cxx11="no"
-if test "x${want_cxx11}" = "xyes"; then
-  EFL_CXX_COMPILE_STDCXX_11([ext])
-  if test "x${HAVE_CXX11}" = "x1" ; then
-
-    # We should be using ${CXX} here, but there is a bug in
-    # autotools macro and CXX is always set to g++ even if
-    # it's not found. So we are using an internal variable
-    # that does the work for now, may get broken in the future.
-    if test "x${ac_ct_CXX}" = "x" -a "x${CXX}" = "xg++"; then
-       AC_MSG_ERROR([efl requires a C++ compiler got ${ac_ct_CXX} and ${CXX}.])
-    fi
-
-    have_cxx11="yes"
-  fi
-fi
+have_cxx11="yes"
 
 AM_CONDITIONAL([HAVE_CXX], [test "x${have_cxx11}" = "xyes"])
 
@@ -3074,16 +3056,6 @@
    PKG_CHECK_MODULES([POPPLER], [poppler-cpp >= 0.12], [have_poppler="yes"])
 fi
 
-if test "x${have_poppler}" = "xyes" ; then
-   # We should be using ${CXX} here, but there is a bug in
-   # autotools macro and CXX is always set to g++ even if
-   # it's not found. So we are using an internal variable
-   # that does the work for now, may get broken in the future.
-   if test "x${ac_ct_CXX}" = "x" -a "x${CXX}" = "xg++"; then
-      AC_MSG_ERROR([efl requires a C++ compiler got ${ac_ct_CXX} and ${CXX}.])
-   fi
-fi
-
 if test "x${want_spectre}" = "xyes"; then
    PKG_CHECK_MODULES([SPECTRE], [libspectre], [have_spectre="yes"])
 fi
@@ -4820,16 +4792,6 @@
    ],
    [want_physics="yes"])
 
-if test "x${want_physics}" = "xyes" ; then
-  # We should be using ${CXX} here, but there is a bug in
-  # autotools macro and CXX is always set to g++ even if
-  # it's not found. So we are using an internal variable
-  # that does the work for now, may get broken in the future.
-  if test "x${ac_ct_CXX}" = "x" -a "x${CXX}" = "xg++"; then
-     AC_MSG_ERROR([efl requires a C++ compiler got ${ac_ct_CXX} and ${CXX}.])
-  fi
-fi
-
 EFL_LIB_START_OPTIONAL([EPhysics], [test "${want_physics}" = "yes"])
 
 ### Additional options to configure
