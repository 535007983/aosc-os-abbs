From 9306cd8e7c9acd177a001cf49e39f92bb3a9cec3 Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.xyz>
Date: Thu, 1 Aug 2019 13:51:51 +0000
Subject: [PATCH] aaa

---
 lib/cli.js | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/lib/cli.js b/lib/cli.js
index ce9e459..e6ff3a1 100755
--- a/lib/cli.js
+++ b/lib/cli.js
@@ -31472,6 +31472,7 @@ function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj;
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 
 var DEFAULT_REGISTRY = 'https://registry.npmjs.org/';
+const REGEX_REGISTRY_ENFORCED_HTTPS = /^https?:\/\/([^\/]+\.)?(yarnpkg\.com|npmjs\.(org|com))(\/|$)/;
 var REGEX_REGISTRY_HTTP_PROTOCOL = /^https?:/i;
 var REGEX_REGISTRY_PREFIX = /^(https?:)?\/\//i;
 var REGEX_REGISTRY_SUFFIX = /registry\/?$/;
@@ -31554,14 +31555,15 @@ var NpmRegistry = function (_Registry) {
   };
 
   NpmRegistry.prototype.getRequestUrl = function getRequestUrl(registry, pathname) {
-    var isUrl = REGEX_REGISTRY_PREFIX.test(pathname);
-
-    if (isUrl) {
-      return pathname;
-    } else {
-      return (_url || _load_url()).default.resolve((0, (_misc || _load_misc()).addSuffix)(registry, '/'), pathname);
+    let resolved = pathname;
+    if (!REGEX_REGISTRY_PREFIX.test(pathname)) {
+      resolved = url.resolve(addSuffix(registry, '/'), pathname);
     }
-  };
+    if (REGEX_REGISTRY_ENFORCED_HTTPS.test(resolved)) {
+      resolved = resolved.replace(/^http:\/\//, 'https://');
+    }
+    return resolved;
+  };
 
   NpmRegistry.prototype.isRequestToRegistry = function isRequestToRegistry(requestUrl, registryUrl) {
     var request = urlParts(requestUrl);
@@ -142248,4 +142250,4 @@ module.exports = require("dns");
 module.exports = require("domain");
 
 /***/ })
-/******/ ]);
\ No newline at end of file
+/******/ ]);
-- 
2.21.0
