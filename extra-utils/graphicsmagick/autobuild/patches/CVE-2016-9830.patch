
# HG changeset patch
# User Glenn Randers-Pehrson <glennrp+bmo@gmail.com>
# Date 1477099736 14400
# Node ID 38d0f281e8c81e12ead220e1a7849d69e89b4697
# Parent  400a2e59c0d9bd7fb8b19abb1b8df60d04418f8f
*coders/png.c (ReadOneJNGImage): Enforce spec requirement that

the dimensions of the JPEG embedded in a JDAT chunk must match
the JHDR dimensions.

diff -r 400a2e59c0d9 -r 38d0f281e8c8 ChangeLog
--- a/ChangeLog	Thu Oct 20 20:04:02 2016 -0500
+++ b/ChangeLog	Fri Oct 21 21:28:56 2016 -0400
@@ -1,3 +1,14 @@
+2016-10-21 Glenn Randers-Pehrson  <glennrp@simple.dallas.tx.us>
+
+	*coders/png.c (ReadOneJNGImage): Enforce spec requirement that the
+	dimensions of the JPEG embedded in a JDAT chunk must match the
+	JHDR dimensions. This issue was assigned CVE-2016-9830 on
+	2016-12-04.  Please note that GraphicsMagick's pixel, width, and
+	height default limits are often greater than the dimension limits
+	of JNG and JPEG so the user should add explicit limits (if needed)
+	to prevent unexpected memory consumption from properly-constructed
+	JNG files with large dimensions.
+
 2016-10-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>
 
 	* coders/meta.c (parse8BIM): Fix unsigned underflow leading to
diff -r 400a2e59c0d9 -r 38d0f281e8c8 coders/png.c
--- a/coders/png.c	Thu Oct 20 20:04:02 2016 -0500
+++ b/coders/png.c	Fri Oct 21 21:28:56 2016 -0400
@@ -2787,6 +2787,10 @@
   long
     y;
 
+  magick_int64_t
+    height_resource,
+    width_resource;
+
   unsigned long
     jng_height,
     jng_width;
@@ -2857,6 +2861,10 @@
 
   read_JSEP=MagickFalse;
   reading_idat=MagickFalse;
+  
+  width_resource = GetMagickResourceLimit(WidthResource);
+  height_resource = GetMagickResourceLimit(HeightResource);
+
   for (;;)
     {
       char
@@ -2997,6 +3005,10 @@
               ThrowReaderException(CorruptImageError,ImproperImageHeader,image);
             }
 
+          /* Temporarily set width and height resources to match JHDR */
+          SetMagickResourceLimit(WidthResource,jng_width);
+          SetMagickResourceLimit(HeightResource,jng_height);
+
           continue;
         }
 
@@ -3421,6 +3433,10 @@
   if (logging)
     (void) LogMagickEvent(CoderEvent,GetMagickModule(),
                           "  exit ReadOneJNGImage()");
+
+  SetMagickResourceLimit(WidthResource,width_resource);
+  SetMagickResourceLimit(HeightResource,height_resource);
+
   return (image);
 }
 

diff -r 400a2e59c0d9 -r 38d0f281e8c8 www/Changelog.html
--- a/www/Changelog.html
+++ b/www/Changelog.html
@@ -35,6 +35,17 @@
 <div class="document">
 
 
+<p>2016-10-21 Glenn Randers-Pehrson  &lt;<a class="reference external" href="mailto:glennrp&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">glennrp<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
+<blockquote>
+<p>*coders/png.c (ReadOneJNGImage): Enforce spec requirement that the
+dimensions of the JPEG embedded in a JDAT chunk must match the
+JHDR dimensions. This issue was assigned CVE-2016-9830 on
+2016-12-04.  Please note that GraphicsMagick's pixel, width, and
+height default limits are often greater than the dimension limits
+of JNG and JPEG so the user should add explicit limits (if needed)
+to prevent unexpected memory consumption from properly-constructed
+JNG files with large dimensions.</p>
+</blockquote>
 <p>2016-10-01  Bob Friesenhahn  &lt;<a class="reference external" href="mailto:bfriesen&#37;&#52;&#48;simple&#46;dallas&#46;tx&#46;us">bfriesen<span>&#64;</span>simple<span>&#46;</span>dallas<span>&#46;</span>tx<span>&#46;</span>us</a>&gt;</p>
 <blockquote>
 <ul class="simple">
