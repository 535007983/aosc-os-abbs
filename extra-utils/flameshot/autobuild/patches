From 9570025d08cbb10e30b927e981362de7b53dc641 Mon Sep 17 00:00:00 2001
From: Peter Cai <peter@typeblog.net>
Date: Fri, 25 Sep 2020 06:47:38 +0800
Subject: [PATCH] correct position of QScreen geometry on HiDPI multi-headed
 setup

---
 src/utils/screengrabber.cpp           | 10 ++++++
 src/widgets/capture/capturewidget.cpp | 50 +++++++++++++++++++++++++++
 2 files changed, 60 insertions(+)

diff --git a/src/utils/screengrabber.cpp b/src/utils/screengrabber.cpp
index c2a9ae6..39fac30 100644
--- a/src/utils/screengrabber.cpp
+++ b/src/utils/screengrabber.cpp
@@ -87,10 +87,20 @@ ScreenGrabber::grabEntireDesktop(bool& ok)
   }
 #endif
 
+<<<<<<< HEAD
   QRect geometry;
   for (QScreen* const screen : QGuiApplication::screens()) {
     geometry = geometry.united(screen->geometry());
   }
+=======
+    QRect geometry;
+    for (QScreen* const screen : QGuiApplication::screens()) {
+        QRect scrRect = screen->geometry();
+        scrRect.moveTo(scrRect.x() / screen->devicePixelRatio(),
+                       scrRect.y() / screen->devicePixelRatio());
+        geometry = geometry.united(scrRect);
+    }
+>>>>>>> e1214e2... correct position of QScreen geometry on HiDPI multi-headed setup
 
   QPixmap p(
     QApplication::primaryScreen()->grabWindow(QApplication::desktop()->winId(),
diff --git a/src/widgets/capture/capturewidget.cpp b/src/widgets/capture/capturewidget.cpp
index b85883a..e22bc0b 100644
--- a/src/widgets/capture/capturewidget.cpp
+++ b/src/widgets/capture/capturewidget.cpp
@@ -116,6 +116,7 @@ CaptureWidget::CaptureWidget(const uint id,
     setWindowFlags(Qt::BypassWindowManagerHint | Qt::WindowStaysOnTopHint |
                    Qt::FramelessWindowHint | Qt::Tool);
 #endif
+<<<<<<< HEAD
     resize(pixmap().size());
   }
   // Create buttons
@@ -125,6 +126,19 @@ CaptureWidget::CaptureWidget(const uint id,
   if (m_context.fullscreen) {
     for (QScreen* const screen : QGuiApplication::screens()) {
       QRect r = screen->geometry();
+=======
+        resize(pixmap().size());
+    }
+    // Create buttons
+    m_buttonHandler = new ButtonHandler(this);
+    updateButtons();
+    QVector<QRect> areas;
+    if (m_context.fullscreen) {
+        for (QScreen* const screen : QGuiApplication::screens()) {
+            QRect r = screen->geometry();
+            r.moveTo(r.x() / screen->devicePixelRatio(),
+                     r.y() / screen->devicePixelRatio());
+>>>>>>> e1214e2... correct position of QScreen geometry on HiDPI multi-headed setup
 #ifdef Q_OS_WIN
       r.moveTo(r.topLeft() - topLeft);
 #endif
@@ -593,6 +607,7 @@ CaptureWidget::moveEvent(QMoveEvent* e)
 void
 CaptureWidget::initContext(const QString& savePath, bool fullscreen)
 {
+<<<<<<< HEAD
   m_context.widgetDimensions = rect();
   m_context.color = m_config.drawColorValue();
   m_context.savePath = savePath;
@@ -601,6 +616,41 @@ CaptureWidget::initContext(const QString& savePath, bool fullscreen)
   m_context.thickness = m_config.drawThicknessValue();
   m_context.fullscreen = fullscreen;
 }
+=======
+    QRect panelRect = rect();
+    if (m_context.fullscreen) {
+        panelRect = QGuiApplication::primaryScreen()->geometry();
+        auto devicePixelRatio =
+          QGuiApplication::primaryScreen()->devicePixelRatio();
+        panelRect.moveTo(panelRect.x() / devicePixelRatio,
+                         panelRect.y() / devicePixelRatio);
+    }
+
+    ConfigHandler config;
+
+    if (config.showSidePanelButtonValue()) {
+        auto* panelToggleButton =
+          new OrientablePushButton(tr("Tool Settings"), this);
+        makeChild(panelToggleButton);
+        panelToggleButton->setOrientation(
+          OrientablePushButton::VerticalBottomToTop);
+        panelToggleButton->move(panelRect.x(),
+                                panelRect.y() + panelRect.height() / 2 -
+                                  panelToggleButton->width() / 2);
+        panelToggleButton->setCursor(Qt::ArrowCursor);
+        (new DraggableWidgetMaker(this))->makeDraggable(panelToggleButton);
+        connect(panelToggleButton,
+                &QPushButton::clicked,
+                this,
+                &CaptureWidget::togglePanel);
+    }
+
+    m_panel = new UtilityPanel(this);
+    makeChild(m_panel);
+    panelRect.moveTo(mapFromGlobal(panelRect.topLeft()));
+    panelRect.setWidth(m_colorPicker->width() * 3);
+    m_panel->setGeometry(panelRect);
+>>>>>>> e1214e2... correct position of QScreen geometry on HiDPI multi-headed setup
 
 void
 CaptureWidget::initPanel()
-- 
2.27.0

