Description: add operand checking to .setnativefontmapbuilt
 .setnativefontmapbuilt .forceputs a value into systemdict -
 it is intended to be a boolean,
 but in this case was being called with a compound object (a dictionary).
 Such an object, in local VM, being forced into systemdict
 would then confuse the garbager,
 since it could be restored away with the reference remaining.
 .
 This adds operand checking,
 so .setnativefontmapbuilt will simply ignore
 anything other than a boolean value,
 and also removes the definition of .setnativefontmapbuilt after use,
 since it is only used in two, closely related places.
Origin: upstream, http://git.ghostscript.com/?p=ghostpdl.git;h=b0222e5
Author: Chris Liddell <chris.liddell@artifex.com>
Forwarded: yes
Bug: http://bugs.ghostscript.com/show_bug.cgi?id=699795
Last-Update: 2018-10-18
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Resource/Init/gs_fonts.ps
+++ b/Resource/Init/gs_fonts.ps
@@ -372,9 +372,13 @@
 % of strings: what the system thinks is the ps name,
 % and the access path.
 /.setnativefontmapbuilt { % set whether we've been run
-  systemdict exch /.nativefontmapbuilt exch .forceput
+  dup type /booleantype eq {
+      systemdict exch /.nativefontmapbuilt exch .forceput
+  }
+  {pop}
+  ifelse
 } .bind executeonly def
-systemdict /NONATIVEFONTMAP known .setnativefontmapbuilt
+systemdict /NONATIVEFONTMAP known //.setnativefontmapbuilt exec
 /.buildnativefontmap {   % - .buildnativefontmap <bool>
   systemdict /.nativefontmapbuilt .knownget not
   { //false} if
@@ -415,9 +419,10 @@
       } forall
     } if
     % record that we've been run
-    //true .setnativefontmapbuilt
+    //true //.setnativefontmapbuilt exec
   } ifelse
 } bind def
+currentdict /.setnativefontmapbuilt .forceundef
 
 % Create the dictionary that registers the .buildfont procedure
 % (called by definefont) for each FontType.
