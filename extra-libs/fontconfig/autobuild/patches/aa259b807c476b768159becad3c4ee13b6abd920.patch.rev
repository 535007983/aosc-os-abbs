From aa259b807c476b768159becad3c4ee13b6abd920 Mon Sep 17 00:00:00 2001
From: Michal Srb <michalsrb@gmail.com>
Date: Tue, 21 Feb 2017 23:14:29 +0200
Subject: [PATCH] Add FcPreprocessFamily speeding up FcCompareFamliy.

FcPreprocessString calculates hash of the family string to fast reject not matching families.

TODO: Add benchmark numbers.
---
 src/fcmatch.c | 17 +++++++++++++++++
 src/fcobjs.h  |  2 +-
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/src/fcmatch.c b/src/fcmatch.c
index 8ebeed3..e2d19f2 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -88,6 +88,15 @@ FcCompareString (const FcValue *v1,
     return (double) FcStrCmpIgnoreCase (FcValueString(v1), FcValueString(v2)) != 0;
 }
 
+static FcPrepValue
+FcPreprocessFamily (FcValue *v)
+{
+    FcPrepValue prep;
+    prep.type = FcPrepStrHashIgnoreBlanksAndCase;
+    prep.str_hash = FcStrHashIgnoreBlanksAndCase(FcValueString(v));
+    return prep;
+}
+
 static double
 FcCompareFamily (const FcValue *v1,
 		    const FcPrepValue *p1,
@@ -95,6 +104,14 @@ FcCompareFamily (const FcValue *v1,
 			const FcPrepValue *p2,
 			FcValue *bestValue)
 {
+    if (p1->type == FcPrepStrHashIgnoreBlanksAndCase &&
+	p2->type == FcPrepStrHashIgnoreBlanksAndCase)
+    {
+	// If hashes are not matching, return fast
+	if (p1->str_hash != p2->str_hash)
+	    return 1.0;
+    }
+
     /* rely on the guarantee in FcPatternObjectAddWithBinding that
      * families are always FcTypeString. */
     const FcChar8* v1_string = FcValueString(v1);
diff --git a/src/fcobjs.h b/src/fcobjs.h
index a1862ae..6e0f9ab 100644
--- a/src/fcobjs.h
+++ b/src/fcobjs.h
@@ -22,7 +22,7 @@
  * PERFORMANCE OF THIS SOFTWARE.
  */
 /* DON'T REORDER!  The order is part of the cache signature. */
-FC_OBJECT (FAMILY,		FcTypeString,	FcCompareFamily,	NULL)
+FC_OBJECT (FAMILY,		FcTypeString,	FcCompareFamily,	FcPreprocessFamily)
 FC_OBJECT (FAMILYLANG,		FcTypeString,	NULL,			NULL)
 FC_OBJECT (STYLE,		FcTypeString,	FcCompareString,	FcPreprocessString)
 FC_OBJECT (STYLELANG,		FcTypeString,	NULL,			NULL)
