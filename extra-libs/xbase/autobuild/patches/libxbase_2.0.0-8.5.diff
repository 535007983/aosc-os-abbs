--- libxbase-2.0.0.orig/ltconfig
+++ libxbase-2.0.0/ltconfig
@@ -1656,7 +1656,7 @@
   ;;
 
 # This must be Linux ELF.
-linux-gnu*)
+linux-gnu*|kfreebsd*)
   version_type=linux
   library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so$major $libname.so'
   soname_spec='${libname}${release}.so$major'
--- libxbase-2.0.0.orig/Makefile
+++ libxbase-2.0.0/Makefile
@@ -0,0 +1,461 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+#	This file is part of the XBase libraries
+#    Copyright (C) 1998 Denis Pershin (dyp@inetlab.com)
+#
+#    This library is free software; you can redistribute it and/or
+#    modify it under the terms of the GNU Lesser General Public
+#    License as published by the Free Software Foundation; either
+#    version 2.1 of the License, or (at your option) any later version.
+#
+#    This library is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#    Lesser General Public License for more details.
+#
+#    You should have received a copy of the GNU Lesser General Public
+#    License along with this library; if not, write to the Free Software
+#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+#    Contact:
+#
+#      Mail:
+#
+#        Technology Associates, Inc.
+#        XBase Project
+#        1455 Deming Way #11
+#        Sparks, NV 89434
+#        USA
+#
+#      Email:
+#
+#        xbase@techass.com
+#
+#      See our website at:
+#
+#        linux.techass.com
+#
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = .
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = .
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+SUBDIRS = xbase examples bin html libtest tv docs
+
+MAINTAINERCLEANFILES = Makefile.in configure aclocal.m4 libtool
+
+EXTRA_DIST =  	makefile.g95
+
+
+bin_SCRIPTS = xbase-config
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = ./xbase/xbconfig.h
+CONFIG_CLEAN_FILES =  xbase-config xbase.spec
+SCRIPTS =  $(bin_SCRIPTS)
+
+DIST_COMMON =  README AUTHORS COPYING ChangeLog INSTALL Makefile.am \
+Makefile.in NEWS TODO acconfig.h acinclude.m4 aclocal.m4 config.guess \
+config.sub configure configure.in install-sh ltconfig ltmain.sh missing \
+mkinstalldirs xbase-config.in xbase.spec.in xbase/stamp-h.in \
+xbase/xbconfig.h.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = gtar
+GZIP_ENV = --best
+all: all-redirect
+.SUFFIXES:
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+$(ACLOCAL_M4):  configure.in  acinclude.m4
+	cd $(srcdir) && $(ACLOCAL)
+
+config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	$(SHELL) ./config.status --recheck
+$(srcdir)/configure: $(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
+	cd $(srcdir) && $(AUTOCONF)
+
+xbase/xbconfig.h: xbase/stamp-h
+	@if test ! -f $@; then \
+		rm -f xbase/stamp-h; \
+		$(MAKE) xbase/stamp-h; \
+	else :; fi
+xbase/stamp-h: $(srcdir)/xbase/xbconfig.h.in $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES= CONFIG_HEADERS=xbase/xbconfig.h \
+	     $(SHELL) ./config.status
+	@echo timestamp > xbase/stamp-h 2> /dev/null
+$(srcdir)/xbase/xbconfig.h.in: $(srcdir)/xbase/stamp-h.in
+	@if test ! -f $@; then \
+		rm -f $(srcdir)/xbase/stamp-h.in; \
+		$(MAKE) $(srcdir)/xbase/stamp-h.in; \
+	else :; fi
+$(srcdir)/xbase/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h
+	cd $(top_srcdir) && $(AUTOHEADER)
+	@echo timestamp > $(srcdir)/xbase/stamp-h.in 2> /dev/null
+
+mostlyclean-hdr:
+
+clean-hdr:
+
+distclean-hdr:
+	-rm -f xbase/xbconfig.h
+
+maintainer-clean-hdr:
+xbase-config: $(top_builddir)/config.status xbase-config.in
+	cd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status
+xbase.spec: $(top_builddir)/config.status xbase.spec.in
+	cd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+install-binSCRIPTS: $(bin_SCRIPTS)
+	@$(NORMAL_INSTALL)
+	$(mkinstalldirs) $(DESTDIR)$(bindir)
+	@list='$(bin_SCRIPTS)'; for p in $$list; do \
+	  if test -f $$p; then \
+	    echo " $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
+	    $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
+	  else if test -f $(srcdir)/$$p; then \
+	    echo " $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \
+	    $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
+	  else :; fi; fi; \
+	done
+
+uninstall-binSCRIPTS:
+	@$(NORMAL_UNINSTALL)
+	list='$(bin_SCRIPTS)'; for p in $$list; do \
+	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`; \
+	done
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+
+
+
+all-recursive install-data-recursive install-exec-recursive \
+installdirs-recursive install-recursive uninstall-recursive  \
+check-recursive installcheck-recursive info-recursive dvi-recursive:
+	@set fnord $(MAKEFLAGS); amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $(MAKEFLAGS); amf=$$2; \
+	dot_seen=no; \
+	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
+	  rev="$$subdir $$rev"; \
+	  test "$$subdir" = "." && dot_seen=yes; \
+	done; \
+	test "$$dot_seen" = "no" && rev=". $$rev"; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+
+tags: TAGS
+
+ID: $(HEADERS) $(SOURCES) $(LISP)
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	here=`pwd` && cd $(srcdir) \
+	  && mkid -f$$here/ID $$unique $(LISP)
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+   if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
+   fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
+	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)
+
+mostlyclean-tags:
+
+clean-tags:
+
+distclean-tags:
+	-rm -f TAGS ID
+
+maintainer-clean-tags:
+
+distdir = $(PACKAGE)-$(VERSION)
+top_distdir = $(distdir)
+
+# This target untars the dist file and tries a VPATH configuration.  Then
+# it guarantees that the distribution is self-contained by making another
+# tarfile.
+distcheck: dist
+	-rm -rf $(distdir)
+	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
+	mkdir $(distdir)/=build
+	mkdir $(distdir)/=inst
+	dc_install_base=`cd $(distdir)/=inst && pwd`; \
+	cd $(distdir)/=build \
+	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
+	  && $(MAKE) $(AM_MAKEFLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
+	  && $(MAKE) $(AM_MAKEFLAGS) check \
+	  && $(MAKE) $(AM_MAKEFLAGS) install \
+	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
+	  && $(MAKE) $(AM_MAKEFLAGS) dist
+	-rm -rf $(distdir)
+	@banner="$(distdir).tar.gz is ready for distribution"; \
+	dashes=`echo "$$banner" | sed s/./=/g`; \
+	echo "$$dashes"; \
+	echo "$$banner"; \
+	echo "$$dashes"
+dist: distdir
+	-chmod -R a+r $(distdir)
+	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
+	-rm -rf $(distdir)
+dist-all: distdir
+	-chmod -R a+r $(distdir)
+	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
+	-rm -rf $(distdir)
+distdir: $(DISTFILES)
+	-rm -rf $(distdir)
+	mkdir $(distdir)
+	-chmod 777 $(distdir)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+	for subdir in $(SUBDIRS); do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d $(distdir)/$$subdir \
+	    || mkdir $(distdir)/$$subdir \
+	    || exit 1; \
+	    chmod 777 $(distdir)/$$subdir; \
+	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+info-am:
+info: info-recursive
+dvi-am:
+dvi: dvi-recursive
+check-am: all-am
+check: check-recursive
+installcheck-am:
+installcheck: installcheck-recursive
+install-exec-am: install-binSCRIPTS
+install-exec: install-exec-recursive
+
+install-data-am:
+install-data: install-data-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-recursive
+uninstall-am: uninstall-binSCRIPTS
+uninstall: uninstall-recursive
+all-am: Makefile $(SCRIPTS)
+all-redirect: all-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs: installdirs-recursive
+installdirs-am:
+	$(mkinstalldirs)  $(DESTDIR)$(bindir)
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
+mostlyclean-am:  mostlyclean-hdr mostlyclean-tags mostlyclean-generic
+
+mostlyclean: mostlyclean-recursive
+
+clean-am:  clean-hdr clean-tags clean-generic mostlyclean-am
+
+clean: clean-recursive
+
+distclean-am:  distclean-hdr distclean-tags distclean-generic clean-am
+	-rm -f libtool
+
+distclean: distclean-recursive
+	-rm -f config.status
+
+maintainer-clean-am:  maintainer-clean-hdr maintainer-clean-tags \
+		maintainer-clean-generic distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f config.status
+
+.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \
+uninstall-binSCRIPTS install-binSCRIPTS install-data-recursive \
+uninstall-data-recursive install-exec-recursive \
+uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
+all-recursive check-recursive installcheck-recursive info-recursive \
+dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
+maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
+distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
+dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
+install-exec install-data-am install-data install-am install \
+uninstall-am uninstall all-redirect all-am all installdirs-am \
+installdirs mostlyclean-generic distclean-generic clean-generic \
+maintainer-clean-generic clean mostlyclean distclean maintainer-clean
+
+
+rpm : dist
+	cp xbase-2.0.0.tar.gz /usr/src/redhat/SOURCES
+	cp xbase.spec /usr/src/redhat/SPECS
+	(cd /usr/src/redhat/SPECS ; rpm -ba --clean xbase.spec)
+
+docs :
+	(cd docs ; make docs)
+
+.PHONY : docs
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/xbase.spec
+++ libxbase-2.0.0/xbase.spec
@@ -0,0 +1,66 @@
+%define xbase_ver 2.0.0
+
+Summary: Xbase dBase database file library
+Name: xbase
+Provides: xbase-2.0
+Version: %{xbase_ver}
+Release: 1
+Source: xbase-2.0.0.tar.gz
+Copyright: LGPL
+Group: Development/Libraries
+Packager: Derry Bryson <derry@techass.com>
+Vendor: Xbase Development Team (linux.techass.com/projects/xdb)
+
+%description
+Library for accessing dBase .dbf, .ndx, .dbt, and Clipper .ntx files.
+
+%package -n xbase-devel
+Version: %{xbase_ver}
+Summary: Xbase development package
+Group: Development/Libraries
+Provides: xbase-devel-2.0
+Requires: xbase-2.0
+
+%description -n xbase-devel
+Headers and such for compiling programs that use the Xbase library.
+
+%prep
+%setup
+CFLAGS="$RPM_OPT_FLAGS" ./configure --prefix=/usr --enable-static
+
+%build
+make
+
+%install
+rm -rf $RPM_BUILD_ROOT
+make DESTDIR=$RPM_BUILD_ROOT install
+
+%post
+/sbin/ldconfig
+
+%postun
+/sbin/ldconfig
+
+%files -n xbase
+/usr/bin/checkndx
+/usr/bin/copydbf
+/usr/bin/deletall
+/usr/bin/dumphdr
+/usr/bin/dumprecs
+/usr/bin/packdbf
+/usr/bin/reindex
+/usr/bin/undelall
+/usr/bin/zap
+/usr/bin/dbfutil1
+/usr/lib/libxbase.so
+/usr/lib/libxbase-2.0.so.*
+
+%doc NEWS README TODO AUTHORS COPYING ChangeLog
+
+%files -n xbase-devel
+/usr/include/xbase
+/usr/bin/xbase-config
+/usr/lib/libxbase.la
+/usr/lib/libxbase.a
+
+%doc docs/html docs/latex
--- libxbase-2.0.0.orig/libtool
+++ libxbase-2.0.0/libtool
@@ -0,0 +1,3273 @@
+#! /bin/sh
+
+# libtool - Provide generalized library-building support services.
+# Generated automatically by ltconfig (GNU libtool "1.2c")
+# NOTE: Changes made to this file will be lost: look at ltconfig or ltmain.sh.
+#
+# Copyright (C) 1996-1998 Free Software Foundation, Inc.
+# Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# Sed that helps us avoid accidentally triggering echo(1) options like -n.
+Xsed="sed -e s/^X//"
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+if test "${CDPATH+set}" = set; then CDPATH=; export CDPATH; fi
+
+### BEGIN LIBTOOL CONFIG
+# Libtool was configured as follows, on host debian2:
+#
+# CC="g++" CFLAGS="-O2 -Wall" CPPFLAGS="" \
+# LD="/usr/bin/ld" NM="/usr/bin/nm -B" RANLIB="ranlib" LN_S="ln -s" \
+# DLLTOOL="""" AS="""" \
+#   ./ltconfig --with-gcc --with-gnu-ld --no-verify ./ltmain.sh i686-pc-linux-gnu
+#
+# Compiler and other test output produced by ltconfig, useful for
+# debugging ltconfig, is in ./config.log if it exists.
+
+# The version of ltconfig that generated this script.
+LTCONFIG_VERSION="1.2c"
+
+# Shell to use when invoking shell scripts.
+SHELL="/bin/sh"
+
+# Whether or not to build shared libraries.
+build_libtool_libs=yes
+
+# Whether or not to build static libraries.
+build_old_libs=yes
+
+# The host system.
+host_alias=i686-pc-linux-gnu
+host=i686-pc-linux-gnu
+
+# An echo program that does not interpret backslashes.
+echo="echo"
+
+# The archiver.
+AR="ar"
+
+# The default C compiler.
+CC="g++"
+
+# The linker used to build libraries.
+LD="/usr/bin/ld"
+
+# Whether we need hard or soft links.
+LN_S="ln -s"
+
+# A BSD-compatible nm program.
+NM="/usr/bin/nm -B"
+
+# Used on cygwin32: DLL creation program.
+DLLTOOL="dlltool"
+
+# Used on cygwin32: assembler.
+AS="as"
+
+# The name of the directory that contains temporary libtool files.
+objdir=.libs
+
+# How to create reloadable object files.
+reload_flag=" -r"
+reload_cmds="\$LD\$reload_flag -o \$output\$reload_objs"
+
+# How to pass a linker flag through the compiler.
+wl="-Wl,"
+
+# Object file suffix (normally "o").
+objext="o"
+
+# Old archive suffix (normally "a").
+libext="a"
+
+# Additional compiler flags for building library objects.
+pic_flag=" -fPIC"
+
+# Does compiler simultaneously support -c and -o options
+compiler_c_o="yes"
+
+# Can we write directly to a .lo ?
+compiler_o_lo="yes"
+
+# Must we lock files when doing compilation ?
+need_locks="no"
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag="-static"
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=" -fno-builtin -fno-rtti -fno-exceptions"
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec="\${wl}--export-dynamic"
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec="\${wl}--whole-archive\$convenience \${wl}--no-whole-archive"
+
+# Library versioning type.
+version_type=linux
+
+# Format of library name prefix.
+libname_spec="lib\$name"
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME.
+library_names_spec="\${libname}\${release}.so\$versuffix \${libname}\${release}.so\$major \$libname.so"
+
+# The coded name of the library, if different from the real name.
+soname_spec="\${libname}\${release}.so\$major"
+
+# Commands used to build and install an old-style archive.
+RANLIB="ranlib"
+old_archive_cmds="\$AR cru \$oldlib\$oldobjs~\$RANLIB \$oldlib"
+old_postinstall_cmds="\$RANLIB \$oldlib~chmod 644 \$oldlib"
+old_postuninstall_cmds=""
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=""
+
+# Commands used to build and install a shared archive.
+archive_cmds="\$CC -shared \${wl}-soname \$wl\$soname -o \$lib\$libobjs\$deplibs"
+archive_sym_cmds="\$CC -shared \${wl}-soname \$wl\$soname \${wl}-retain-symbols-file \$wl\$export_symbols -o \$lib\$libobjs\$deplibs"
+postinstall_cmds=""
+postuninstall_cmds=""
+
+# Method to check whether dependent libraries are shared objects.
+check_shared_deplibs_method="file_magic ELF 32-bit LSB shared object"
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=""
+
+# Flag that forces no undefined symbols.
+no_undefined_flag=""
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds="PATH=\\\"\\\\\$PATH:/sbin\\\" ldconfig -n \$libdir"
+
+# Same as above, but a single script fragment to be evaled but not shown.
+finish_eval=""
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe="sed -n -e 's/^.* [ABCDGISTUW] \\([_A-Za-z][_A-Za-z0-9]*\\)\$/\\1 \\1/p'"
+
+# This is the shared library runtime path variable.
+runpath_var=LD_RUN_PATH
+
+# This is the shared library path variable.
+shlibpath_var=LD_LIBRARY_PATH
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=immediate
+
+# Flag to hardcode $libdir into a binary during linking.
+# This must work even if $libdir does not exist.
+hardcode_libdir_flag_spec="\${wl}--rpath \${wl}\$libdir"
+
+# Whether we need a single -rpath flag with a separated argument.
+hardcode_libdir_separator=""
+
+# Set to yes if using DIR/libNAME.so during linking hardcodes DIR into the
+# resulting binary.
+hardcode_direct=no
+
+# Set to yes if using the -LDIR flag during linking hardcodes DIR into the
+# resulting binary.
+hardcode_minus_L=no
+
+# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into
+# the resulting binary.
+hardcode_shlibpath_var=unsupported
+
+# System search path for libraries
+sys_lib_search_path="/lib /usr/lib /usr/local/lib "
+
+# Fix the shell variable $srcfile for the compiler.
+fix_srcfile_path=""
+### END LIBTOOL CONFIG
+
+# ltmain.sh - Provide generalized library-building support services.
+# NOTE: Changing this file will not affect anything until you rerun ltconfig.
+#
+# Copyright (C) 1996-1998 Free Software Foundation, Inc.
+# Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# Check that we have a working $echo.
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<EOF
+$*
+EOF
+  exit 0
+elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
+  # Yippee, $echo works!
+  :
+else
+  # Restart under the correct shell, and then maybe $echo will work.
+  exec $SHELL "$0" --no-reexec ${1+"$@"}
+fi
+
+# The name of this program.
+progname=`$echo "$0" | sed 's%^.*/%%'`
+modename="$progname"
+
+# Constants.
+PROGRAM=ltmain.sh
+PACKAGE=libtool
+VERSION=1.2c
+
+default_mode=
+help="Try \`$progname --help' for more information."
+magic="%%%MAGIC variable%%%"
+mkdir="mkdir"
+mv="mv -f"
+rm="rm -f"
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed='sed -e s/^X//'
+sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'
+
+# NLS nuisances.
+# Only set LANG and LC_ALL to C if already set.
+# These must not be set unconditionally because not all systems understand
+# e.g. LANG=C (notably SCO).
+# We save the old values to restore during execute mode.
+if test "${LC_ALL+set}" = set; then
+  save_LC_ALL="$LC_ALL"; LC_ALL=C; export LC_ALL
+fi
+if test "${LANG+set}" = set; then
+  save_LANG="$LANG"; LANG=C; export LANG
+fi
+
+if test "$LTCONFIG_VERSION" != "$VERSION"; then
+  echo "$modename: ltconfig version \`$LTCONFIG_VERSION' does not match $PROGRAM version \`$VERSION'" 1>&2
+  echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+  exit 1
+fi
+
+if test "$build_libtool_libs" != yes && test "$build_old_libs" != yes; then
+  echo "$modename: not configured to build any kind of library" 1>&2
+  echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+  exit 1
+fi
+
+# Global variables.
+mode=$default_mode
+nonopt=
+prev=
+prevopt=
+run=
+show="$echo"
+show_help=
+execute_dlfiles=
+lo2o="s/\\.lo\$/.${objext}/"
+los2o="s/\\.lo /.${objext} /g"
+
+# Parse our command line options once, thoroughly.
+while test $# -gt 0
+do
+  arg="$1"
+  shift
+
+  case "$arg" in
+  -*=*) optarg=`$echo "X$arg" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;
+  *) optarg= ;;
+  esac
+
+  # If the previous option needs an argument, assign it.
+  if test -n "$prev"; then
+    case "$prev" in
+    execute_dlfiles)
+      eval "$prev=\"\$$prev \$arg\""
+      ;;
+    *)
+      eval "$prev=\$arg"
+      ;;
+    esac
+
+    prev=
+    prevopt=
+    continue
+  fi
+
+  # Have we seen a non-optional argument yet?
+  case "$arg" in
+  --help)
+    show_help=yes
+    ;;
+
+  --version)
+    echo "$PROGRAM (GNU $PACKAGE) $VERSION"
+    exit 0
+    ;;
+
+  --config)
+    sed -e '1,/^### BEGIN LIBTOOL CONFIG/d' -e '/^### END LIBTOOL CONFIG/,$d' $0
+    exit 0
+    ;;
+
+  --debug)
+    echo "$progname: enabling shell trace mode"
+    set -x
+    ;;
+
+  --dry-run | -n)
+    run=:
+    ;;
+
+  --features)
+    echo "host: $host"
+    if test "$build_libtool_libs" = yes; then
+      echo "enable shared libraries"
+    else
+      echo "disable shared libraries"
+    fi
+    if test "$build_old_libs" = yes; then
+      echo "enable static libraries"
+    else
+      echo "disable static libraries"
+    fi
+    exit 0
+    ;;
+
+  --finish) mode="finish" ;;
+
+  --mode) prevopt="--mode" prev=mode ;;
+  --mode=*) mode="$optarg" ;;
+
+  --quiet | --silent)
+    show=:
+    ;;
+
+  -dlopen)
+    prevopt="-dlopen"
+    prev=execute_dlfiles
+    ;;
+
+  -*)
+    $echo "$modename: unrecognized option \`$arg'" 1>&2
+    $echo "$help" 1>&2
+    exit 1
+    ;;
+
+  *)
+    nonopt="$arg"
+    break
+    ;;
+  esac
+done
+
+if test -n "$prevopt"; then
+  $echo "$modename: option \`$prevopt' requires an argument" 1>&2
+  $echo "$help" 1>&2
+  exit 1
+fi
+
+if test -z "$show_help"; then
+
+  # Infer the operation mode.
+  if test -z "$mode"; then
+    case "$nonopt" in
+    *cc | *++ | gcc* | *-gcc*)
+      mode=link
+      for arg
+      do
+        case "$arg" in
+        -c)
+           mode=compile
+           break
+           ;;
+        esac
+      done
+      ;;
+    *db | *dbx | *strace | *truss)
+      mode=execute
+      ;;
+    *install*|cp|mv)
+      mode=install
+      ;;
+    *rm)
+      mode=uninstall
+      ;;
+    *)
+      # If we have no mode, but dlfiles were specified, then do execute mode.
+      test -n "$execute_dlfiles" && mode=execute
+
+      # Just use the default operation mode.
+      if test -z "$mode"; then
+        if test -n "$nonopt"; then
+          $echo "$modename: warning: cannot infer operation mode from \`$nonopt'" 1>&2
+        else
+          $echo "$modename: warning: cannot infer operation mode without MODE-ARGS" 1>&2
+        fi
+      fi
+      ;;
+    esac
+  fi
+
+  # Only execute mode is allowed to have -dlopen flags.
+  if test -n "$execute_dlfiles" && test "$mode" != execute; then
+    $echo "$modename: unrecognized option \`-dlopen'" 1>&2
+    $echo "$help" 1>&2
+    exit 1
+  fi
+
+  # Change the help message to a mode-specific one.
+  generic_help="$help"
+  help="Try \`$modename --help --mode=$mode' for more information."
+
+  # These modes are in order of execution frequency so that they run quickly.
+  case "$mode" in
+  # libtool compile mode
+  compile)
+    modename="$modename: compile"
+    # Get the compilation command and the source file.
+    base_compile=
+    lastarg=
+    srcfile="$nonopt"
+    suppress_output=
+    force_static=no
+
+    user_target=no
+    for arg
+    do
+      # Accept any command-line options.
+      case "$arg" in
+      -o)
+        if test "$user_target" != "no"; then
+          $echo "$modename: you cannot specify \`-o' more than once" 1>&2
+	  exit 1
+        fi
+        user_target=next
+	;;
+
+      -force-static)
+        force_static=yes
+        continue
+        ;;
+	
+      -static)
+        build_old_libs=yes
+        continue
+        ;;
+      esac
+
+      case "$user_target" in
+      next)
+        # The next one is the -o target name
+        user_target=yes
+        continue
+        ;;
+      yes)
+        # We got the output file
+        user_target=set
+        libobj="$arg"
+        continue
+        ;;
+      esac
+
+      # Accept the current argument as the source file.
+      lastarg="$srcfile"
+      srcfile="$arg"
+
+      # Aesthetically quote the previous argument.
+
+      # Backslashify any backslashes, double quotes, and dollar signs.
+      # These are the only characters that are still specially
+      # interpreted inside of double-quoted scrings.
+      lastarg=`$echo "X$lastarg" | $Xsed -e "$sed_quote_subst"`
+
+      # Double-quote args containing other shell metacharacters.
+      # Many Bourne shells cannot handle close brackets correctly in scan
+      # sets, so we specify it separately.
+      case "$lastarg" in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*)
+        lastarg="\"$lastarg\""
+        ;;
+      esac
+
+      # Add the previous argument to base_compile.
+      if test -z "$base_compile"; then
+        base_compile="$lastarg"
+      else
+        base_compile="$base_compile $lastarg"
+      fi
+    done
+
+    case "$user_target" in
+    set)
+      ;;
+    no)
+      # Get the name of the library object.
+      libobj=`$echo "X$srcfile" | $Xsed -e 's%^.*/%%'`
+      ;;
+    *)
+      $echo "$modename: you must specify a target with \`-o'" 1>&2
+      exit 1
+      ;;
+    esac
+
+    # Recognize several different file suffixes.
+    # If the user specifies -o file.o, it is replaced with file.lo
+    xform='[cCFSfmso]'
+    case "$libobj" in
+    *.ada) xform=ada ;;
+    *.adb) xform=adb ;;
+    *.ads) xform=ads ;;
+    *.asm) xform=asm ;;
+    *.c++) xform=c++ ;;
+    *.cc) xform=cc ;;
+    *.cpp) xform=cpp ;;
+    *.cxx) xform=cxx ;;
+    *.f90) xform=f90 ;;
+    *.for) xform=for ;;
+    esac
+
+    libobj=`$echo "X$libobj" | $Xsed -e "s/\.$xform$/.lo/"`
+
+    case "$libobj" in
+    *.lo) obj=`$echo "X$libobj" | $Xsed -e "$lo2o"` ;;
+    *)
+      $echo "$modename: cannot determine name of library object from \`$libobj'" 1>&2
+      exit 1
+      ;;
+    esac
+
+    if test -z "$base_compile"; then
+      $echo "$modename: you must specify a compilation command" 1>&2
+      $echo "$help" 1>&2
+      exit 1
+    fi
+
+    # Delete any leftover library objects.
+    if test "$build_old_libs" = yes; then
+      removelist="$obj $libobj $lockfile"
+    else
+      removelist="$libobj $lockfile"
+    fi
+
+    $run $rm $removelist
+    trap "$run $rm $removelist; exit 1" 1 2 15
+
+    # Calculate the filename of the output object if compiler does
+    # not support -o with -c
+    if test "$compiler_c_o" = no; then
+      output_obj=`$echo "X$srcfile" | $Xsed -e 's%^.*/%%' -e 's%\..*$%%'`.${objext}
+      lockfile="$output_obj.lock"
+      removelist="$removelist $output_obj $lockfile"
+      trap "$run $rm $removelist; exit 1" 1 2 15
+    else
+      need_locks=no
+      lockfile=
+    fi
+
+    # Lock this critical section if it is needed
+    # We use this script file to make the link, it avoids creating a new file
+    if test "$need_locks" = yes; then
+      until ln "$0" "$lockfile" 2>/dev/null; do
+        $show "Waiting for $lockfile to be removed"
+        sleep 2
+      done
+    elif test "$need_locks" = warn; then
+      if test -f "$lockfile"; then
+	echo "\
+*** ERROR, $lockfile exists and contains:
+`cat $lockfile 2>/dev/null`
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit 1
+      fi
+      echo $srcfile > "$lockfile"
+    fi
+
+    if test -n "$fix_srcfile_path"; then
+      eval srcfile=\"$fix_srcfile_path\"
+    fi
+
+    # Only build a PIC object if we are building libtool libraries.
+    if test "$build_libtool_libs" = yes; then
+      # Without this assignment, base_compile gets emptied.
+      fbsd_hideous_sh_bug=$base_compile
+
+      # All platforms use -DPIC, to notify preprocessed assembler code.
+      command="$base_compile$pic_flag -DPIC $srcfile"
+      if test "$compiler_o_lo" = yes; then
+        command="$command -o $libobj"
+        output_obj="$libobj"
+      elif test "$compiler_c_o" = yes; then
+        command="$command -o $obj"
+        output_obj="$obj"
+      fi
+
+      $show "$command"
+      if $run eval "$command"; then :
+      else
+        test -n "$output_obj" && $run $rm $removelist
+        exit 1
+      fi
+
+      if test "$need_locks" = warn &&
+	 test x"`cat $lockfile 2>/dev/null`" != x"$srcfile"; then
+	echo "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit 1
+      fi
+
+      # Just move the object if needed, then go on to compile the next one
+      if test "$compiler_o_lo" = no && test x"$output_obj" != x"$libobj"; then
+        $show "$mv $output_obj $libobj"
+        if $run $mv $output_obj $libobj; then :
+	else
+	  error=$?
+	  $run $rm $removelist
+	  exit $error
+	fi
+      fi
+
+      # If we have no pic_flag and do not have -force-static, 
+      # then copy the object into place and finish.
+      if test -z "$pic_flag" && test "$force_static" = no; then
+        $show "$LN_S $libobj $obj"
+        if $run $LN_S $libobj $obj; then
+	  exit 0
+	else
+          error=$?
+	  $run $rm $removelist
+	  exit $error
+	fi
+      fi
+
+      # Allow error messages only from the first compilation.
+      suppress_output=' >/dev/null 2>&1'
+    fi
+
+    # Only build a position-dependent object if we build old libraries.
+    if test "$build_old_libs" = yes; then
+      command="$base_compile -DSTATIC $srcfile"
+      if test "$compiler_c_o" = yes; then
+        command="$command -o $obj"
+        output_obj="$obj"
+      fi
+
+      # Suppress compiler output if we already did a PIC compilation.
+      command="$command$suppress_output"
+      $show "$command"
+      if $run eval "$command"; then :
+      else
+        $run $rm $removelist
+        exit 1
+      fi
+
+      if test "$need_locks" = warn &&
+	 test x"`cat $lockfile 2>/dev/null`" != x"$srcfile"; then
+	echo "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$run $rm $removelist
+	exit 1
+      fi
+
+      # Just move the object if needed
+      if test "$compiler_c_o" = no && test x"$output_obj" != x"$obj"; then
+        $show "$mv $output_obj $obj"
+        if $run $mv $output_obj $obj; then :
+	else
+	  error=$?
+	  $run $rm $removelist
+	  exit $error
+	fi
+      fi
+    fi
+
+    # Unlock the critical section if it was locked
+    if test "$need_locks" != no; then
+      $rm "$lockfile"
+    fi
+
+    # Create an invalid libtool object if no PIC, so that we do not
+    # accidentally link it into a program.
+    if test "$build_libtool_libs" != yes; then
+      $show "echo timestamp > $libobj"
+      $run eval "echo timestamp > \$libobj" || exit $?
+    fi
+
+    exit 0
+    ;;
+
+  # libtool link mode
+  link)
+    modename="$modename: link"
+    C_compiler="$CC" # save it, to compile generated C sources
+    CC="$nonopt"
+    allow_undefined=yes
+    compile_command="$CC"
+    finalize_command="$CC"
+
+    compile_shlibpath=
+    finalize_shlibpath=
+    convenience=
+    old_convenience=
+    deplibs=
+    eval lib_search_path=\"$sys_lib_search_path\"
+    
+    dlfiles=
+    dlprefiles=
+    export_dynamic=no
+    export_symbols=
+    generated=
+    hardcode_libdirs=
+    libobjs=
+    link_against_libtool_libs=
+    ltlibs=
+    module=no
+    objs=
+    prev=
+    prevarg=
+    release=
+    rpath=
+    perm_rpath=
+    temp_rpath=
+    vinfo=
+
+    # We need to know -static, to get the right output filenames.
+    for arg
+    do
+      case "$arg" in
+      -all-static | -static)
+        if test "X$arg" = "X-all-static" && test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
+	    $echo "$modename: warning: complete static linking is impossible in this configuration" 1>&2
+        fi
+        build_libtool_libs=no
+	build_old_libs=yes
+        break
+        ;;
+      esac
+    done
+
+    # See if our shared archives depend on static archives.
+    test -n "$old_archive_from_new_cmds" && build_old_libs=yes
+
+    # Go through the arguments, transforming them on the way.
+    while test $# -gt 0; do
+      arg="$1"
+      shift
+
+      # If the previous option needs an argument, assign it.
+      if test -n "$prev"; then
+        case "$prev" in
+        output)
+          compile_command="$compile_command @OUTPUT@"
+          finalize_command="$finalize_command @OUTPUT@"
+          ;;
+        esac
+
+        case "$prev" in
+        dlfiles|dlprefiles)
+          case "$arg" in
+          *.la | *.lo) ;;  # We handle these cases below.
+          *)
+            dlprefiles="$dlprefiles $arg"
+            test "$prev" = dlfiles && dlfiles="$dlfiles $arg"
+            prev=
+            ;;
+          esac
+          ;;
+	exportsyms)
+	  export_symbols="$arg"
+          if test ! -f "$arg"; then
+            $echo "$modename: symbol file \`$arg' does not exist"
+            exit 1
+          fi
+	  prev=
+	  ;;
+	release)
+	  release="-$arg"
+	  prev=
+	  continue
+	  ;;
+        rpath)
+          rpath="$rpath $arg"
+	  prev=
+	  continue
+	  ;;
+        *)
+          eval "$prev=\"\$arg\""
+          prev=
+          continue
+          ;;
+        esac
+      fi
+
+      prevarg="$arg"
+
+      case "$arg" in
+      -all-static)
+	if test -n "$link_static_flag"; then
+          compile_command="$compile_command $link_static_flag"
+	  finalize_command="$finalize_command $link_static_flag"
+        fi
+        continue
+	;;
+
+      -allow-undefined)
+	# FIXME: remove this flag sometime in the future.
+	$echo "$modename: \`-allow-undefined' is deprecated because it is the default" 1>&2
+	continue
+	;;
+
+      -dlopen)
+        prev=dlfiles
+        continue
+        ;;
+
+      -dlpreopen)
+        prev=dlprefiles
+        continue
+        ;;
+
+      -export-dynamic)
+        if test "$export_dynamic" != yes; then
+          export_dynamic=yes
+	  if test -n "$export_dynamic_flag_spec"; then
+	    eval arg=\"$export_dynamic_flag_spec\"
+	  else
+	    arg=
+	  fi
+
+          # Add the symbol object into the linking commands.
+	  compile_command="$compile_command @SYMFILE@"
+	  finalize_command="$finalize_command @SYMFILE@"
+        fi
+        ;;
+
+      -export-symbols)
+        if test -n "$export_symbols"; then
+          $echo "$modename: cannot have more than one -exported-symbols"
+          exit 1
+        fi
+	prev=exportsyms
+	continue
+        ;;
+
+      -L*)
+        dir=`$echo "X$arg" | $Xsed -e 's%^-L\(.*\)$%\1%'`
+        case "$dir" in
+        /* | [A-Za-z]:[/\\]*)
+	  # Add the corresponding hardcode_libdir_flag, if it is not identical.
+          ;;
+        *)
+          $echo "$modename: \`-L$dir' cannot specify a relative directory" 1>&2
+          exit 1
+          ;;
+        esac
+        deplibs="$deplibs $arg"
+        lib_search_path="$lib_search_path `expr $arg : '-L\(.*\)'`"
+        ;;
+
+      -l*) deplibs="$deplibs $arg" ;;
+
+      -module)
+        module=yes
+        continue
+        ;;
+	
+      -no-undefined)
+	allow_undefined=no
+	continue
+	;;
+
+      -o) prev=output ;;
+
+      -release)
+	prev=release
+	continue
+	;;
+
+      -rpath)
+        prev=rpath
+        continue
+        ;;
+
+      -static)
+	# If we have no pic_flag, then this is the same as -all-static.
+	if test -z "$pic_flag" && test -n "$link_static_flag"; then
+          compile_command="$compile_command $link_static_flag"
+	  finalize_command="$finalize_command $link_static_flag"
+        fi
+	continue
+	;;
+
+      -version-info)
+        prev=vinfo
+        continue
+        ;;
+
+      # Some other compiler flag.
+      -* | +*)
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case "$arg" in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*)
+	  arg="\"$arg\""
+	  ;;
+	esac
+        ;;
+
+      *.o | *.obj | *.a | *.lib)
+        # A standard object.
+        objs="$objs $arg"
+        ;;
+
+      *.lo)
+        # A library object.
+	if test "$prev" = dlfiles; then
+	  dlfiles="$dlfiles $arg"
+	  if test "$build_libtool_libs" = yes; then
+	    prev=
+	    continue
+	  else
+	    # If libtool objects are unsupported, then we need to preload.
+	    prev=dlprefiles
+	  fi
+	fi
+
+	if test "$prev" = dlprefiles; then
+	  # Preload the old-style object.
+	  dlprefiles="$dlprefiles "`$echo "X$arg" | $Xsed -e "$lo2o"`
+	  prev=
+	fi
+	libobjs="$libobjs $arg"
+        ;;
+
+      *.la)
+        # A libtool-controlled library.
+
+        dlname=
+        libdir=
+        library_names=
+        old_library=
+
+        # Check to see that this really is a libtool archive.
+        if (sed -e '2q' $arg | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+        else
+          $echo "$modename: \`$arg' is not a valid libtool archive" 1>&2
+          exit 1
+        fi
+
+	# If the library was installed with an old release of libtool,
+	# it will not redefine variable installed.
+	installed=yes
+
+        # If there is no directory component, then add one.
+        case "$arg" in
+        */* | *\\*) . $arg ;;
+        *) . ./$arg ;;
+        esac
+
+        # Get the name of the library we link against.
+        linklib=
+        for l in $old_library $library_names; do
+          linklib="$l"
+        done
+
+        if test -z "$linklib"; then
+          $echo "$modename: cannot find name of link library for \`$arg'" 1>&2
+          exit 1
+        fi
+
+        # Find the relevant object directory and library name.
+        name=`$echo "X$arg" | $Xsed -e 's%^.*/%%' -e 's/\.la$//' -e 's/^lib//'`
+
+	if test "X$installed" = Xyes; then
+	  dir="$libdir"
+	else
+	  dir=`$echo "X$arg" | $Xsed -e 's%/[^/]*$%%'`
+	  if test "X$dir" = "X$arg"; then
+	    dir="$objdir"
+	  else
+	    dir="$dir/$objdir"
+	  fi
+	fi
+
+        if test -z "$libdir"; then
+	  # It is a libtool convenience library, so add in its objects.
+	  convenience="$convenience $dir/$old_library"l
+	  old_convenience="$old_convenience $dir/$old_library"
+	  compile_command="$compile_command $dir/$old_library"
+	  finalize_command="$finalize_command $dir/$old_library"
+	  continue
+	fi
+
+        # This library was specified with -dlopen.
+        if test "$prev" = dlfiles; then
+          dlfiles="$dlfiles $arg"
+          if test -z "$dlname"; then
+            # If there is no dlname, we need to preload.
+            prev=dlprefiles
+          else
+            # We should not create a dependency on this library, but we
+	    # may need any libraries it requires.
+	    compile_command="$compile_command$dependency_libs"
+	    finalize_command="$finalize_command$dependency_libs"
+            prev=
+            continue
+          fi
+        fi
+
+        # The library was specified with -dlpreopen.
+        if test "$prev" = dlprefiles; then
+          # Prefer using a static library (so that no silly _DYNAMIC symbols
+          # are required to link).
+          if test -n "$old_library"; then
+            dlprefiles="$dlprefiles $dir/$old_library"
+          else
+            dlprefiles="$dlprefiles $dir/$linklib"
+          fi
+          prev=
+        fi
+
+        if test "$build_libtool_libs" = yes && test -n "$library_names"; then
+          link_against_libtool_libs="$link_against_libtool_libs $arg"
+          if test -n "$shlibpath_var"; then
+            # Make sure the rpath contains only unique directories.
+            case "$temp_rpath " in
+            *" $dir "*) ;;
+            *) temp_rpath="$temp_rpath $dir" ;;
+            esac
+          fi
+
+	  # This is the magic to use -rpath.
+          if test -n "$hardcode_libdir_flag_spec"; then
+            if test -n "$hardcode_libdir_separator"; then
+              if test -z "$hardcode_libdirs"; then
+                # Put the magic libdir with the hardcode flag.
+                hardcode_libdirs="$libdir"
+                libdir="@HARDCODE_LIBDIRS@"
+              else
+                # Just accumulate the unique libdirs.
+		case "$hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator" in
+		*"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		  ;;
+		*)
+		  hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		  ;;
+		esac
+                libdir=
+              fi
+            fi
+
+            if test -n "$libdir"; then
+              eval flag=\"$hardcode_libdir_flag_spec\"
+
+              compile_command="$compile_command $flag"
+              finalize_command="$finalize_command $flag"
+            fi
+          elif test -n "$runpath_var"; then
+            # Do the same for the permanent run path.
+            case "$perm_rpath " in
+            *" $libdir "*) ;;
+            *) perm_rpath="$perm_rpath $libdir" ;;
+            esac
+          fi
+
+
+	  lib_linked=yes
+          case "$hardcode_action" in
+          immediate | unsupported)
+            if test "$hardcode_direct" = no; then
+              compile_command="$compile_command $dir/$linklib"
+            elif test "$hardcode_minus_L" = no; then
+	      case "$host" in
+	      *-*-sunos*)
+                compile_shlibpath="$compile_shlibpath$dir:"
+		;;
+	      esac
+              compile_command="$compile_command -L$dir -l$name"
+            elif test "$hardcode_shlibpath_var" = no; then
+              compile_shlibpath="$compile_shlibpath$dir:"
+              compile_command="$compile_command -l$name"
+	    else
+	      lib_linked=no
+            fi
+            ;;
+
+          relink)
+            # We need an absolute path.
+            case "$dir" in
+            /* | [A-Za-z]:[/\\]*) ;;
+            *)
+              absdir=`cd "$dir" && pwd`
+              if test -z "$absdir"; then
+                $echo "$modename: cannot determine absolute directory name of \`$dir'" 1>&2
+                exit 1
+              fi
+              dir="$absdir"
+              ;;
+            esac
+
+            if test "$hardcode_direct" = yes; then
+              compile_command="$compile_command $dir/$linklib"
+            elif test "$hardcode_minus_L" = yes; then
+              compile_command="$compile_command -L$dir -l$name"
+            elif test "$hardcode_shlibpath_var" = yes; then
+              compile_shlibpath="$compile_shlibpath$dir:"
+              compile_command="$compile_command -l$name"
+	    else
+	      lib_linked=no
+            fi
+            ;;
+
+	  *)
+	    lib_linked=no
+	    ;;
+          esac
+
+	  if test "$lib_linked" != yes; then
+	    $echo "$modename: configuration error: unsupported hardcode properties"
+	    exit 1
+	  fi
+
+          # Finalize command for both is simple: just hardcode it.
+          if test "$hardcode_direct" = yes; then
+            finalize_command="$finalize_command $libdir/$linklib"
+          elif test "$hardcode_minus_L" = yes; then
+            finalize_command="$finalize_command -L$libdir -l$name"
+          elif test "$hardcode_shlibpath_var" = yes; then
+            finalize_shlibpath="$finalize_shlibpath$libdir:"
+            finalize_command="$finalize_command -l$name"
+          else
+            # We cannot seem to hardcode it, guess we'll fake it.
+            finalize_command="$finalize_command -L$libdir -l$name"
+          fi
+        else
+          # Transform directly to old archives if we don't build new libraries.
+          if test -n "$pic_flag" && test -z "$old_library"; then
+            $echo "$modename: cannot find static library for \`$arg'" 1>&2
+            exit 1
+          fi
+
+	  # Here we assume that one of hardcode_direct or hardcode_minus_L
+	  # is not unsupported.  This is valid on all known static and
+	  # shared platforms.
+	  if test "$hardcode_direct" != unsupported; then
+	    test -n "$old_library" && linklib="$old_library"
+	    compile_command="$compile_command $dir/$linklib"
+	    finalize_command="$finalize_command $dir/$linklib"
+	  else
+	    compile_command="$compile_command -L$dir -l$name"
+	    finalize_command="$finalize_command -L$dir -l$name"
+	  fi
+        fi
+
+	# Add in any libraries that this one depends upon.
+	compile_command="$compile_command$dependency_libs"
+	finalize_command="$finalize_command$dependency_libs"
+	continue
+        ;;
+
+      # Some other compiler argument.
+      *)
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+	case "$arg" in
+	*[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*)
+	  arg="\"$arg\""
+	  ;;
+	esac
+        ;;
+      esac
+
+      # Now actually substitute the argument into the commands.
+      if test -n "$arg"; then
+	compile_command="$compile_command $arg"
+	finalize_command="$finalize_command $arg"
+      fi
+    done
+
+    if test -n "$prev"; then
+      $echo "$modename: the \`$prevarg' option requires an argument" 1>&2
+      $echo "$help" 1>&2
+      exit 1
+    fi
+
+    if test -n "$export_symbols" && test "$module" = yes; then
+      $echo "$modename: \`-export-symbols' is not supported for modules"
+      exit 1
+    fi
+    
+    oldlibs=
+    # calculate the name of the file, without its directory
+    outputname=`$echo "X$output" | $Xsed -e 's%^.*/%%'`
+
+    case "$output" in
+    "")
+      $echo "$modename: you must specify an output file" 1>&2
+      $echo "$help" 1>&2
+      exit 1
+      ;;
+
+    *.a | *.lib)
+      if test -n "$link_against_libtool_libs"; then
+        $echo "$modename: error: cannot link libtool libraries into archives" 1>&2
+        exit 1
+      fi
+
+      if test -n "$deplibs"; then
+        $echo "$modename: warning: \`-l' and \`-L' are ignored for archives" 1>&2
+      fi
+
+      if test -n "$dlfiles$dlprefiles"; then
+        $echo "$modename: warning: \`-dlopen' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$rpath"; then
+        $echo "$modename: warning: \`-rpath' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$vinfo"; then
+        $echo "$modename: warning: \`-version-info' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$release"; then
+        $echo "$modename: warning: \`-release' is ignored for archives" 1>&2
+      fi
+
+      if test -n "$export_symbols"; then
+        $echo "$modename: warning: \`-export-symbols' is ignored for archives" 1>&2
+      fi
+
+      # Now set the variables for building old libraries.
+      build_libtool_libs=no
+      oldlibs="$output"
+      ;;
+
+    *.la)
+      # Make sure we only generate libraries of the form `libNAME.la'.
+      case "$outputname" in
+      lib*) ;;
+      *)
+	$echo "$modename: libtool library \`$output' must begin with \`lib'" 1>&2
+	$echo "$help" 1>&2
+	exit 1
+	;;
+      esac
+
+      name=`$echo "X$outputname" | $Xsed -e 's/\.la$//' -e 's/^lib//'`
+      eval libname=\"$libname_spec\"
+
+      output_objdir=`$echo "X$output" | $Xsed -e 's%/[^/]*$%%'`
+      if test "X$output_objdir" = "X$output"; then
+        output_objdir="$objdir"
+      else
+        output_objdir="$output_objdir/$objdir"
+      fi
+
+      # All the library-specific variables (install_libdir is set above).
+      library_names=
+      old_library=
+      dlname=
+
+      if test -n "$objs"; then
+        $echo "$modename: cannot build libtool library \`$output' from non-libtool objects:$objs" 2>&1
+        exit 1
+      fi
+
+      # How the heck are we supposed to write a wrapper for a shared library?
+      if test -n "$link_against_libtool_libs"; then
+        $echo "$modename: error: cannot link shared libraries into libtool libraries" 1>&2
+        exit 1
+      fi
+
+      if test -n "$dlfiles$dlprefiles"; then
+        $echo "$modename: warning: \`-dlopen' is ignored for libtool libraries" 1>&2
+      fi
+
+      set dummy $rpath
+      if test $# -gt 2; then
+	$echo "$modename: warning: ignoring multiple \`-rpath's for a libtool library" 1>&2
+      fi
+      install_libdir="$2"
+
+      oldlibs=
+      if test -z "$rpath"; then
+	# Building a libtool convenience library.
+	oldlibs="$output_objdir/$libname.al $oldlibs"
+	build_libtool_libs=convenience
+
+	if test -n "$vinfo"; then
+	  $echo "$modename: warning: \`-version-info' is ignored for convenience libraries" 1>&2
+	fi
+
+	if test -n "$release"; then
+	  $echo "$modename: warning: \`-release' is ignored for convenience libraries" 1>&2
+	fi
+      else
+
+	# Parse the version information argument.
+	IFS="${IFS= 	}"; save_ifs="$IFS"; IFS=':'
+	set dummy $vinfo 0 0 0
+	IFS="$save_ifs"
+
+	if test -n "$8"; then
+	  $echo "$modename: too many parameters to \`-version-info'" 1>&2
+	  $echo "$help" 1>&2
+	  exit 1
+	fi
+
+	current="$2"
+	revision="$3"
+	age="$4"
+
+	# Check that each of the things are valid numbers.
+	case "$current" in
+	0 | [1-9] | [1-9][0-9]*) ;;
+	*)
+	  $echo "$modename: CURRENT \`$current' is not a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit 1
+	  ;;
+	esac
+
+	case "$revision" in
+	0 | [1-9] | [1-9][0-9]*) ;;
+	*)
+	  $echo "$modename: REVISION \`$revision' is not a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit 1
+	  ;;
+	esac
+
+	case "$age" in
+	0 | [1-9] | [1-9][0-9]*) ;;
+	*)
+	  $echo "$modename: AGE \`$age' is not a nonnegative integer" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit 1
+	  ;;
+	esac
+
+	if test $age -gt $current; then
+	  $echo "$modename: AGE \`$age' is greater than the current interface number \`$current'" 1>&2
+	  $echo "$modename: \`$vinfo' is not valid version information" 1>&2
+	  exit 1
+	fi
+
+	# Calculate the version variables.
+	major=
+	versuffix=
+	verstring=
+	case "$version_type" in
+	none) ;;
+
+	linux)
+	  major=.`expr $current - $age`
+	  versuffix="$major.$age.$revision"
+	  ;;
+
+	osf)
+	  major=`expr $current - $age`
+	  versuffix=".$current.$age.$revision"
+	  verstring="$current.$age.$revision"
+
+	  # Add in all the interfaces that we are compatible with.
+	  loop=$age
+	  while test $loop != 0; do
+	    iface=`expr $current - $loop`
+	    loop=`expr $loop - 1`
+	    verstring="$verstring:${iface}.0"
+	  done
+
+	  # Make executables depend on our current version.
+	  verstring="$verstring:${current}.0"
+	  ;;
+
+	sunos)
+	  major=".$current"
+	  versuffix=".$current.$revision"
+	  ;;
+
+	freebsd-aout)
+	  major=".$current"
+	  versuffix="$current.$revision";
+	  ;;
+
+	freebsd-elf)
+	  major=".$current"
+	  versuffix="$current";
+	  ;;
+
+	windows)
+	  # Like Linux, but with '-' rather than '.', since we only
+	  # want one extension on Windows 95.
+	  major=`expr $current - $age`
+	  versuffix="-$major-$age-$revision"
+	  ;;
+
+	*)
+	  $echo "$modename: unknown library version type \`$version_type'" 1>&2
+	  echo "Fatal configuration error.  See the $PACKAGE docs for more information." 1>&2
+	  exit 1
+	  ;;
+	esac
+
+	# Clear the version info if we defaulted, and they specified a release.
+	if test -z "$vinfo" && test -n "$release"; then
+	  major=
+	  versuffix=
+	  verstring="0.0"
+	  case "$host" in
+	  *-*-sunos*)
+	    versuffix=".0.0"
+	    ;;
+	  esac
+	fi
+
+	# Check to see if the archive will have undefined symbols.
+	if test "$allow_undefined" = yes; then
+	  if test "$allow_undefined_flag" = unsupported; then
+	    $echo "$modename: warning: undefined symbols not allowed in $host shared libraries" 1>&2
+	    build_libtool_libs=no
+	    build_old_libs=yes
+	  fi
+	else
+	  # Don't allow undefined symbols.
+	  allow_undefined_flag="$no_undefined_flag"
+	fi
+
+	# Add libc to deplibs on all systems.
+	dependency_libs="$deplibs"
+	deplibs="$deplibs -lc"
+      fi
+
+      # Create the output directory, or remove our outputs if we need to.
+      if test -d $output_objdir; then
+        $show "${rm}r $output_objdir/$outputname $output_objdir/$libname.* $output_objdir/${libname}${release}.*"
+	$run ${rm}r $output_objdir/$outputname $output_objdir/$libname.* $output_objdir/${libname}${release}.*
+      else
+        $show "$mkdir $output_objdir"
+        $run $mkdir $output_objdir
+        status=$?
+        if test $status -ne 0 && test ! -d $output_objdir; then
+          exit $status
+        fi
+      fi
+
+      # Now set the variables for building old libraries.
+      if test "$build_old_libs" = yes && test "$build_libtool_libs" != convenience ; then
+	oldlibs="$oldlibs $output_objdir/$libname.$libext"
+
+	# Transform .lo files to .o files.
+	oldobjs="$objs"`$echo "X$libobjs " | $Xsed -e 's/[^   ]*\.'${libext}' //g' -e "$los2o" -e 's/ $//g'`
+      fi
+
+      if test "$build_libtool_libs" = yes; then
+        # Transform deplibs into only deplibs that can be linked in shared.
+        ## Gordon: Do you check for the existence of the libraries in deplibs
+        ## on the system?  That should maybe be merged in here someplace....
+        ## Actually: I think test_compile and file_magic do this... file_regex
+        ## sorta does this. Only pas_all needs to be changed.  -Toshio
+        name_save=$name
+        libname_save=$libname
+        release_save=$release
+        versuffix_save=$versuffix
+        major_save=$major
+        # I'm not sure if I'm treating the release correctly.  I think
+        # release should show up in the -l (ie -lgmp5) so we don't want to
+        # add it in twice.  Is that correct?
+        release=""
+        versuffix=""
+        major=""
+        newdeplibs=
+        case "$check_shared_deplibs_method" in
+        pass_all)  
+          newdeplibs=$deplibs 
+                    ;; # Don't check for shared/static.  Everything works.
+                       # This might be a little naive.  We might want to check
+                       # whether the library exists or not.  But this is on
+                       # osf3 & osf4 and I'm not really sure... Just
+                       # implementing what was already the behaviour.
+        test_compile)
+          # This code stresses the "libraries are programs" paradigm to its
+          # limits. Maybe even breaks it.  We compile a program, linking it
+          # against the deplibs as a proxy for the library.  Then we can check
+          # whether they linked in statically or dynamically with ldd.
+          $rm conftest.c
+          cat > conftest.c <<EOF
+          int main() { return 0; }
+EOF
+          $rm a.out
+          $C_compiler conftest.c $deplibs
+          if test $? -eq 0 ; then
+            ldd_output=`ldd a.out`
+            for i in $deplibs; do
+              name="`expr $i : '-l\(.*\)'`"
+              # If $name is empty we are operating on a -L argument.
+              if test "$name" != "" ; then
+                libname=`eval \\$echo \"$libname_spec\"`
+                deplib_matches=`eval \\$echo \"$library_names_spec\"`
+                set dummy $deplib_matches
+                deplib_match=$2
+                if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+                  newdeplibs="$newdeplibs $i"
+                else
+                  echo
+                  echo "*** Warning: This library needs some functionality provided by $i."
+                  echo "*** I have the capability to make that library automatically link in when"
+                  echo "*** you link to this library.  But I can only do this if you have a"
+                  echo "*** shared version of the library, which you do not appear to have."
+                fi
+              else
+                newdeplibs="$newdeplibs $i"
+              fi
+            done
+          else
+            # Error occured in the first compile.  Let's try to salvage the situation:
+            # Compile a seperate program for each library.
+            for i in $deplibs; do
+              name="`expr $i : '-l\(.*\)'`"
+             # If $name is empty we are operating on a -L argument.
+              if test "$name" != "" ; then
+                $rm a.out
+                $C_compiler conftest.c $i
+                # Did it work?
+                if test $? -eq 0 ; then
+                  ldd_output=`ldd a.out`
+                    libname=`eval \\$echo \"$libname_spec\"`
+                    deplib_matches=`eval \\$echo \"$library_names_spec\"`
+                    set dummy $deplib_matches
+                    deplib_match=$2
+                    if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+                      newdeplibs="$newdeplibs $i"
+                    else
+                      echo
+                      echo "*** Warning: This library needs some functionality provided by $i."
+                      echo "*** I have the capability to make that library automatically link in when"
+                      echo "*** you link to this library.  But I can only do this if you have a"
+                      echo "*** shared version of the library, which you do not appear to have."
+                    fi
+                else
+                  echo
+                  echo "*** Warning!  Library $i is needed by this library but I was not able to"
+                  echo "***  make it link in!  You will probably need to install it or some"
+                  echo "*** library that it depends on before this library will be fully"
+                  echo "*** functional.  Installing it before continuing would be even better."
+                fi
+              else
+                newdeplibs="$newdeplibs $i"
+              fi
+            done
+          fi
+          deplibs=$newdeplibs
+          ;;
+        file_magic* | file_regex)
+          set dummy $check_shared_deplibs_method
+          file_magic_regex="`expr \"$check_shared_deplibs_method\" : \"$2\(.*\)\"`"
+          for a_deplib in $deplibs; do
+            name="`expr $a_deplib : '-l\(.*\)'`"
+            # If $name is empty we are operating on a -L argument.
+            if test "$name" != "" ; then
+              libname=`eval \\$echo \"$libname_spec\"`
+              case "$check_shared_deplibs_method" in
+                file_magic*)
+                  for i in $lib_search_path; do
+                   # This needs to be more general than file_regex in order to
+                   # catch things like glibc on linux.  Maybe file_regex
+                   # should be more general as well, but maybe not.  Since
+                   # library names are supposed to conform to
+                   # library_name_spec, I think file_regex should remain
+                   # strict.  What do you think Gordon?
+                    potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+                    for potent_lib in $potential_libs; do
+                      file_output=`file $potent_lib`
+                      if test `expr "$file_output" : ".*$file_magic_regex"` -ne 0 ; then
+                        newdeplibs="$newdeplibs $a_deplib"
+                        a_deplib=""
+                        break 2
+                      fi
+                    done
+                  done
+                  ;;
+                file_regex)
+                  deplib_matches=`eval \\$echo \"$library_names_spec\"`
+                  set dummy $deplib_matches
+                  deplib_match=$2
+                  for i in $lib_search_path; do
+                    potential_libs=`ls $i/$deplib_match* 2>/dev/null`
+                    if test "$potential_libs" != "" ; then
+                      newdeplibs="$newdeplibs $a_deplib"
+                      a_deplib=""
+                      break
+                    fi
+                  done
+                  ;;
+              esac
+              if test "$a_deplib" != "" ; then
+                echo
+                echo "*** Warning: This library needs some functionality provided by $a_deplib."
+                echo "*** I have the capability to make that library automatically link in when"
+                echo "*** you link to this library.  But I can only do this if you have a"
+                echo "*** shared version of the library, which you do not appear to have."
+              fi
+            else
+              # Add a -L argument.
+              newdeplibs="$newdeplibs $a_deplib"
+            fi
+          done # Gone through all deplibs.
+          ;;
+        none | *)  deplibs="" ;;
+        esac
+        versuffix=$versuffix_save
+        major=$major_save
+        release=$release_save
+        libname=$libname_save
+        name=$name_save
+        deplibs=$newdeplibs
+        # Done checking deplibs!
+ 
+	# Get the real and link names of the library.
+	eval library_names=\"$library_names_spec\"
+	set dummy $library_names
+	realname="$2"
+	shift; shift
+
+	if test -n "$soname_spec"; then
+	  eval soname=\"$soname_spec\"
+	else
+	  soname="$realname"
+	fi
+
+	lib="$output_objdir/$realname"
+	for link
+	do
+	  linknames="$linknames $link"
+	done
+
+	# Use standard objects if they are PIC.
+	test -z "$pic_flag" && libobjs=`$echo "X$libobjs " | $Xsed -e "$los2o" -e 's/ $//g'`
+
+	if test -n "$whole_archive_flag_spec"; then
+	  if test -n "$convenience"; then
+	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
+	  fi
+	else
+	  for xlib in $convenience; do
+	    # Extract the objects.
+	    xdir="$xlib"x
+	    generated="$generated $xdir"
+	    xlib=`echo "$xlib" | $Xsed -e 's%^.*/%%'`
+
+	    $show "${rm}r $xdir"
+	    $run ${rm}r "$xdir"
+	    $show "mkdir $xdir"
+	    $run mkdir "$xdir"
+	    status=$?
+	    if test $status -ne 0 && test ! -d "$xdir"; then
+	      exit $status
+	    fi
+	    $show "(cd $xdir && $AR x ../$xlib)"
+	    $run eval "(cd \$xdir && $AR x ../\$xlib)" || exit $?
+
+	    libobjs="$libobjs `echo $xdir/*`"
+	  done
+	fi
+
+	# Do each of the archive commands.
+	if test -n "$export_symbols" && test -n "$archive_sym_cmds"; then
+	  eval cmds=\"$archive_sym_cmds\"
+	else
+	  eval cmds=\"$archive_cmds\"
+	fi
+	IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+	for cmd in $cmds; do
+	  IFS="$save_ifs"
+	  $show "$cmd"
+	  $run eval "$cmd" || exit $?
+	done
+	IFS="$save_ifs"
+
+	# Create links to the real library.
+	for linkname in $linknames; do
+	  if test "$realname" != "$linkname"; then
+	    $show "(cd $output_objdir && $LN_S $realname $linkname)"
+	    $run eval '(cd $output_objdir && $LN_S $realname $linkname)' || exit $?
+	  fi
+	done
+
+	# If -export-dynamic was specified, set the dlname.
+	if test "$export_dynamic" = yes; then
+	  # On all known operating systems, these are identical.
+	  dlname="$soname"
+	fi
+      fi
+      ;;
+
+    *.lo | *.o | *.obj)
+      if test -n "$link_against_libtool_libs"; then
+        $echo "$modename: error: cannot link libtool libraries into objects" 1>&2
+        exit 1
+      fi
+
+      if test -n "$deplibs"; then
+        $echo "$modename: warning: \`-l' and \`-L' are ignored for objects" 1>&2
+      fi
+
+      if test -n "$dlfiles$dlprefiles"; then
+        $echo "$modename: warning: \`-dlopen' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$rpath"; then
+        $echo "$modename: warning: \`-rpath' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$vinfo"; then
+        $echo "$modename: warning: \`-version-info' is ignored for objects" 1>&2
+      fi
+
+      if test -n "$release"; then
+        $echo "$modename: warning: \`-release' is ignored for objects" 1>&2
+      fi
+
+      case "$output" in
+      *.lo)
+        if test -n "$objs"; then
+          $echo "$modename: cannot build library object \`$output' from non-libtool objects" 1>&2
+          exit 1
+        fi
+        libobj="$output"
+        obj=`$echo "X$output" | $Xsed -e "$lo2o"`
+        ;;
+      *)
+        libobj=
+        obj="$output"
+        ;;
+      esac
+
+      # Delete the old objects.
+      $run $rm $obj $libobj
+
+      # Create the old-style object.
+      reload_objs="$objs"`$echo "X$libobjs " | $Xsed -e 's/[^       ]*\.'${libext}' //g' -e 's/[^       ]*\.lib //g' -e "$los2o" -e 's/ $//g'`
+
+      output="$obj"
+      eval cmds=\"$reload_cmds\"
+      IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+        IFS="$save_ifs"
+        $show "$cmd"
+        $run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+
+      # Exit if we aren't doing a library object file.
+      test -z "$libobj" && exit 0
+
+      if test "$build_libtool_libs" != yes; then
+        # Create an invalid libtool object if no PIC, so that we don't
+        # accidentally link it into a program.
+        $show "echo timestamp > $libobj"
+        $run eval "echo timestamp > $libobj" || exit $?
+        exit 0
+      fi
+
+      if test -n "$pic_flag"; then
+        # Only do commands if we really have different PIC objects.
+        reload_objs="$libobjs"
+        output="$libobj"
+        eval cmds=\"$reload_cmds\"
+        IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+        for cmd in $cmds; do
+          IFS="$save_ifs"
+          $show "$cmd"
+          $run eval "$cmd" || exit $?
+        done
+        IFS="$save_ifs"
+      else
+        # Just create a symlink.
+        $show "$LN_S $obj $libobj"
+        $run $LN_S $obj $libobj || exit $?
+      fi
+
+      exit 0
+      ;;
+
+    # Anything else should be a program.
+    *)
+      if test -n "$vinfo"; then
+        $echo "$modename: warning: \`-version-info' is ignored for programs" 1>&2
+      fi
+
+      if test -n "$release"; then
+        $echo "$modename: warning: \`-release' is ignored for programs" 1>&2
+      fi
+
+      if test -n "$rpath"; then
+	# If the user specified any rpath flags, then add them.
+	for libdir in $rpath; do
+          if test -n "$hardcode_libdir_flag_spec"; then
+            if test -n "$hardcode_libdir_separator"; then
+              if test -z "$hardcode_libdirs"; then
+                # Put the magic libdir with the hardcode flag.
+                hardcode_libdirs="$libdir"
+                libdir="@HARDCODE_LIBDIRS@"
+              else
+                # Just accumulate the unique libdirs.
+		case "$hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator" in
+		*"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		  ;;
+		*)
+		  hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		  ;;
+		esac
+                libdir=
+              fi
+            fi
+
+            if test -n "$libdir"; then
+              eval flag=\"$hardcode_libdir_flag_spec\"
+
+              compile_command="$compile_command $flag"
+              finalize_command="$finalize_command $flag"
+            fi
+          elif test -n "$runpath_var"; then
+            case "$perm_rpath " in
+            *" $libdir "*) ;;
+            *) perm_rpath="$perm_rpath $libdir" ;;
+            esac
+          fi
+	done
+      fi
+
+      # Substitute the hardcoded libdirs into the compile commands.
+      if test -n "$hardcode_libdir_separator"; then
+	compile_command=`$echo "X$compile_command" | $Xsed -e "s%@HARDCODE_LIBDIRS@%$hardcode_libdirs%g"`
+	finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@HARDCODE_LIBDIRS@%$hardcode_libdirs%g"`
+      fi
+
+      output_objdir=`$echo "X$output" | $Xsed -e 's%/[^/]*$%%'`
+      if test "X$output_objdir" = "X$output"; then
+        output_objdir="$objdir"
+      else
+        output_objdir="$output_objdir/$objdir"
+      fi
+
+      if test -n "$libobjs" && test "$build_old_libs" = yes; then
+        # Transform all the library objects into standard objects.
+        compile_command=`$echo "X$compile_command " | $Xsed -e "$los2o" -e 's/ $//'`
+        finalize_command=`$echo "X$finalize_command " | $Xsed -e "$los2o" -e 's/ $//'`
+      fi
+
+      if test "$export_dynamic" = yes && test -n "$NM" && test -n "$global_symbol_pipe"; then
+        dlsyms="${outputname}S.c"
+      else
+        dlsyms=
+      fi
+
+      if test -n "$dlsyms"; then
+        case "$dlsyms" in
+        "") ;;
+        *.c)
+          if test -z "$export_symbols"; then
+            # Add our own program objects to the preloaded list.
+            dlprefiles=`$echo "X$objs$dlprefiles " | $Xsed -e "$los2o" -e 's/ $//'`
+          fi
+
+          # Discover the nlist of each of the dlfiles.
+          nlist="$objdir/${output}.nm"
+
+	  if test -d $objdir; then
+	    $show "$rm $nlist ${nlist}T"
+	    $run $rm "$nlist" "${nlist}T"
+	  else
+	    $show "$mkdir $objdir"
+	    $run $mkdir $objdir
+	    status=$?
+	    if test $status -ne 0 && test ! -d $objdir; then
+	      exit $status
+	    fi
+	  fi
+
+          # Parse the name list into a source file.
+          $show "creating $objdir/$dlsyms"
+
+          $echo > "$objdir/$dlsyms" "\
+/* $dlsyms - symbol resolution table for \`$outputname' dlsym emulation. */
+/* Generated by $PROGRAM - GNU $PACKAGE $VERSION */
+
+#ifdef __cplusplus
+extern \"C\" {
+#endif
+
+/* Prevent the only kind of declaration conflicts we can make. */
+#define dld_preloaded_symbols some_other_symbol
+
+/* External symbol declarations for the compiler. */\
+"
+
+          if test -n "$export_symbols"; then
+	    sed -e 's/^\(.*\)/\1 \1/' < "$export_symbols" > "$nlist"
+          fi
+
+          for arg in $dlprefiles; do
+	    $show "extracting global C symbols from \`$arg'"
+	    $run eval "$NM $arg | $global_symbol_pipe >> '$nlist'"
+          done
+
+          if test -z "$run"; then
+	    # Make sure we at least have an empty file.
+	    test -f "$nlist" || : > "$nlist"
+
+	    # Try sorting and uniquifying the output.
+	    if sort "$nlist" | uniq > "$nlist"T; then
+	      mv -f "$nlist"T "$nlist"
+	    else
+	      $rm "$nlist"T
+	    fi
+
+	    if test -f "$nlist"; then
+	      sed -e 's/^.* \(.*\)$/extern char \1;/' < "$nlist" >> "$output_objdir/$dlsyms"
+  	    else
+	      echo '/* NONE */' >> "$output_objdir/$dlsyms"
+  	    fi
+
+	    $echo >> "$output_objdir/$dlsyms" "\
+
+#undef dld_preloaded_symbols
+
+#if defined (__STDC__) && __STDC__
+# define __ptr_t void *
+#else
+# define __ptr_t char *
+#endif
+
+/* The mapping between symbol names and symbols. */
+struct {
+  char *name;
+  __ptr_t address;
+}
+dld_preloaded_symbols[] =
+{\
+"
+
+            if test -n "$export_symbols"; then
+              echo >> "$objdir/$dlsyms" "\
+  {\"${output}\", (__ptr_t) 0},"
+	      sed 's/^\(.*\)/  {"\1", (__ptr_t) \&\1},/' < "$export_symbols" >> "$objdir/$dlsyms"
+            fi
+
+            for arg in $dlprefiles; do
+	      name=`basename $arg`
+              echo >> "$objdir/$dlsyms" "\
+  {\"$name\", (__ptr_t) 0},"
+	      eval "$NM $arg | $global_symbol_pipe > '$nlist'"
+
+	      if test -f "$nlist"; then
+	        sed 's/^\(.*\) \(.*\)$/  {"\1", (__ptr_t) \&\2},/' < "$nlist" >> "$objdir/$dlsyms"
+	      else
+		echo '/* NONE */' >> "$output_objdir/$dlsyms"
+	      fi
+
+            done
+
+	    if test -f "$nlist"; then
+	      sed 's/^\(.*\) \(.*\)$/  {"\1", (__ptr_t) \&\2},/' < "$nlist" >> "$output_objdir/$dlsyms"
+	    fi
+
+	    $echo >> "$output_objdir/$dlsyms" "\
+  {0, (__ptr_t) 0}
+};
+
+#ifdef __cplusplus
+}
+#endif\
+"
+          fi
+
+          # Now compile the dynamic symbol file.
+          $show "(cd $objdir && $C_compiler -c$no_builtin_flag \"$dlsyms\")"
+          $run eval '(cd $objdir && $C_compiler -c$no_builtin_flag "$dlsyms")' || exit $?
+
+          # Transform the symbol file into the correct name.
+          compile_command=`$echo "X$compile_command" | $Xsed -e "s%@SYMFILE@%$objdir/${output}S.${objext}%"`
+          finalize_command=`$echo "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$objdir/${output}S.${objext}%"`
+	  ;;
+        *)
+          $echo "$modename: unknown suffix for \`$dlsyms'" 1>&2
+          exit 1
+          ;;
+        esac
+      elif test "$export_dynamic" != yes; then
+        test -n "$dlfiles$dlprefiles" && $echo "$modename: warning: \`-dlopen' and \`-dlpreopen' are ignored without \`-export-dynamic'" 1>&2
+      else
+        # We keep going just in case the user didn't refer to
+        # dld_preloaded_symbols.  The linker will fail if global_symbol_pipe
+        # really was required.
+        $echo "$modename: not configured to extract global symbols from dlpreopened files" 1>&2
+
+        # Nullify the symbol file.
+        compile_command=`$echo "X$compile_command" | $Xsed -e "s% @SYMFILE@%%"`
+        finalize_command=`$echo "X$finalize_command" | $Xsed -e "s% @SYMFILE@%%"`
+      fi
+
+      if test -z "$link_against_libtool_libs" || test "$build_libtool_libs" != yes; then
+        # Replace the output file specification.
+        compile_command=`$echo "X$compile_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+        finalize_command=`$echo "X$finalize_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+
+        # We have no uninstalled library dependencies, so finalize right now.
+        $show "$compile_command"
+        $run eval "$compile_command"
+        exit $?
+      fi
+
+      # Replace the output file specification.
+      compile_command=`$echo "X$compile_command" | $Xsed -e 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
+      finalize_command=`$echo "X$finalize_command" | $Xsed -e 's%@OUTPUT@%'"$output_objdir/$outputname"'T%g'`
+
+      # Create the binary in the object directory, then wrap it.
+      if test ! -d $output_objdir; then
+        $show "$mkdir $output_objdir"
+	$run $mkdir $output_objdir
+	status=$?
+	if test $status -ne 0 && test ! -d $objdir; then
+	  exit $status
+	fi
+      fi
+
+      if test -n "$shlibpath_var"; then
+        # We should set the shlibpath_var
+        rpath=
+        for dir in $temp_rpath; do
+          case "$dir" in
+          /* | [A-Za-z]:[/\\]*)
+            # Absolute path.
+            rpath="$rpath$dir:"
+            ;;
+          *)
+            # Relative path: add a thisdir entry.
+            rpath="$rpath\$thisdir/$dir:"
+            ;;
+          esac
+        done
+        temp_rpath="$rpath"
+      fi
+
+      # Delete the old output file.
+      $run $rm $output
+
+      if test -n "$compile_shlibpath"; then
+        compile_command="$shlibpath_var=\"$compile_shlibpath\$$shlibpath_var\" $compile_command"
+      fi
+      if test -n "$finalize_shlibpath"; then
+        finalize_command="$shlibpath_var=\"$finalize_shlibpath\$$shlibpath_var\" $finalize_command"
+      fi
+
+      if test -n "$runpath_var" && test -n "$perm_rpath"; then
+        # We should set the runpath_var.
+        rpath=
+        for dir in $perm_rpath; do
+          rpath="$rpath$dir:"
+        done
+        compile_command="$runpath_var=\"$rpath\$$runpath_var\" $compile_command"
+        finalize_command="$runpath_var=\"$rpath\$$runpath_var\" $finalize_command"
+      fi
+
+      if test "$hardcode_action" = relink; then
+        # AGH! Flame the AIX and HP-UX people for me, will ya?
+        $echo "$modename: warning: this platform doesn\'t like uninstalled shared libraries" 1>&2
+        $echo "$modename: \`$output' will be relinked during installation" 1>&2
+      fi
+
+      $show "$compile_command"
+      $run eval "$compile_command" || exit $?
+
+      # Now create the wrapper script.
+      $show "creating $output"
+
+      # Quote the finalize command for shipping.
+      finalize_command=`$echo "X$finalize_command" | $Xsed -e "$sed_quote_subst"`
+
+      # Quote $echo for shipping.
+      if test "X$echo" = "X$SHELL $0 --fallback-echo"; then
+	case "$0" in
+	/* | [A-Za-z]:[/\\]*) qecho="$SHELL $0 --fallback-echo";;
+	*) qecho="$SHELL `pwd`/$0 --fallback-echo";;
+	esac
+	qecho=`$echo "X$qecho" | $Xsed -e "$sed_quote_subst"`
+      else
+        qecho=`$echo "X$echo" | $Xsed -e "$sed_quote_subst"`
+      fi
+
+      # Only actually do things if our run command is non-null.
+      if test -z "$run"; then
+        $rm $output
+        trap "$rm $output; exit 1" 1 2 15
+
+        $echo > $output "\
+#! $SHELL
+
+# $output - temporary wrapper script for $objdir/$outputname
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION
+#
+# The $output program cannot be directly executed until all the libtool
+# libraries that it depends on are installed.
+#
+# This wrapper script should never be moved out of the build directory.
+# If it is, it will not operate correctly.
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed='sed -e s/^X//'
+sed_quote_subst='$sed_quote_subst'
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+if test \"\${CDPATH+set}\" = set; then CDPATH=; export CDPATH; fi
+
+# This environment variable determines our operation mode.
+if test \"\$libtool_install_magic\" = \"$magic\"; then
+  # install mode needs the following variables:
+  link_against_libtool_libs='$link_against_libtool_libs'
+  finalize_command=\"cd `pwd | sed -e $sed_quote_subst`; $finalize_command\"
+else
+  # When we are sourced in execute mode, \$file and \$echo are already set.
+  if test \"\$libtool_execute_magic\" != \"$magic\"; then
+    echo=\"$qecho\"
+    file=\"\$0\"
+    # Make sure echo works.
+    if test \"X\$1\" = X--no-reexec; then
+      # Discard the --no-reexec flag, and continue.
+      shift
+    elif test \"X\`(\$echo '\t') 2>/dev/null\`\" = 'X\t'; then
+      # Yippee, \$echo works!
+      :
+    else
+      # Restart under the correct shell, and then maybe \$echo will work.
+      exec $SHELL \"\$0\" --no-reexec \${1+\"\$@\"}
+    fi
+  fi\
+"
+        $echo >> $output "\
+
+  # Find the directory that this script lives in.
+  thisdir=\`\$echo \"X\$file\" | \$Xsed -e 's%/[^/]*$%%'\`
+  test \"x\$thisdir\" = \"x\$file\" && thisdir=.
+
+  # Follow symbolic links until we get to the real thisdir.
+  file=\`ls -ld \"\$file\" | sed -n 's/.*-> //p'\`
+  while test -n \"\$file\"; do
+    destdir=\`\$echo \"X\$file\" | \$Xsed -e 's%/[^/]*\$%%'\`
+
+    # If there was a directory component, then change thisdir.
+    if test \"x\$destdir\" != \"x\$file\"; then
+      case \"\$destdir\" in
+      /* | [A-Za-z]:[/\\]*) thisdir=\"\$destdir\" ;;
+      *) thisdir=\"\$thisdir/\$destdir\" ;;
+      esac
+    fi
+
+    file=\`\$echo \"X\$file\" | \$Xsed -e 's%^.*/%%'\`
+    file=\`ls -ld \"\$thisdir/\$file\" | sed -n 's/.*-> //p'\`
+  done
+
+  # Try to get the absolute directory name.
+  absdir=\`cd \"\$thisdir\" && pwd\`
+  test -n \"\$absdir\" && thisdir=\"\$absdir\"
+
+  progdir=\"\$thisdir/$objdir\"
+  program='$outputname'
+
+  if test -f \"\$progdir/\$program\"; then"
+
+        # Export our shlibpath_var if we have one.
+        if test -n "$shlibpath_var" && test -n "$temp_rpath"; then
+          $echo >> $output "\
+    # Add our own library path to $shlibpath_var
+    $shlibpath_var=\"$temp_rpath\$$shlibpath_var\"
+
+    # Some systems cannot cope with colon-terminated $shlibpath_var
+    $shlibpath_var=\`\$echo \"X\$$shlibpath_var\" | \$Xsed -e 's/:*\$//'\`
+
+    export $shlibpath_var
+"
+        fi
+
+        $echo >> $output "\
+    if test \"\$libtool_execute_magic\" != \"$magic\"; then
+      # Run the actual program with our arguments.
+
+      # Export the path to the program.
+      PATH=\"\$progdir:\$PATH\"
+      export PATH
+
+      exec \$program \${1+\"\$@\"}
+
+      \$echo \"\$0: cannot exec \$program \${1+\"\$@\"}\"
+      exit 1
+    fi
+  else
+    # The program doesn't exist.
+    \$echo \"\$0: error: \$progdir/\$program does not exist\" 1>&2
+    \$echo \"This script is just a wrapper for \$program.\" 1>&2
+    echo \"See the $PACKAGE documentation for more information.\" 1>&2
+    exit 1
+  fi
+fi\
+"
+        chmod +x $output
+      fi
+      exit 0
+      ;;
+    esac
+
+    # See if we need to build an old-fashioned archive.
+    for oldlib in $oldlibs; do
+
+      if test "$build_libtool_libs" = convenience; then
+	oldobjs="$libobjs"
+	addlibs="$convenience"
+	build_libtool_libs=no
+      else
+	oldobjs="$objs"`$echo "X$libobjs " | $Xsed -e 's/[^   ]*\.'${libext}' //g' -e 's/[^   ]*\.lib //g' -e "$los2o" -e 's/ $//g'`
+	addlibs="$old_convenience"
+      fi
+
+      # Add in members from convenience archives.
+      for xlib in $addlibs; do
+	# Extract the objects.
+	xdir="$xlib"x
+	generated="$generated $xdir"
+	xlib=`echo "$xlib" | $Xsed -e 's%^.*/%%'`
+
+	$show "${rm}r $xdir"
+	$run ${rm}r "$xdir"
+	$show "mkdir $xdir"
+	$run mkdir "$xdir"
+	status=$?
+	if test $status -ne 0 && test ! -d "$xdir"; then
+	  exit $status
+	fi
+	$show "(cd $xdir && $AR x ../$xlib)"
+	$run eval "(cd \$xdir && $AR x ../\$xlib)" || exit $?
+
+	oldobjs="$oldobjs `echo $xdir/*`"
+      done
+
+      # Do each command in the archive commands.
+      if test -n "$old_archive_from_new_cmds" && test "$build_libtool_libs" = yes; then
+	eval cmds=\"$old_archive_from_new_cmds\"
+      else
+	eval cmds=\"$old_archive_cmds\"
+      fi
+      IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+        IFS="$save_ifs"
+        $show "$cmd"
+        $run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+    done
+
+    if test -n "$generated"; then
+      $show "${rm}r$generated"
+      $run ${rm}r$generated
+    fi
+
+    # Now create the libtool archive.
+    case "$output" in
+    *.la)
+      old_library=
+      test "$build_old_libs" = yes && old_library="$libname.$libext"
+      $show "creating $output"
+
+      # Only create the output if not a dry run.
+      if test -z "$run"; then
+        $echo > $output "\
+# $output - a libtool library file
+# Generated by $PROGRAM - GNU $PACKAGE $VERSION
+
+# The name that we can dlopen(3).
+dlname='$dlname'
+
+# Names of this library.
+library_names='$library_names'
+
+# The name of the static archive.
+old_library='$old_library'
+
+# Libraries that this one depends upon.
+dependency_libs='$dependency_libs'
+
+# Version information for $libname.
+current=$current
+age=$age
+revision=$revision
+
+# Is this an already installed library?
+installed=no
+
+# Directory that this library needs to be installed in:
+libdir='$install_libdir'\
+"
+      fi
+
+      # Do a symbolic link so that the libtool archive can be found in
+      # LD_LIBRARY_PATH before the program is installed.
+      $show "(cd $output_objdir && $LN_S ../$outputname $outputname)"
+      $run eval "(cd $output_objdir && $LN_S ../$outputname $outputname)" || exit $?
+      ;;
+    esac
+    exit 0
+    ;;
+
+  # libtool install mode
+  install)
+    modename="$modename: install"
+
+    # There may be an optional sh(1) argument at the beginning of
+    # install_prog (especially on Windows NT).
+    if test "$nonopt" = "$SHELL" || test "$nonopt" = /bin/sh; then
+      # Aesthetically quote it.
+      arg=`$echo "X$nonopt" | $Xsed -e "$sed_quote_subst"`
+      case "$arg" in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*)
+	arg="\"$arg\""
+	;;
+      esac
+      install_prog="$arg "
+      arg="$1"
+      shift
+    else
+      install_prog=
+      arg="$nonopt"
+    fi
+
+    # The real first argument should be the name of the installation program.
+    # Aesthetically quote it.
+    arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+    case "$arg" in
+    *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*)
+      arg="\"$arg\""
+      ;;
+    esac
+    install_prog="$install_prog$arg"
+
+    # We need to accept at least all the BSD install flags.
+    dest=
+    files=
+    opts=
+    prev=
+    install_type=
+    isdir=no
+    stripme=
+    for arg
+    do
+      if test -n "$dest"; then
+        files="$files $dest"
+        dest="$arg"
+        continue
+      fi
+
+      case "$arg" in
+      -d) isdir=yes ;;
+      -f) prev="-f" ;;
+      -g) prev="-g" ;;
+      -m) prev="-m" ;;
+      -o) prev="-o" ;;
+      -s)
+        stripme=" -s"
+        continue
+        ;;
+      -*) ;;
+
+      *)
+        # If the previous option needed an argument, then skip it.
+        if test -n "$prev"; then
+          prev=
+        else
+          dest="$arg"
+          continue
+        fi
+        ;;
+      esac
+
+      # Aesthetically quote the argument.
+      arg=`$echo "X$arg" | $Xsed -e "$sed_quote_subst"`
+      case "$arg" in
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*)
+	arg="\"$arg\""
+	;;
+      esac
+      install_prog="$install_prog $arg"
+    done
+
+    if test -z "$install_prog"; then
+      $echo "$modename: you must specify an install program" 1>&2
+      $echo "$help" 1>&2
+      exit 1
+    fi
+
+    if test -n "$prev"; then
+      $echo "$modename: the \`$prev' option requires an argument" 1>&2
+      $echo "$help" 1>&2
+      exit 1
+    fi
+
+    if test -z "$files"; then
+      if test -z "$dest"; then
+        $echo "$modename: no file or destination specified" 1>&2
+      else
+        $echo "$modename: you must specify a destination" 1>&2
+      fi
+      $echo "$help" 1>&2
+      exit 1
+    fi
+
+    # Strip any trailing slash from the destination.
+    dest=`$echo "X$dest" | $Xsed -e 's%/$%%'`
+
+    # Check to see that the destination is a directory.
+    test -d "$dest" && isdir=yes
+    if test "$isdir" = yes; then
+      destdir="$dest"
+      destname=
+    else
+      destdir=`$echo "X$dest" | $Xsed -e 's%/[^/]*$%%'`
+      test "X$destdir" = "X$dest" && destdir=.
+      destname=`$echo "X$dest" | $Xsed -e 's%^.*/%%'`
+
+      # Not a directory, so check to see that there is only one file specified.
+      set dummy $files
+      if test $# -gt 2; then
+        $echo "$modename: \`$dest' is not a directory" 1>&2
+        $echo "$help" 1>&2
+        exit 1
+      fi
+    fi
+    case "$destdir" in
+    /* | [A-Za-z]:[/\\]*) ;;
+    *)
+      for file in $files; do
+        case "$file" in
+        *.lo) ;;
+        *)
+          $echo "$modename: \`$destdir' must be an absolute directory name" 1>&2
+          $echo "$help" 1>&2
+          exit 1
+          ;;
+        esac
+      done
+      ;;
+    esac
+
+    # This variable tells wrapper scripts just to set variables rather
+    # than running their programs.
+    libtool_install_magic="$magic"
+
+    staticlibs=
+    future_libdirs=
+    current_libdirs=
+    for file in $files; do
+
+      # Do each installation.
+      case "$file" in
+      *.a | *.lib)
+        # Do the static libraries later.
+        staticlibs="$staticlibs $file"
+        ;;
+
+      *.la)
+        # Check to see that this really is a libtool archive.
+        if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+        else
+          $echo "$modename: \`$file' is not a valid libtool archive" 1>&2
+          $echo "$help" 1>&2
+          exit 1
+        fi
+
+        library_names=
+        old_library=
+        # If there is no directory component, then add one.
+        case "$file" in
+        */* | *\\*) . $file ;;
+        *) . ./$file ;;
+        esac
+
+        # Add the libdir to current_libdirs if it is the destination.
+        if test "X$destdir" = "X$libdir"; then
+          case "$current_libdirs " in
+          *" $libdir "*) ;;
+          *) current_libdirs="$current_libdirs $libdir" ;;
+          esac
+        else
+          # Note the libdir as a future libdir.
+          case "$future_libdirs " in
+          *" $libdir "*) ;;
+          *) future_libdirs="$future_libdirs $libdir" ;;
+          esac
+        fi
+
+        dir="`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`/"
+        test "X$dir" = "X$file/" && dir=
+        dir="$dir$objdir"
+
+        # See the names of the shared library.
+        set dummy $library_names
+        if test -n "$2"; then
+          realname="$2"
+          shift
+          shift
+
+          # Install the shared library and build the symlinks.
+          $show "$install_prog $dir/$realname $destdir/$realname"
+          $run eval "$install_prog $dir/$realname $destdir/$realname" || exit $?
+          test "X$dlname" = "X$realname" && dlname=
+
+          if test $# -gt 0; then
+            # Delete the old symlinks, and create new ones.
+            for linkname
+            do
+              test "X$dlname" = "X$linkname" && dlname=
+	      if test "$linkname" != "$realname"; then
+		$show "(cd $destdir && $rm $linkname && $LN_S $realname $linkname)"
+		$run eval "(cd $destdir && $rm $linkname && $LN_S $realname $linkname)"
+	      fi
+            done
+          fi
+
+          if test -n "$dlname"; then
+            # Install the dynamically-loadable library.
+            $show "$install_prog $dir/$dlname $destdir/$dlname"
+            $run eval "$install_prog $dir/$dlname $destdir/$dlname" || exit $?
+          fi
+
+          # Do each command in the postinstall commands.
+          lib="$destdir/$realname"
+          eval cmds=\"$postinstall_cmds\"
+          IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+          for cmd in $cmds; do
+            IFS="$save_ifs"
+            $show "$cmd"
+            $run eval "$cmd" || exit $?
+          done
+          IFS="$save_ifs"
+        fi
+
+        # Install the pseudo-library for information purposes.
+        name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+	instname="$dir/$name"i
+	$show "Creating $instname"
+	$rm "$instname"
+	sed 's/^installed=no$/installed=yes/' "$file" > "$instname"
+        $show "$install_prog $instname $destdir/$name"
+        $run eval "$install_prog $instname $destdir/$name" || exit $?
+	$show "$rm $instname"
+	$rm "$instname"
+
+        # Maybe install the static library, too.
+        test -n "$old_library" && staticlibs="$staticlibs $dir/$old_library"
+        ;;
+
+      *.lo)
+        # Install (i.e. copy) a libtool object.
+
+        # Figure out destination file name, if it wasn't already specified.
+        if test -n "$destname"; then
+          destfile="$destdir/$destname"
+        else
+          destfile=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+          destfile="$destdir/$destfile"
+        fi
+
+        # Deduce the name of the destination old-style object file.
+        case "$destfile" in
+        *.lo)
+          staticdest=`$echo "X$destfile" | $Xsed -e "$lo2o"`
+          ;;
+        *.o | *.obj)
+          staticdest="$destfile"
+          destfile=
+          ;;
+        *)
+          $echo "$modename: cannot copy a libtool object to \`$destfile'" 1>&2
+          $echo "$help" 1>&2
+          exit 1
+          ;;
+        esac
+
+        # Install the libtool object if requested.
+        if test -n "$destfile"; then
+          $show "$install_prog $file $destfile"
+          $run eval "$install_prog $file $destfile" || exit $?
+        fi
+
+        # Install the old object if enabled.
+        if test "$build_old_libs" = yes; then
+          # Deduce the name of the old-style object file.
+          staticobj=`$echo "X$file" | $Xsed -e "$lo2o"`
+
+          $show "$install_prog $staticobj $staticdest"
+          $run eval "$install_prog \$staticobj \$staticdest" || exit $?
+        fi
+        exit 0
+        ;;
+
+      *)
+        # Figure out destination file name, if it wasn't already specified.
+        if test -n "$destname"; then
+          destfile="$destdir/$destname"
+        else
+          destfile=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+          destfile="$destdir/$destfile"
+        fi
+
+        # Do a test to see if this is really a libtool program.
+        if (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+          link_against_libtool_libs=
+          finalize_command=
+
+          # If there is no directory component, then add one.
+          case "$file" in
+          */* | *\\*) . $file ;;
+          *) . ./$file ;;
+          esac
+
+          # Check the variables that should have been set.
+          if test -z "$link_against_libtool_libs" || test -z "$finalize_command"; then
+            $echo "$modename: invalid libtool wrapper script \`$file'" 1>&2
+            exit 1
+          fi
+
+          finalize=yes
+          for lib in $link_against_libtool_libs; do
+            # Check to see that each library is installed.
+            libdir=
+            if test -f "$lib"; then
+              # If there is no directory component, then add one.
+              case "$lib" in
+              */* | *\\*) . $lib ;;
+              *) . ./$lib ;;
+              esac
+            fi
+            libfile="$libdir/`$echo "X$lib" | $Xsed -e 's%^.*/%%g'`"
+            if test -n "$libdir" && test ! -f "$libfile"; then
+              $echo "$modename: warning: \`$lib' has not been installed in \`$libdir'" 1>&2
+              finalize=no
+            fi
+          done
+
+          if test "$hardcode_action" = relink; then
+            if test "$finalize" = yes; then
+              $echo "$modename: warning: relinking \`$file' on behalf of your buggy system linker" 1>&2
+              $show "$finalize_command"
+              if $run eval "$finalize_command"; then :
+              else
+                $echo "$modename: error: relink \`$file' with the above command before installing it" 1>&2
+                continue
+              fi
+              file="$objdir/$file"T
+            else
+              $echo "$modename: warning: cannot relink \`$file' on behalf of your buggy system linker" 1>&2
+            fi
+          else
+            # Install the binary that we compiled earlier.
+	    file=`$echo "X$file" | $Xsed -e "s%\([^/]*\)$%$objdir/\1%"`
+          fi
+        fi
+
+        $show "$install_prog$stripme $file $destfile"
+        $run eval "$install_prog\$stripme \$file \$destfile" || exit $?
+        ;;
+      esac
+    done
+
+    for file in $staticlibs; do
+      name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+
+      # Set up the ranlib parameters.
+      oldlib="$destdir/$name"
+
+      $show "$install_prog $file $oldlib"
+      $run eval "$install_prog \$file \$oldlib" || exit $?
+
+      # Do each command in the postinstall commands.
+      eval cmds=\"$old_postinstall_cmds\"
+      IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+      for cmd in $cmds; do
+        IFS="$save_ifs"
+        $show "$cmd"
+        $run eval "$cmd" || exit $?
+      done
+      IFS="$save_ifs"
+    done
+
+    if test -n "$future_libdirs"; then
+      $echo "$modename: warning: remember to run \`$progname --finish$future_libdirs'" 1>&2
+    fi
+
+    if test -n "$current_libdirs"; then
+      # Maybe just do a dry run.
+      test -n "$run" && current_libdirs=" -n$current_libdirs"
+      exec $SHELL $0 --finish$current_libdirs
+      exit 1
+    fi
+
+    exit 0
+    ;;
+
+  # libtool finish mode
+  finish)
+    modename="$modename: finish"
+    libdirs="$nonopt"
+    admincmds=
+
+    if test -n "$finish_cmds$finish_eval" && test -n "$libdirs"; then
+      for dir
+      do
+        libdirs="$libdirs $dir"
+      done
+
+      for libdir in $libdirs; do
+	if test -n "$finish_cmds"; then
+	  # Do each command in the finish commands.
+	  eval cmds=\"$finish_cmds\"
+          IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+          for cmd in $cmds; do
+            IFS="$save_ifs"
+            $show "$cmd"
+            $run eval "$cmd" || admincmds="$admincmds
+       $cmd"
+          done
+          IFS="$save_ifs"
+	fi
+	if test -n "$finish_eval"; then
+	  # Do the single finish_eval.
+	  eval cmds=\"$finish_eval\"
+	  $run eval "$cmds" || admincmds="$admincmds
+       $cmds"
+	fi
+      done
+    fi
+
+    # Exit here if they wanted silent mode.
+    test "$show" = : && exit 0
+
+    echo "----------------------------------------------------------------------"
+    echo "Libraries have been installed in:"
+    for libdir in $libdirs; do
+      echo "   $libdir"
+    done
+    echo
+    echo "To link against installed libraries in a given directory, LIBDIR,"
+    echo "you must use the \`-LLIBDIR' flag during linking."
+    echo
+    echo " You will also need to do at least one of the following:"
+    if test -n "$shlibpath_var"; then
+      echo "   - add LIBDIR to the \`$shlibpath_var' environment variable"
+      echo "     during execution"
+    fi
+    if test -n "$runpath_var"; then
+      echo "   - add LIBDIR to the \`$runpath_var' environment variable"
+      echo "     during linking"
+    fi
+    if test -n "$hardcode_libdir_flag_spec"; then
+      libdir=LIBDIR
+      eval flag=\"$hardcode_libdir_flag_spec\"
+
+      echo "   - use the \`$flag' linker flag"
+    fi
+    if test -n "$admincmds"; then
+      echo "   - have your system administrator run these commands:$admincmds"
+    fi
+    if test -f /etc/ld.so.conf; then
+      echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
+    fi
+    echo
+    echo "See any operating system documentation about shared libraries for"
+    echo "more information, such as the ld(1) and ld.so(8) manual pages."
+    echo "----------------------------------------------------------------------"
+    exit 0
+    ;;
+
+  # libtool execute mode
+  execute)
+    modename="$modename: execute"
+
+    # The first argument is the command name.
+    cmd="$nonopt"
+    if test -z "$cmd"; then
+      $echo "$modename: you must specify a COMMAND" 1>&2
+      $echo "$help"
+      exit 1
+    fi
+
+    # Handle -dlopen flags immediately.
+    for file in $execute_dlfiles; do
+      if test ! -f "$file"; then
+	$echo "$modename: \`$file' is not a file" 1>&2
+	$echo "$help" 1>&2
+	exit 1
+      fi
+
+      dir=
+      case "$file" in
+      *.la)
+        # Check to see that this really is a libtool archive.
+        if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+        else
+          $echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
+          $echo "$help" 1>&2
+          exit 1
+        fi
+
+	# Read the libtool library.
+	dlname=
+	library_names=
+
+        # If there is no directory component, then add one.
+	case "$file" in
+	*/* | *\\*) . $file ;;
+        *) . ./$file ;;
+	esac
+
+	# Skip this library if it cannot be dlopened.
+	if test -z "$dlname"; then
+	  # Warn if it was a shared library.
+	  test -n "$library_names" && $echo "$modename: warning: \`$file' was not linked with \`-export-dynamic'"
+	  continue
+	fi
+
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$dir" = "X$file" && dir=.
+
+	if test -f "$dir/$objdir/$dlname"; then
+	  dir="$dir/$objdir"
+	else
+	  $echo "$modename: cannot find \`$dlname' in \`$dir' or \`$dir/$objdir'" 1>&2
+	  exit 1
+	fi
+	;;
+
+      *.lo)
+	# Just add the directory containing the .lo file.
+	dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+	test "X$dir" = "X$file" && dir=.
+	;;
+
+      *)
+	$echo "$modename: warning \`-dlopen' is ignored for non-libtool libraries and objects" 1>&2
+        continue
+	;;
+      esac
+
+      # Get the absolute pathname.
+      absdir=`cd "$dir" && pwd`
+      test -n "$absdir" && dir="$absdir"
+
+      # Now add the directory to shlibpath_var.
+      if eval "test -z \"\$$shlibpath_var\""; then
+	eval "$shlibpath_var=\"\$dir\""
+      else
+	eval "$shlibpath_var=\"\$dir:\$$shlibpath_var\""
+      fi
+    done
+
+    # This variable tells wrapper scripts just to set shlibpath_var
+    # rather than running their programs.
+    libtool_execute_magic="$magic"
+
+    # Check if any of the arguments is a wrapper script.
+    args=
+    for file
+    do
+      case "$file" in
+      -*) ;;
+      *)
+        # Do a test to see if this is really a libtool program.
+        if (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	  # If there is no directory component, then add one.
+	  case "$file" in
+	  */* | *\\*) . $file ;;
+	  *) . ./$file ;;
+	  esac
+
+	  # Transform arg to wrapped name.
+	  file="$progdir/$program"
+	fi
+        ;;
+      esac
+      # Quote arguments (to preserve shell metacharacters).
+      file=`$echo "X$file" | $Xsed -e "$sed_quote_subst"`
+      args="$args \"$file\""
+    done
+
+    if test -z "$run"; then
+      # Export the shlibpath_var.
+      eval "export $shlibpath_var"
+
+      # Restore saved enviroment variables
+      if test "${save_LC_ALL+set}" = set; then
+        LC_ALL="$save_LC_ALL"; export LC_ALL
+      fi
+      if test "${save_LANG+set}" = set; then
+        LANG="$save_LANG"; export LANG
+      fi
+
+      # Now actually exec the command.
+      eval "exec \$cmd$args"
+
+      $echo "$modename: cannot exec \$cmd$args"
+      exit 1
+    else
+      # Display what would be done.
+      eval "\$echo \"\$shlibpath_var=\$$shlibpath_var\""
+      $echo "export $shlibpath_var"
+      $echo "$cmd$args"
+      exit 0
+    fi
+    ;;
+
+  # libtool uninstall mode
+  uninstall)
+    modename="$modename: uninstall"
+    rm="$nonopt"
+    files=
+
+    for arg
+    do
+      case "$arg" in
+      -*) rm="$rm $arg" ;;
+      *) files="$files $arg" ;;
+      esac
+    done
+
+    if test -z "$rm"; then
+      $echo "$modename: you must specify an RM program" 1>&2
+      $echo "$help" 1>&2
+      exit 1
+    fi
+
+    for file in $files; do
+      dir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
+      test "X$dir" = "X$file" && dir=.
+      name=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
+
+      rmfiles="$file"
+
+      case "$name" in
+      *.la)
+        # Possibly a libtool archive, so verify it.
+        if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+          . $dir/$name
+
+          # Delete the libtool libraries and symlinks.
+          for n in $library_names; do
+            rmfiles="$rmfiles $dir/$n"
+            test "X$n" = "X$dlname" && dlname=
+          done
+          test -n "$dlname" && rmfiles="$rmfiles $dir/$dlname"
+          test -n "$old_library" && rmfiles="$rmfiles $dir/$old_library"
+
+	  $show "$rm $rmfiles"
+	  $run $rm $rmfiles
+
+	  if test -n "$library_names"; then
+	    # Do each command in the postuninstall commands.
+	    eval cmds=\"$postuninstall_cmds\"
+	    IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+	    for cmd in $cmds; do
+	      IFS="$save_ifs"
+	      $show "$cmd"
+	      $run eval "$cmd"
+	    done
+	    IFS="$save_ifs"
+	  fi
+
+          if test -n "$old_library"; then
+	    # Do each command in the old_postuninstall commands.
+	    eval cmds=\"$old_postuninstall_cmds\"
+	    IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
+	    for cmd in $cmds; do
+	      IFS="$save_ifs"
+	      $show "$cmd"
+	      $run eval "$cmd"
+	    done
+	    IFS="$save_ifs"
+	  fi
+
+          # FIXME: should reinstall the best remaining shared library.
+        fi
+        ;;
+
+      *.lo)
+        if test "$build_old_libs" = yes; then
+          oldobj=`$echo "X$name" | $Xsed -e "$lo2o"`
+          rmfiles="$rmfiles $dir/$oldobj"
+        fi
+	$show "$rm $rmfiles"
+	$run $rm $rmfiles
+        ;;
+
+      *)
+      	$show "$rm $rmfiles"
+	$run $rm $rmfiles
+	;;
+      esac
+    done
+    exit 0
+    ;;
+
+  "")
+    $echo "$modename: you must specify a MODE" 1>&2
+    $echo "$generic_help" 1>&2
+    exit 1
+    ;;
+  esac
+
+  $echo "$modename: invalid operation mode \`$mode'" 1>&2
+  $echo "$generic_help" 1>&2
+  exit 1
+fi # test -z "$show_help"
+
+# We need to display help for each of the modes.
+case "$mode" in
+"") $echo \
+"Usage: $modename [OPTION]... [MODE-ARG]...
+
+Provide generalized library-building support services.
+
+    --config          show all configuration variables
+    --debug           enable verbose shell tracing
+-n, --dry-run         display commands without modifying any files
+    --features        display basic configuration information and exit
+    --finish          same as \`--mode=finish'
+    --help            display this help message and exit
+    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]
+    --quiet           same as \`--silent'
+    --silent          don't print informational messages
+    --version         print version information
+
+MODE must be one of the following:
+
+      compile         compile a source file into a libtool object
+      execute         automatically set library path, then run a program
+      finish          complete the installation of libtool libraries
+      install         install libraries or executables
+      link            create a library or an executable
+      uninstall       remove libraries from an installed directory
+
+MODE-ARGS vary depending on the MODE.  Try \`$modename --help --mode=MODE' for
+a more detailed description of MODE."
+  exit 0
+  ;;
+
+compile)
+  $echo \
+"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE
+
+Compile a source file into a libtool library object.
+
+This mode accepts the following additional options:
+
+  -static           always build a \`.o' file suitable for static linking
+
+COMPILE-COMMAND is a command to be used in creating a \`standard' object file
+from the given SOURCEFILE.
+
+The output file name is determined by removing the directory component from
+SOURCEFILE, then substituting the C source code suffix \`.c' with the
+library object suffix, \`.lo'."
+  ;;
+
+execute)
+  $echo \
+"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...
+
+Automatically set library path, then run a program.
+
+This mode accepts the following additional options:
+
+  -dlopen FILE      add the directory containing FILE to the library path
+
+This mode sets the library path environment variable according to \`-dlopen'
+flags.
+
+If any of the ARGS are libtool executable wrappers, then they are translated
+into their corresponding uninstalled binary, and any of their required library
+directories are added to the library path.
+
+Then, COMMAND is executed, with ARGS as arguments."
+  ;;
+
+finish)
+  $echo \
+"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...
+
+Complete the installation of libtool libraries.
+
+Each LIBDIR is a directory that contains libtool libraries.
+
+The commands that this mode executes may require superuser privileges.  Use
+the \`--dry-run' option if you just want to see what would be executed."
+  ;;
+
+install)
+  $echo \
+"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...
+
+Install executables or libraries.
+
+INSTALL-COMMAND is the installation command.  The first component should be
+either the \`install' or \`cp' program.
+
+The rest of the components are interpreted as arguments to that command (only
+BSD-compatible install options are recognized)."
+  ;;
+
+link)
+  $echo \
+"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...
+
+Link object files or libraries together to form another library, or to
+create an executable program.
+
+LINK-COMMAND is a command using the C compiler that you would use to create
+a program from several object files.
+
+The following components of LINK-COMMAND are treated specially:
+
+  -all-static       do not do any dynamic linking at all
+  -dlopen FILE      \`-dlpreopen' FILE if it cannot be dlopened at runtime
+  -dlpreopen FILE   link in FILE and add its symbols to dld_preloaded_symbols
+  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)
+  -LLIBDIR          search LIBDIR for required installed libraries
+  -lNAME            OUTPUT-FILE requires the installed library libNAME
+  -no-undefined     declare that a library does not refer to external symbols
+  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects
+  -release RELEASE  specify package release information
+  -rpath LIBDIR     the created library will eventually be installed in LIBDIR
+  -static           do not do any dynamic linking of libtool libraries
+  -version-info CURRENT[:REVISION[:AGE]]
+                    specify library version info [each variable defaults to 0]
+
+All other options (arguments beginning with \`-') are ignored.
+
+Every other argument is treated as a filename.  Files ending in \`.la' are
+treated as uninstalled libtool libraries, other files are standard or library
+object files.
+
+If the OUTPUT-FILE ends in \`.la', then a libtool library is created, only
+library objects (\`.lo' files) may be specified, and \`-rpath' is required.
+
+If OUTPUT-FILE ends in \`.a' or \`.lib', then a standard library is created
+using \`ar' and \`ranlib', or on Windows using \`lib'.
+
+If OUTPUT-FILE ends in \`.lo' or \`.${objext}', then a reloadable object file
+is created, otherwise an executable program is created."
+  ;;
+
+uninstall)
+  $echo
+"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...
+
+Remove libraries from an installation directory.
+
+RM is the name of the program to use to delete files associated with each FILE
+(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+to RM.
+
+If FILE is a libtool library, all the files associated with it are deleted.
+Otherwise, only FILE itself is deleted using RM."
+  ;;
+
+*)
+  $echo "$modename: invalid operation mode \`$mode'" 1>&2
+  $echo "$help" 1>&2
+  exit 1
+  ;;
+esac
+
+echo
+$echo "Try \`$modename --help' for more information about other modes."
+
+exit 0
+
+# Local Variables:
+# mode:shell-script
+# sh-indentation:2
+# End:
--- libxbase-2.0.0.orig/xbase-config
+++ libxbase-2.0.0/xbase-config
@@ -0,0 +1,74 @@
+#!/bin/sh
+
+prefix=/usr
+exec_prefix=${prefix}
+exec_prefix_set=no
+CC="gcc"
+CXX="g++"
+LD="@SHARED_LD@"
+
+usage="\
+Usage: xbase-config [--prefix[=DIR]] [--exec-prefix[=DIR]] [--version] [--libs] [--cflags] [--cc] [--cxx] [--ld]"
+
+if test $# -eq 0; then
+      echo "${usage}" 1>&2
+      exit 1
+fi
+
+while test $# -gt 0; do
+  case "$1" in
+  -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
+  *) optarg= ;;
+  esac
+
+  case $1 in
+    --prefix=*)
+      prefix=$optarg
+      if test $exec_prefix_set = no ; then
+        exec_prefix=$optarg
+      fi
+      ;;
+    --prefix)
+      echo $prefix
+      ;;
+    --exec-prefix=*)
+      exec_prefix=$optarg
+      exec_prefix_set=yes
+      ;;
+    --exec-prefix)
+      echo $exec_prefix
+      ;;
+    --version)
+      echo 2.0.0
+      ;;
+    --cflags)
+      if test ${prefix}/include != /usr/include ; then
+        if test ${prefix}/include != /usr/include/c++ ; then
+          includes=-I${prefix}/include
+        fi
+      fi
+      echo $includes 
+      ;;
+    --libs)
+      if test ${exec_prefix}/lib != /usr/lib ; then
+        libs="-L${exec_prefix}/lib"
+      fi
+      echo $libs -lxbase
+      ;;
+    --cc)
+      echo $CC
+      ;;
+    --cxx)
+      echo $CXX
+      ;;
+    --ld)
+      echo $LD
+      ;;
+    *)
+      echo "${usage}" 1>&2
+      exit 1
+      ;;
+  esac
+  shift
+done
+
--- libxbase-2.0.0.orig/config.sub
+++ libxbase-2.0.0/config.sub
@@ -1,6 +1,11 @@
 #! /bin/sh
-# Configuration validation subroutine script, version 1.1.
-#   Copyright (C) 1991, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.
+# Configuration validation subroutine script.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
+#   2011, 2012 Free Software Foundation, Inc.
+
+timestamp='2012-02-10'
+
 # This file is (in principle) common to ALL GNU software.
 # The presence of a machine in this file suggests that SOME GNU software
 # can handle that machine.  It does not imply ALL GNU software can.
@@ -16,20 +21,25 @@
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330,
-# Boston, MA 02111-1307, USA.
-
+# along with this program; if not, see <http://www.gnu.org/licenses/>.
+#
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
 # configuration script generated by Autoconf, you may include it under
 # the same distribution terms that you use for the rest of that program.
 
+
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted GNU ChangeLog entry.
+#
 # Configuration subroutine to validate and canonicalize a configuration type.
 # Supply the specified configuration type as an argument.
 # If it is invalid, we print an error message on stderr and exit with code 1.
 # Otherwise, we print the canonical config type on stdout and succeed.
 
+# You can get the latest version of this script from:
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+
 # This file is supposed to be the same for all GNU packages
 # and recognize all the CPU types, system types and aliases
 # that are meaningful with *any* GNU software.
@@ -45,33 +55,85 @@
 #	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
 # It is wrong to echo any other type of specification.
 
-if [ x$1 = x ]
-then
-	echo Configuration name missing. 1>&2
-	echo "Usage: $0 CPU-MFR-OPSYS" 1>&2
-	echo "or     $0 ALIAS" 1>&2
-	echo where ALIAS is a recognized configuration type. 1>&2
-	exit 1
-fi
+me=`echo "$0" | sed -e 's,.*/,,'`
 
-# First pass through any local machine types.
-case $1 in
-	*local*)
-		echo $1
-		exit 0
-		;;
-	*)
-	;;
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS
+       $0 [OPTION] ALIAS
+
+Canonicalize a configuration name.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
+2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
+Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help"
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo $1
+       exit ;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
 esac
 
 # Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
 # Here we must recognize all the valid KERNEL-OS combinations.
 maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
 case $maybe_os in
-  linux-gnu*)
+  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \
+  linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \
+  knetbsd*-gnu* | netbsd*-gnu* | \
+  kopensolaris*-gnu* | \
+  storm-chaos* | os2-emx* | rtmk-nova*)
     os=-$maybe_os
     basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
     ;;
+  android-linux)
+    os=-linux-android
+    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`-unknown
+    ;;
   *)
     basic_machine=`echo $1 | sed 's/-[^-]*$//'`
     if [ $basic_machine != $1 ]
@@ -94,15 +156,40 @@
 	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
 	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
 	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
-	-apple)
+	-apple | -axis | -knuth | -cray | -microblaze)
 		os=
 		basic_machine=$1
 		;;
+	-bluegene*)
+		os=-cnk
+		;;
+	-sim | -cisco | -oki | -wec | -winbond)
+		os=
+		basic_machine=$1
+		;;
+	-scout)
+		;;
+	-wrs)
+		os=-vxworks
+		basic_machine=$1
+		;;
+	-chorusos*)
+		os=-chorusos
+		basic_machine=$1
+		;;
+	-chorusrdb)
+		os=-chorusrdb
+		basic_machine=$1
+		;;
 	-hiux*)
 		os=-hiuxwe2
 		;;
+	-sco6)
+		os=-sco5v6
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
 	-sco5)
-		os=sco3.2v5
+		os=-sco3.2v5
 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
 		;;
 	-sco4)
@@ -117,10 +204,17 @@
 		# Don't forget version if it is 3.2v4 or newer.
 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
 		;;
+	-sco5v6*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
 	-sco*)
 		os=-sco3.2v2
 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
 		;;
+	-udk*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
 	-isc)
 		os=-isc2.2
 		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
@@ -143,26 +237,120 @@
 	-psos*)
 		os=-psos
 		;;
+	-mint | -mint[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
 esac
 
 # Decode aliases for certain CPU-COMPANY combinations.
 case $basic_machine in
 	# Recognize the basic CPU types without company name.
 	# Some are omitted here because they have special meanings below.
-	tahoe | i860 | m32r | m68k | m68000 | m88k | ns32k | arc | arm \
-		| arme[lb] | pyramid | mn10200 | mn10300 \
-		| tron | a29k | 580 | i960 | h8300 | hppa | hppa1.0 | hppa1.1 \
-		| alpha | alphaev5 | alphaev56 | we32k | ns16k | clipper \
-		| i370 | sh | powerpc | powerpcle | 1750a | dsp16xx | pdp11 \
-		| mips64 | mipsel | mips64el | mips64orion | mips64orionel \
-		| mipstx39 | mipstx39el \
-		| sparc | sparclet | sparclite | sparc64 | v850)
+	1750a | 580 \
+	| a29k \
+	| aarch64 | aarch64_be \
+	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
+	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
+	| am33_2.0 \
+	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr | avr32 \
+        | be32 | be64 \
+	| bfin \
+	| c4x | clipper \
+	| d10v | d30v | dlx | dsp16xx \
+	| epiphany \
+	| fido | fr30 | frv \
+	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+	| hexagon \
+	| i370 | i860 | i960 | ia64 \
+	| ip2k | iq2000 \
+	| le32 | le64 \
+	| lm32 \
+	| m32c | m32r | m32rle | m68000 | m68k | m88k \
+	| maxq | mb | microblaze | mcore | mep | metag \
+	| mips | mipsbe | mipseb | mipsel | mipsle \
+	| mips16 \
+	| mips64 | mips64el \
+	| mips64octeon | mips64octeonel \
+	| mips64orion | mips64orionel \
+	| mips64r5900 | mips64r5900el \
+	| mips64vr | mips64vrel \
+	| mips64vr4100 | mips64vr4100el \
+	| mips64vr4300 | mips64vr4300el \
+	| mips64vr5000 | mips64vr5000el \
+	| mips64vr5900 | mips64vr5900el \
+	| mipsisa32 | mipsisa32el \
+	| mipsisa32r2 | mipsisa32r2el \
+	| mipsisa64 | mipsisa64el \
+	| mipsisa64r2 | mipsisa64r2el \
+	| mipsisa64sb1 | mipsisa64sb1el \
+	| mipsisa64sr71k | mipsisa64sr71kel \
+	| mipstx39 | mipstx39el \
+	| mn10200 | mn10300 \
+	| moxie \
+	| mt \
+	| msp430 \
+	| nds32 | nds32le | nds32be \
+	| nios | nios2 \
+	| ns16k | ns32k \
+	| open8 \
+	| or32 \
+	| pdp10 | pdp11 | pj | pjl \
+	| powerpc | powerpc64 | powerpc64le | powerpcle \
+	| pyramid \
+	| rl78 | rx \
+	| score \
+	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
+	| sh64 | sh64le \
+	| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \
+	| sparcv8 | sparcv9 | sparcv9b | sparcv9v \
+	| spu \
+	| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \
+	| ubicom32 \
+	| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \
+	| we32k \
+	| x86 | xc16x | xstormy16 | xtensa \
+	| z8k | z80)
+		basic_machine=$basic_machine-unknown
+		;;
+	c54x)
+		basic_machine=tic54x-unknown
+		;;
+	c55x)
+		basic_machine=tic55x-unknown
+		;;
+	c6x)
+		basic_machine=tic6x-unknown
+		;;
+	m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | picochip)
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
+		;;
+	ms1)
+		basic_machine=mt-unknown
+		;;
+
+	strongarm | thumb | xscale)
+		basic_machine=arm-unknown
+		;;
+	xgate)
 		basic_machine=$basic_machine-unknown
+		os=-none
 		;;
+	xscaleeb)
+		basic_machine=armeb-unknown
+		;;
+
+	xscaleel)
+		basic_machine=armel-unknown
+		;;
+
 	# We use `pc' rather than `unknown'
 	# because (1) that's what they normally are, and
 	# (2) the word "unknown" tends to confuse beginning users.
-	i[3456]86)
+	i*86 | x86_64)
 	  basic_machine=$basic_machine-pc
 	  ;;
 	# Object if more than one company name word.
@@ -171,27 +359,106 @@
 		exit 1
 		;;
 	# Recognize the basic CPU types with company name.
-	vax-* | tahoe-* | i[3456]86-* | i860-* | m32r-* | m68k-* | m68000-* \
-	      | m88k-* | sparc-* | ns32k-* | fx80-* | arc-* | arm-* | c[123]* \
-	      | mips-* | pyramid-* | tron-* | a29k-* | romp-* | rs6000-* \
-	      | power-* | none-* | 580-* | cray2-* | h8300-* | i960-* \
-	      | xmp-* | ymp-* | hppa-* | hppa1.0-* | hppa1.1-* \
-	      | alpha-* | alphaev5-* | alphaev56-* | we32k-* | cydra-* \
-	      | ns16k-* | pn-* | np1-* | xps100-* | clipper-* | orion-* \
-	      | sparclite-* | pdp11-* | sh-* | powerpc-* | powerpcle-* \
-	      | sparc64-* | mips64-* | mipsel-* \
-	      | mips64el-* | mips64orion-* | mips64orionel-*  \
-	      | mipstx39-* | mipstx39el-* \
-	      | f301-*)
+	580-* \
+	| a29k-* \
+	| aarch64-* | aarch64_be-* \
+	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
+	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
+	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \
+	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
+	| avr-* | avr32-* \
+	| be32-* | be64-* \
+	| bfin-* | bs2000-* \
+	| c[123]* | c30-* | [cjt]90-* | c4x-* \
+	| clipper-* | craynv-* | cydra-* \
+	| d10v-* | d30v-* | dlx-* \
+	| elxsi-* \
+	| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \
+	| h8300-* | h8500-* \
+	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
+	| hexagon-* \
+	| i*86-* | i860-* | i960-* | ia64-* \
+	| ip2k-* | iq2000-* \
+	| le32-* | le64-* \
+	| lm32-* \
+	| m32c-* | m32r-* | m32rle-* \
+	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
+	| m88110-* | m88k-* | maxq-* | mcore-* | metag-* | microblaze-* \
+	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
+	| mips16-* \
+	| mips64-* | mips64el-* \
+	| mips64octeon-* | mips64octeonel-* \
+	| mips64orion-* | mips64orionel-* \
+	| mips64r5900-* | mips64r5900el-* \
+	| mips64vr-* | mips64vrel-* \
+	| mips64vr4100-* | mips64vr4100el-* \
+	| mips64vr4300-* | mips64vr4300el-* \
+	| mips64vr5000-* | mips64vr5000el-* \
+	| mips64vr5900-* | mips64vr5900el-* \
+	| mipsisa32-* | mipsisa32el-* \
+	| mipsisa32r2-* | mipsisa32r2el-* \
+	| mipsisa64-* | mipsisa64el-* \
+	| mipsisa64r2-* | mipsisa64r2el-* \
+	| mipsisa64sb1-* | mipsisa64sb1el-* \
+	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
+	| mipstx39-* | mipstx39el-* \
+	| mmix-* \
+	| mt-* \
+	| msp430-* \
+	| nds32-* | nds32le-* | nds32be-* \
+	| nios-* | nios2-* \
+	| none-* | np1-* | ns16k-* | ns32k-* \
+	| open8-* \
+	| orion-* \
+	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
+	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \
+	| pyramid-* \
+	| rl78-* | romp-* | rs6000-* | rx-* \
+	| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
+	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
+	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
+	| sparclite-* \
+	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \
+	| tahoe-* \
+	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
+	| tile*-* \
+	| tron-* \
+	| ubicom32-* \
+	| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \
+	| vax-* \
+	| we32k-* \
+	| x86-* | x86_64-* | xc16x-* | xps100-* \
+	| xstormy16-* | xtensa*-* \
+	| ymp-* \
+	| z8k-* | z80-*)
+		;;
+	# Recognize the basic CPU types without company name, with glob match.
+	xtensa*)
+		basic_machine=$basic_machine-unknown
 		;;
 	# Recognize the various machine names and aliases which stand
 	# for a CPU type and a company and sometimes even an OS.
+	386bsd)
+		basic_machine=i386-unknown
+		os=-bsd
+		;;
 	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
 		basic_machine=m68000-att
 		;;
 	3b*)
 		basic_machine=we32k-att
 		;;
+	a29khif)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	abacus)
+		basic_machine=abacus-unknown
+		;;
+	adobe68k)
+		basic_machine=m68010-adobe
+		os=-scout
+		;;
 	alliant | fx80)
 		basic_machine=fx80-alliant
 		;;
@@ -202,25 +469,39 @@
 		basic_machine=a29k-none
 		os=-bsd
 		;;
+	amd64)
+		basic_machine=x86_64-pc
+		;;
+	amd64-*)
+		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
 	amdahl)
 		basic_machine=580-amdahl
 		os=-sysv
 		;;
 	amiga | amiga-*)
-		basic_machine=m68k-cbm
+		basic_machine=m68k-unknown
 		;;
 	amigaos | amigados)
-		basic_machine=m68k-cbm
+		basic_machine=m68k-unknown
 		os=-amigaos
 		;;
 	amigaunix | amix)
-		basic_machine=m68k-cbm
+		basic_machine=m68k-unknown
 		os=-sysv4
 		;;
 	apollo68)
 		basic_machine=m68k-apollo
 		os=-sysv
 		;;
+	apollo68bsd)
+		basic_machine=m68k-apollo
+		os=-bsd
+		;;
+	aros)
+		basic_machine=i386-pc
+		os=-aros
+		;;
 	aux)
 		basic_machine=m68k-apple
 		os=-aux
@@ -229,6 +510,35 @@
 		basic_machine=ns32k-sequent
 		os=-dynix
 		;;
+	blackfin)
+		basic_machine=bfin-unknown
+		os=-linux
+		;;
+	blackfin-*)
+		basic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	bluegene*)
+		basic_machine=powerpc-ibm
+		os=-cnk
+		;;
+	c54x-*)
+		basic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	c55x-*)
+		basic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	c6x-*)
+		basic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	c90)
+		basic_machine=c90-cray
+		os=-unicos
+		;;
+	cegcc)
+		basic_machine=arm-unknown
+		os=-cegcc
+		;;
 	convex-c1)
 		basic_machine=c1-convex
 		os=-bsd
@@ -249,27 +559,45 @@
 		basic_machine=c38-convex
 		os=-bsd
 		;;
-	cray | ymp)
-		basic_machine=ymp-cray
-		os=-unicos
-		;;
-	cray2)
-		basic_machine=cray2-cray
+	cray | j90)
+		basic_machine=j90-cray
 		os=-unicos
 		;;
-	[ctj]90-cray)
-		basic_machine=c90-cray
-		os=-unicos
+	craynv)
+		basic_machine=craynv-cray
+		os=-unicosmp
+		;;
+	cr16 | cr16-*)
+		basic_machine=cr16-unknown
+		os=-elf
 		;;
 	crds | unos)
 		basic_machine=m68k-crds
 		;;
+	crisv32 | crisv32-* | etraxfs*)
+		basic_machine=crisv32-axis
+		;;
+	cris | cris-* | etrax*)
+		basic_machine=cris-axis
+		;;
+	crx)
+		basic_machine=crx-unknown
+		os=-elf
+		;;
 	da30 | da30-*)
 		basic_machine=m68k-da30
 		;;
 	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
 		basic_machine=mips-dec
 		;;
+	decsystem10* | dec10*)
+		basic_machine=pdp10-dec
+		os=-tops10
+		;;
+	decsystem20* | dec20*)
+		basic_machine=pdp10-dec
+		os=-tops20
+		;;
 	delta | 3300 | motorola-3300 | motorola-delta \
 	      | 3300-motorola | delta-motorola)
 		basic_machine=m68k-motorola
@@ -278,6 +606,14 @@
 		basic_machine=m88k-motorola
 		os=-sysv3
 		;;
+	dicos)
+		basic_machine=i686-pc
+		os=-dicos
+		;;
+	djgpp)
+		basic_machine=i586-pc
+		os=-msdosdjgpp
+		;;
 	dpx20 | dpx20-*)
 		basic_machine=rs6000-bull
 		os=-bosx
@@ -297,6 +633,10 @@
 	encore | umax | mmax)
 		basic_machine=ns32k-encore
 		;;
+	es1800 | OSE68k | ose68k | ose | OSE)
+		basic_machine=m68k-ericsson
+		os=-ose
+		;;
 	fx2800)
 		basic_machine=i860-alliant
 		;;
@@ -307,6 +647,10 @@
 		basic_machine=tron-gmicro
 		os=-sysv
 		;;
+	go32)
+		basic_machine=i386-pc
+		os=-go32
+		;;
 	h3050r* | hiux*)
 		basic_machine=hppa1.1-hitachi
 		os=-hiuxwe2
@@ -315,6 +659,14 @@
 		basic_machine=h8300-hitachi
 		os=-hms
 		;;
+	h8300xray)
+		basic_machine=h8300-hitachi
+		os=-xray
+		;;
+	h8500hms)
+		basic_machine=h8500-hitachi
+		os=-hms
+		;;
 	harris)
 		basic_machine=m88k-harris
 		os=-sysv3
@@ -330,13 +682,30 @@
 		basic_machine=m68k-hp
 		os=-hpux
 		;;
+	hp3k9[0-9][0-9] | hp9[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
 	hp9k2[0-9][0-9] | hp9k31[0-9])
 		basic_machine=m68000-hp
 		;;
 	hp9k3[2-9][0-9])
 		basic_machine=m68k-hp
 		;;
-	hp9k7[0-9][0-9] | hp7[0-9][0-9] | hp9k8[0-9]7 | hp8[0-9]7)
+	hp9k6[0-9][0-9] | hp6[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k7[0-79][0-9] | hp7[0-79][0-9])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k78[0-9] | hp78[0-9])
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][13679] | hp8[0-9][13679])
 		basic_machine=hppa1.1-hp
 		;;
 	hp9k8[0-9][0-9] | hp8[0-9][0-9])
@@ -345,27 +714,41 @@
 	hppa-next)
 		os=-nextstep3
 		;;
+	hppaosf)
+		basic_machine=hppa1.1-hp
+		os=-osf
+		;;
+	hppro)
+		basic_machine=hppa1.1-hp
+		os=-proelf
+		;;
 	i370-ibm* | ibm*)
 		basic_machine=i370-ibm
-		os=-mvs
 		;;
-# I'm not sure what "Sysv32" means.  Should this be sysv3.2?
-	i[3456]86v32)
+	i*86v32)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-sysv32
 		;;
-	i[3456]86v4*)
+	i*86v4*)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-sysv4
 		;;
-	i[3456]86v)
+	i*86v)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-sysv
 		;;
-	i[3456]86sol2)
+	i*86sol2)
 		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
 		os=-solaris2
 		;;
+	i386mach)
+		basic_machine=i386-mach
+		os=-mach
+		;;
+	i386-vsta | vsta)
+		basic_machine=i386-unknown
+		os=-vsta
+		;;
 	iris | iris4d)
 		basic_machine=mips-sgi
 		case $os in
@@ -380,6 +763,14 @@
 		basic_machine=m68k-isi
 		os=-sysv
 		;;
+	m68knommu)
+		basic_machine=m68k-unknown
+		os=-linux
+		;;
+	m68knommu-*)
+		basic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
 	m88k-omron*)
 		basic_machine=m88k-omron
 		;;
@@ -391,16 +782,23 @@
 		basic_machine=ns32k-utek
 		os=-sysv
 		;;
+	microblaze)
+		basic_machine=microblaze-xilinx
+		;;
+	mingw32)
+		basic_machine=i386-pc
+		os=-mingw32
+		;;
+	mingw32ce)
+		basic_machine=arm-unknown
+		os=-mingw32ce
+		;;
 	miniframe)
 		basic_machine=m68000-convergent
 		;;
-	mipsel*-linux*)
-		basic_machine=mipsel-unknown
-		os=-linux-gnu
-		;;
-	mips*-linux*)
-		basic_machine=mips-unknown
-		os=-linux-gnu
+	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
 		;;
 	mips3*-*)
 		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
@@ -408,10 +806,45 @@
 	mips3*)
 		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
 		;;
+	monitor)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	morphos)
+		basic_machine=powerpc-unknown
+		os=-morphos
+		;;
+	msdos)
+		basic_machine=i386-pc
+		os=-msdos
+		;;
+	ms1-*)
+		basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`
+		;;
+	msys)
+		basic_machine=i386-pc
+		os=-msys
+		;;
+	mvs)
+		basic_machine=i370-ibm
+		os=-mvs
+		;;
+	nacl)
+		basic_machine=le32-unknown
+		os=-nacl
+		;;
 	ncr3000)
 		basic_machine=i486-ncr
 		os=-sysv4
 		;;
+	netbsd386)
+		basic_machine=i386-unknown
+		os=-netbsd
+		;;
+	netwinder)
+		basic_machine=armv4l-rebel
+		os=-linux
+		;;
 	news | news700 | news800 | news900)
 		basic_machine=m68k-sony
 		os=-newsos
@@ -424,6 +857,10 @@
 		basic_machine=mips-sony
 		os=-newsos
 		;;
+	necv70)
+		basic_machine=v70-nec
+		os=-sysv
+		;;
 	next | m*-next )
 		basic_machine=m68k-next
 		case $os in
@@ -449,9 +886,45 @@
 		basic_machine=i960-intel
 		os=-nindy
 		;;
+	mon960)
+		basic_machine=i960-intel
+		os=-mon960
+		;;
+	nonstopux)
+		basic_machine=mips-compaq
+		os=-nonstopux
+		;;
 	np1)
 		basic_machine=np1-gould
 		;;
+	neo-tandem)
+		basic_machine=neo-tandem
+		;;
+	nse-tandem)
+		basic_machine=nse-tandem
+		;;
+	nsr-tandem)
+		basic_machine=nsr-tandem
+		;;
+	op50n-* | op60c-*)
+		basic_machine=hppa1.1-oki
+		os=-proelf
+		;;
+	openrisc | openrisc-*)
+		basic_machine=or32-unknown
+		;;
+	os400)
+		basic_machine=powerpc-ibm
+		os=-os400
+		;;
+	OSE68000 | ose68000)
+		basic_machine=m68000-ericsson
+		os=-ose
+		;;
+	os68k)
+		basic_machine=m68k-none
+		os=-os68k
+		;;
 	pa-hitachi)
 		basic_machine=hppa1.1-hitachi
 		os=-hiuxwe2
@@ -460,59 +933,124 @@
 		basic_machine=i860-intel
 		os=-osf
 		;;
+	parisc)
+		basic_machine=hppa-unknown
+		os=-linux
+		;;
+	parisc-*)
+		basic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
 	pbd)
 		basic_machine=sparc-tti
 		;;
 	pbb)
 		basic_machine=m68k-tti
 		;;
-        pc532 | pc532-*)
+	pc532 | pc532-*)
 		basic_machine=ns32k-pc532
 		;;
-	pentium | p5)
-		basic_machine=i586-intel
+	pc98)
+		basic_machine=i386-pc
+		;;
+	pc98-*)
+		basic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	pentiumpro | p6)
-		basic_machine=i686-intel
+	pentium | p5 | k5 | k6 | nexgen | viac3)
+		basic_machine=i586-pc
 		;;
-	pentium-* | p5-*)
+	pentiumpro | p6 | 6x86 | athlon | athlon_*)
+		basic_machine=i686-pc
+		;;
+	pentiumii | pentium2 | pentiumiii | pentium3)
+		basic_machine=i686-pc
+		;;
+	pentium4)
+		basic_machine=i786-pc
+		;;
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
 		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	pentiumpro-* | p6-*)
+	pentiumpro-* | p6-* | 6x86-* | athlon-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
 		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
-	k5)
-		# We don't have specific support for AMD's K5 yet, so just call it a Pentium
-		basic_machine=i586-amd
-		;;
-	nexen)
-		# We don't have specific support for Nexgen yet, so just call it a Pentium
-		basic_machine=i586-nexgen
+	pentium4-*)
+		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
 	pn)
 		basic_machine=pn-gould
 		;;
-	power)	basic_machine=rs6000-ibm
+	power)	basic_machine=power-ibm
+		;;
+	ppc | ppcbe)	basic_machine=powerpc-unknown
 		;;
-	ppc)	basic_machine=powerpc-unknown
-	        ;;
-	ppc-*)	basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+	ppc-* | ppcbe-*)
+		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
 	ppcle | powerpclittle | ppc-le | powerpc-little)
 		basic_machine=powerpcle-unknown
-	        ;;
+		;;
 	ppcle-* | powerpclittle-*)
 		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
 		;;
+	ppc64)	basic_machine=powerpc64-unknown
+		;;
+	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+		basic_machine=powerpc64le-unknown
+		;;
+	ppc64le-* | powerpc64little-*)
+		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
 	ps2)
 		basic_machine=i386-ibm
 		;;
+	pw32)
+		basic_machine=i586-unknown
+		os=-pw32
+		;;
+	rdos)
+		basic_machine=i386-pc
+		os=-rdos
+		;;
+	rom68k)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
 	rm[46]00)
 		basic_machine=mips-siemens
 		;;
 	rtpc | rtpc-*)
 		basic_machine=romp-ibm
 		;;
+	s390 | s390-*)
+		basic_machine=s390-ibm
+		;;
+	s390x | s390x-*)
+		basic_machine=s390x-ibm
+		;;
+	sa29200)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	sb1)
+		basic_machine=mipsisa64sb1-unknown
+		;;
+	sb1el)
+		basic_machine=mipsisa64sb1el-unknown
+		;;
+	sde)
+		basic_machine=mipsisa32-sde
+		os=-elf
+		;;
+	sei)
+		basic_machine=mips-sei
+		os=-seiux
+		;;
 	sequent)
 		basic_machine=i386-sequent
 		;;
@@ -520,6 +1058,16 @@
 		basic_machine=sh-hitachi
 		os=-hms
 		;;
+	sh5el)
+		basic_machine=sh5le-unknown
+		;;
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparclite-wrs | simso-wrs)
+		basic_machine=sparclite-wrs
+		os=-vxworks
+		;;
 	sps7)
 		basic_machine=m68k-bull
 		os=-sysv2
@@ -527,6 +1075,16 @@
 	spur)
 		basic_machine=spur-unknown
 		;;
+	st2000)
+		basic_machine=m68k-tandem
+		;;
+	stratus)
+		basic_machine=i860-stratus
+		os=-sysv4
+		;;
+	strongarm-* | thumb-*)
+		basic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
 	sun2)
 		basic_machine=m68000-sun
 		;;
@@ -567,19 +1125,43 @@
 	sun386 | sun386i | roadrunner)
 		basic_machine=i386-sun
 		;;
+	sv1)
+		basic_machine=sv1-cray
+		os=-unicos
+		;;
 	symmetry)
 		basic_machine=i386-sequent
 		os=-dynix
 		;;
+	t3e)
+		basic_machine=alphaev5-cray
+		os=-unicos
+		;;
+	t90)
+		basic_machine=t90-cray
+		os=-unicos
+		;;
+	tile*)
+		basic_machine=$basic_machine-unknown
+		os=-linux-gnu
+		;;
 	tx39)
 		basic_machine=mipstx39-unknown
 		;;
 	tx39el)
 		basic_machine=mipstx39el-unknown
 		;;
+	toad1)
+		basic_machine=pdp10-xkl
+		os=-tops20
+		;;
 	tower | tower-32)
 		basic_machine=m68k-ncr
 		;;
+	tpf)
+		basic_machine=s390x-ibm
+		os=-tpf
+		;;
 	udi29k)
 		basic_machine=a29k-amd
 		os=-udi
@@ -588,6 +1170,10 @@
 		basic_machine=a29k-nyu
 		os=-sym1
 		;;
+	v810 | necv810)
+		basic_machine=v810-nec
+		os=-none
+		;;
 	vaxv)
 		basic_machine=vax-dec
 		os=-sysv
@@ -597,8 +1183,8 @@
 		os=-vms
 		;;
 	vpp*|vx|vx-*)
-               basic_machine=f301-fujitsu
-               ;;
+		basic_machine=f301-fujitsu
+		;;
 	vxworks960)
 		basic_machine=i960-wrs
 		os=-vxworks
@@ -611,13 +1197,36 @@
 		basic_machine=a29k-wrs
 		os=-vxworks
 		;;
-	xmp)
-		basic_machine=xmp-cray
-		os=-unicos
+	w65*)
+		basic_machine=w65-wdc
+		os=-none
+		;;
+	w89k-*)
+		basic_machine=hppa1.1-winbond
+		os=-proelf
+		;;
+	xbox)
+		basic_machine=i686-pc
+		os=-mingw32
 		;;
-        xps | xps100)
+	xps | xps100)
 		basic_machine=xps100-honeywell
 		;;
+	xscale-* | xscalee[bl]-*)
+		basic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`
+		;;
+	ymp)
+		basic_machine=ymp-cray
+		os=-unicos
+		;;
+	z8k-*-coff)
+		basic_machine=z8k-unknown
+		os=-sim
+		;;
+	z80-*-coff)
+		basic_machine=z80-unknown
+		os=-sim
+		;;
 	none)
 		basic_machine=none-none
 		os=-none
@@ -625,32 +1234,44 @@
 
 # Here we handle the default manufacturer of certain CPU types.  It is in
 # some cases the only manufacturer, in others, it is the most popular.
-	mips)
-		if [ x$os = x-linux-gnu ]; then
-			basic_machine=mips-unknown
-		else
-			basic_machine=mips-mips
-		fi
+	w89k)
+		basic_machine=hppa1.1-winbond
+		;;
+	op50n)
+		basic_machine=hppa1.1-oki
+		;;
+	op60c)
+		basic_machine=hppa1.1-oki
 		;;
 	romp)
 		basic_machine=romp-ibm
 		;;
+	mmix)
+		basic_machine=mmix-knuth
+		;;
 	rs6000)
 		basic_machine=rs6000-ibm
 		;;
 	vax)
 		basic_machine=vax-dec
 		;;
+	pdp10)
+		# there are many clones, so DEC is not a safe bet
+		basic_machine=pdp10-unknown
+		;;
 	pdp11)
 		basic_machine=pdp11-dec
 		;;
 	we32k)
 		basic_machine=we32k-att
 		;;
-	sparc)
+	sh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)
+		basic_machine=sh-unknown
+		;;
+	sparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)
 		basic_machine=sparc-sun
 		;;
-        cydra)
+	cydra)
 		basic_machine=cydra-cydrome
 		;;
 	orion)
@@ -659,6 +1280,15 @@
 	orion105)
 		basic_machine=clipper-highlevel
 		;;
+	mac | mpw | mac-mpw)
+		basic_machine=m68k-apple
+		;;
+	pmac | pmac-mpw)
+		basic_machine=powerpc-apple
+		;;
+	*-unknown)
+		# Make sure to match an already-canonicalized machine name.
+		;;
 	*)
 		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
 		exit 1
@@ -682,9 +1312,12 @@
 if [ x"$os" != x"" ]
 then
 case $os in
-        # First match some system type aliases
-        # that might get confused with valid system types.
+	# First match some system type aliases
+	# that might get confused with valid system types.
 	# -solaris* is a basic system type, with this one exception.
+	-auroraux)
+		os=-auroraux
+		;;
 	-solaris1 | -solaris1.*)
 		os=`echo $os | sed -e 's|solaris1|sunos4|'`
 		;;
@@ -705,20 +1338,57 @@
 	# Each alternative MUST END IN A *, to match a version number.
 	# -sysv* is not here because it comes later, after sysvr4.
 	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
-	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -sunos | -sunos[34]*\
-	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \
+	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\
+	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
+	      | -sym* | -kopensolaris* \
 	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
-	      | -aos* \
+	      | -aos* | -aros* \
 	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
 	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
-	      | -hiux* | -386bsd* | -netbsd* | -openbsd* | -freebsd* | -riscix* \
-	      | -lynxos* | -bosx* | -nextstep* | -cxux* | -aout* | -elf* \
+	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
+	      | -openbsd* | -solidbsd* \
+	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
+	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
 	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
-	      | -cygwin32* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
-	      | -mingw32* | -linux-gnu* | -uxpv*)
+	      | -chorusos* | -chorusrdb* | -cegcc* \
+	      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
+	      | -mingw32* | -linux-gnu* | -linux-android* \
+	      | -linux-newlib* | -linux-uclibc* \
+	      | -uxpv* | -beos* | -mpeix* | -udk* \
+	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
+	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
+	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
+	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
+	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
+	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
+	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
+	-qnx*)
+		case $basic_machine in
+		    x86-* | i*86-*)
+			;;
+		    *)
+			os=-nto$os
+			;;
+		esac
+		;;
+	-nto-qnx*)
+		;;
+	-nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+		;;
+	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
+	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \
+	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
+		;;
+	-mac*)
+		os=`echo $os | sed -e 's|mac|macos|'`
+		;;
+	-linux-dietlibc)
+		os=-linux-dietlibc
+		;;
 	-linux*)
 		os=`echo $os | sed -e 's|linux|linux-gnu|'`
 		;;
@@ -728,6 +1398,15 @@
 	-sunos6*)
 		os=`echo $os | sed -e 's|sunos6|solaris3|'`
 		;;
+	-opened*)
+		os=-openedition
+		;;
+	-os400*)
+		os=-os400
+		;;
+	-wince*)
+		os=-wince
+		;;
 	-osfrose*)
 		os=-osfrose
 		;;
@@ -743,11 +1422,26 @@
 	-acis*)
 		os=-aos
 		;;
+	-atheos*)
+		os=-atheos
+		;;
+	-syllable*)
+		os=-syllable
+		;;
+	-386bsd)
+		os=-bsd
+		;;
 	-ctix* | -uts*)
 		os=-sysv
 		;;
+	-nova*)
+		os=-rtmk-nova
+		;;
 	-ns2 )
-	        os=-nextstep2
+		os=-nextstep2
+		;;
+	-nsk*)
+		os=-nsk
 		;;
 	# Preserve the version number of sinix5.
 	-sinix5.*)
@@ -756,6 +1450,9 @@
 	-sinix*)
 		os=-sysv4
 		;;
+	-tpf*)
+		os=-tpf
+		;;
 	-triton*)
 		os=-sysv3
 		;;
@@ -774,9 +1471,32 @@
 	# This must come after -sysvr4.
 	-sysv*)
 		;;
+	-ose*)
+		os=-ose
+		;;
+	-es1800*)
+		os=-ose
+		;;
 	-xenix)
 		os=-xenix
 		;;
+	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+		os=-mint
+		;;
+	-aros*)
+		os=-aros
+		;;
+	-kaos*)
+		os=-kaos
+		;;
+	-zvmoe)
+		os=-zvmoe
+		;;
+	-dicos*)
+		os=-dicos
+		;;
+	-nacl*)
+		;;
 	-none)
 		;;
 	*)
@@ -799,13 +1519,38 @@
 # system, and we'll never get to this point.
 
 case $basic_machine in
+	score-*)
+		os=-elf
+		;;
+	spu-*)
+		os=-elf
+		;;
 	*-acorn)
 		os=-riscix1.2
 		;;
+	arm*-rebel)
+		os=-linux
+		;;
 	arm*-semi)
 		os=-aout
 		;;
-        pdp11-*)
+	c4x-* | tic4x-*)
+		os=-coff
+		;;
+	tic54x-*)
+		os=-coff
+		;;
+	tic55x-*)
+		os=-coff
+		;;
+	tic6x-*)
+		os=-coff
+		;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=-tops20
+		;;
+	pdp11-*)
 		os=-none
 		;;
 	*-dec | vax-*)
@@ -819,9 +1564,21 @@
 		;;
 	m68000-sun)
 		os=-sunos3
-		# This also exists in the configure program, but was not the
-		# default.
-		# os=-sunos4
+		;;
+	m68*-cisco)
+		os=-aout
+		;;
+	mep-*)
+		os=-elf
+		;;
+	mips*-cisco)
+		os=-elf
+		;;
+	mips*-*)
+		os=-elf
+		;;
+	or32-*)
+		os=-coff
 		;;
 	*-tti)	# must be before sparc entry or we get the wrong os.
 		os=-sysv3
@@ -829,9 +1586,27 @@
 	sparc-* | *-sun)
 		os=-sunos4.1.1
 		;;
+	*-be)
+		os=-beos
+		;;
+	*-haiku)
+		os=-haiku
+		;;
 	*-ibm)
 		os=-aix
 		;;
+	*-knuth)
+		os=-mmixware
+		;;
+	*-wec)
+		os=-proelf
+		;;
+	*-winbond)
+		os=-proelf
+		;;
+	*-oki)
+		os=-proelf
+		;;
 	*-hp)
 		os=-hpux
 		;;
@@ -874,27 +1649,39 @@
 	*-next)
 		os=-nextstep3
 		;;
-        *-gould)
+	*-gould)
 		os=-sysv
 		;;
-        *-highlevel)
+	*-highlevel)
 		os=-bsd
 		;;
 	*-encore)
 		os=-bsd
 		;;
-        *-sgi)
+	*-sgi)
 		os=-irix
 		;;
-        *-siemens)
+	*-siemens)
 		os=-sysv4
 		;;
 	*-masscomp)
 		os=-rtu
 		;;
-	f301-fujitsu)
+	f30[01]-fujitsu | f700-fujitsu)
 		os=-uxpv
 		;;
+	*-rom68k)
+		os=-coff
+		;;
+	*-*bug)
+		os=-coff
+		;;
+	*-apple)
+		os=-macos
+		;;
+	*-atari*)
+		os=-mint
+		;;
 	*)
 		os=-none
 		;;
@@ -913,12 +1700,18 @@
 			-sunos*)
 				vendor=sun
 				;;
-			-aix*)
+			-cnk*|-aix*)
 				vendor=ibm
 				;;
+			-beos*)
+				vendor=be
+				;;
 			-hpux*)
 				vendor=hp
 				;;
+			-mpeix*)
+				vendor=hp
+				;;
 			-hiux*)
 				vendor=hitachi
 				;;
@@ -934,21 +1727,47 @@
 			-genix*)
 				vendor=ns
 				;;
-			-mvs*)
+			-mvs* | -opened*)
+				vendor=ibm
+				;;
+			-os400*)
 				vendor=ibm
 				;;
 			-ptx*)
 				vendor=sequent
 				;;
-			-vxsim* | -vxworks*)
+			-tpf*)
+				vendor=ibm
+				;;
+			-vxsim* | -vxworks* | -windiss*)
 				vendor=wrs
 				;;
 			-aux*)
 				vendor=apple
 				;;
+			-hms*)
+				vendor=hitachi
+				;;
+			-mpw* | -macos*)
+				vendor=apple
+				;;
+			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+				vendor=atari
+				;;
+			-vos*)
+				vendor=stratus
+				;;
 		esac
 		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
 		;;
 esac
 
 echo $basic_machine$os
+exit
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
--- libxbase-2.0.0.orig/config.guess
+++ libxbase-2.0.0/config.guess
@@ -1,7 +1,11 @@
 #! /bin/sh
 # Attempt to guess a canonical system name.
-#   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.
-#
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
+#   2011, 2012 Free Software Foundation, Inc.
+
+timestamp='2012-02-10'
+
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
@@ -13,155 +17,349 @@
 # General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+# along with this program; if not, see <http://www.gnu.org/licenses/>.
 #
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
 # configuration script generated by Autoconf, you may include it under
 # the same distribution terms that you use for the rest of that program.
 
-# Written by Per Bothner <bothner@cygnus.com>.
-# The master version of this file is at the FSF in /home/gd/gnu/lib.
+
+# Originally written by Per Bothner.  Please send patches (context
+# diff format) to <config-patches@gnu.org> and include a ChangeLog
+# entry.
 #
 # This script attempts to guess a canonical system name similar to
 # config.sub.  If it succeeds, it prints the system name on stdout, and
 # exits with 0.  Otherwise, it exits with 1.
 #
-# The plan is that this can be called by configure scripts if you
-# don't specify an explicit system type (host/target name).
-#
-# Only a few systems have been added to this list; please add others
-# (but try to keep the structure clean).
-#
+# You can get the latest version of this script from:
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION]
+
+Output the configuration name of the system \`$me' is run on.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.guess ($timestamp)
+
+Originally written by Per Bothner.
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
+2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
+Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help" >&2
+       exit 1 ;;
+    * )
+       break ;;
+  esac
+done
+
+if test $# != 0; then
+  echo "$me: too many arguments$help" >&2
+  exit 1
+fi
+
+trap 'exit 1' 1 2 15
+
+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
+# compiler to aid in system detection is discouraged as it requires
+# temporary files to be created and, as you can see below, it is a
+# headache to deal with in a portable fashion.
+
+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
+# use `HOST_CC' if defined, but it is deprecated.
+
+# Portable tmp directory creation inspired by the Autoconf team.
+
+set_cc_for_build='
+trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
+trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
+: ${TMPDIR=/tmp} ;
+ { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+ { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+ { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
+dummy=$tmp/dummy ;
+tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
+case $CC_FOR_BUILD,$HOST_CC,$CC in
+ ,,)    echo "int x;" > $dummy.c ;
+	for c in cc gcc c89 c99 ; do
+	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
+	     CC_FOR_BUILD="$c"; break ;
+	  fi ;
+	done ;
+	if test x"$CC_FOR_BUILD" = x ; then
+	  CC_FOR_BUILD=no_compiler_found ;
+	fi
+	;;
+ ,,*)   CC_FOR_BUILD=$CC ;;
+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
+esac ; set_cc_for_build= ;'
 
 # This is needed to find uname on a Pyramid OSx when run in the BSD universe.
-# (ghazi@noc.rutgers.edu 8/24/94.)
+# (ghazi@noc.rutgers.edu 1994-08-24)
 if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
 	PATH=$PATH:/.attbin ; export PATH
 fi
 
 UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
 UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
-UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown
+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
 UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
 
-trap 'rm -f dummy.c dummy.o dummy; exit 1' 1 2 15
-
 # Note: order is significant - the case branches are not exclusive.
 
 case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
+    *:NetBSD:*:*)
+	# NetBSD (nbsd) targets should (where applicable) match one or
+	# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,
+	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
+	# switched to ELF, *-*-netbsd* would select the old
+	# object file format.  This provides both forward
+	# compatibility and a consistent mechanism for selecting the
+	# object file format.
+	#
+	# Note: NetBSD doesn't particularly care about the vendor
+	# portion of the name.  We always set it to "unknown".
+	sysctl="sysctl -n hw.machine_arch"
+	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
+	    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`
+	case "${UNAME_MACHINE_ARCH}" in
+	    armeb) machine=armeb-unknown ;;
+	    arm*) machine=arm-unknown ;;
+	    sh3el) machine=shl-unknown ;;
+	    sh3eb) machine=sh-unknown ;;
+	    sh5el) machine=sh5le-unknown ;;
+	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
+	esac
+	# The Operating System including object format, if it has switched
+	# to ELF recently, or will in the future.
+	case "${UNAME_MACHINE_ARCH}" in
+	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
+		eval $set_cc_for_build
+		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
+			| grep -q __ELF__
+		then
+		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
+		    # Return netbsd for either.  FIX?
+		    os=netbsd
+		else
+		    os=netbsdelf
+		fi
+		;;
+	    *)
+		os=netbsd
+		;;
+	esac
+	# The OS release
+	# Debian GNU/NetBSD machines have a different userland, and
+	# thus, need a distinct triplet. However, they do not need
+	# kernel version information, so it can be replaced with a
+	# suitable tag, in the style of linux-gnu.
+	case "${UNAME_VERSION}" in
+	    Debian*)
+		release='-gnu'
+		;;
+	    *)
+		release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+		;;
+	esac
+	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
+	# contains redundant information, the shorter form:
+	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
+	echo "${machine}-${os}${release}"
+	exit ;;
+    *:OpenBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
+	exit ;;
+    *:ekkoBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
+	exit ;;
+    *:SolidBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}
+	exit ;;
+    macppc:MirBSD:*:*)
+	echo powerpc-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    *:MirBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
     alpha:OSF1:*:*)
-	if test $UNAME_RELEASE = "V4.0"; then
+	case $UNAME_RELEASE in
+	*4.0)
 		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
-	fi
+		;;
+	*5.*)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+		;;
+	esac
+	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# OSF/1 and Tru64 systems produced since 1995.  I hope that
+	# covers most systems running today.  This code pipes the CPU
+	# types through head -n 1, so we only detect the type of CPU 0.
+	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	case "$ALPHA_CPU_TYPE" in
+	    "EV4 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV4.5 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "LCA4 (21066/21068)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV5 (21164)")
+		UNAME_MACHINE="alphaev5" ;;
+	    "EV5.6 (21164A)")
+		UNAME_MACHINE="alphaev56" ;;
+	    "EV5.6 (21164PC)")
+		UNAME_MACHINE="alphapca56" ;;
+	    "EV5.7 (21164PC)")
+		UNAME_MACHINE="alphapca57" ;;
+	    "EV6 (21264)")
+		UNAME_MACHINE="alphaev6" ;;
+	    "EV6.7 (21264A)")
+		UNAME_MACHINE="alphaev67" ;;
+	    "EV6.8CB (21264C)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8AL (21264B)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8CX (21264D)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.9A (21264/EV69A)")
+		UNAME_MACHINE="alphaev69" ;;
+	    "EV7 (21364)")
+		UNAME_MACHINE="alphaev7" ;;
+	    "EV7.9 (21364A)")
+		UNAME_MACHINE="alphaev79" ;;
+	esac
+	# A Pn.n version is a patched version.
 	# A Vn.n version is a released version.
 	# A Tn.n version is a released field test version.
 	# A Xn.n version is an unreleased experimental baselevel.
 	# 1.2 uses "1.2" for uname -r.
-	cat <<EOF >dummy.s
-	.globl main
-	.ent main
-main:
-	.frame \$30,0,\$26,0
-	.prologue 0
-	.long 0x47e03d80 # implver $0
-	lda \$2,259
-	.long 0x47e20c21 # amask $2,$1
-	srl \$1,8,\$2
-	sll \$2,2,\$2
-	sll \$0,3,\$0
-	addl \$1,\$0,\$0
-	addl \$2,\$0,\$0
-	ret \$31,(\$26),1
-	.end main
-EOF
-	${CC-cc} dummy.s -o dummy 2>/dev/null
-	if test "$?" = 0 ; then
-		./dummy
-		case "$?" in
-			7)
-				UNAME_MACHINE="alpha"
-				;;
-			15)
-				UNAME_MACHINE="alphaev5"
-				;;
-			14)
-				UNAME_MACHINE="alphaev56"
-				;;
-			10)
-				UNAME_MACHINE="alphapca56"
-				;;
-			16)
-				UNAME_MACHINE="alphaev6"
-				;;
-		esac
-	fi
-	rm -f dummy.s dummy
-	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//' | tr [[A-Z]] [[a-z]]`
-	exit 0 ;;
+	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	# Reset EXIT trap before exiting to avoid spurious non-zero exit code.
+	exitcode=$?
+	trap '' 0
+	exit $exitcode ;;
+    Alpha\ *:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# Should we change UNAME_MACHINE based on the output of uname instead
+	# of the specific Alpha model?
+	echo alpha-pc-interix
+	exit ;;
     21064:Windows_NT:50:3)
 	echo alpha-dec-winnt3.5
-	exit 0 ;;
+	exit ;;
     Amiga*:UNIX_System_V:4.0:*)
-	echo m68k-cbm-sysv4
-	exit 0;;
-    amiga:NetBSD:*:*)
-      echo m68k-cbm-netbsd${UNAME_RELEASE}
-      exit 0 ;;
-    amiga:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    arc64:OpenBSD:*:*)
-	echo mips64el-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    arc:OpenBSD:*:*)
-	echo mipsel-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    hkmips:OpenBSD:*:*)
-	echo mips-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    pmax:OpenBSD:*:*)
-	echo mipsel-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    sgi:OpenBSD:*:*)
-	echo mips-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    wgrisc:OpenBSD:*:*)
-	echo mipsel-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
+	echo m68k-unknown-sysv4
+	exit ;;
+    *:[Aa]miga[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-amigaos
+	exit ;;
+    *:[Mm]orph[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-morphos
+	exit ;;
+    *:OS/390:*:*)
+	echo i370-ibm-openedition
+	exit ;;
+    *:z/VM:*:*)
+	echo s390-ibm-zvmoe
+	exit ;;
+    *:OS400:*:*)
+	echo powerpc-ibm-os400
+	exit ;;
     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
 	echo arm-acorn-riscix${UNAME_RELEASE}
-	exit 0;;
-    arm32:NetBSD:*:*)
-	echo arm-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
-	exit 0 ;;
-    SR2?01:HI-UX/MPP:*:*)
+	exit ;;
+    arm:riscos:*:*|arm:RISCOS:*:*)
+	echo arm-unknown-riscos
+	exit ;;
+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
 	echo hppa1.1-hitachi-hiuxmpp
-	exit 0;;
-    Pyramid*:OSx*:*:*|MIS*:OSx*:*:*)
+	exit ;;
+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
 	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
 	if test "`(/bin/universe) 2>/dev/null`" = att ; then
 		echo pyramid-pyramid-sysv3
 	else
 		echo pyramid-pyramid-bsd
 	fi
-	exit 0 ;;
-    NILE:*:*:dcosx)
+	exit ;;
+    NILE*:*:*:dcosx)
 	echo pyramid-pyramid-svr4
-	exit 0 ;;
+	exit ;;
+    DRS?6000:unix:4.0:6*)
+	echo sparc-icl-nx6
+	exit ;;
+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
+	case `/usr/bin/uname -p` in
+	    sparc) echo sparc-icl-nx7; exit ;;
+	esac ;;
+    s390x:SunOS:*:*)
+	echo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4H:SunOS:5.*:*)
+	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
 	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
-    i86pc:SunOS:5.*:*)
-	echo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)
+	echo i386-pc-auroraux${UNAME_RELEASE}
+	exit ;;
+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
+	eval $set_cc_for_build
+	SUN_ARCH="i386"
+	# If there is a compiler, see if it is configured for 64-bit objects.
+	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
+	# This test works for both compilers.
+	if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
+		(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
+		grep IS_64BIT_ARCH >/dev/null
+	    then
+		SUN_ARCH="x86_64"
+	    fi
+	fi
+	echo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
     sun4*:SunOS:6*:*)
 	# According to config.sub, this is the proper way to canonicalize
 	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
 	# it's likely to be more like Solaris than SunOS4.
 	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
     sun4*:SunOS:*:*)
 	case "`/usr/bin/arch -k`" in
 	    Series*|S4*)
@@ -170,12 +368,12 @@
 	esac
 	# Japanese Language versions have a version number like `4.1.3-JL'.
 	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
-	exit 0 ;;
+	exit ;;
     sun3*:SunOS:*:*)
 	echo m68k-sun-sunos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     sun*:*:4.2BSD:*)
-	UNAME_RELEASE=`(head -1 /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
+	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
 	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
 	case "`/bin/arch`" in
 	    sun3)
@@ -185,52 +383,63 @@
 		echo sparc-sun-sunos${UNAME_RELEASE}
 		;;
 	esac
-	exit 0 ;;
+	exit ;;
     aushp:SunOS:*:*)
 	echo sparc-auspex-sunos${UNAME_RELEASE}
-	exit 0 ;;
-    atari*:NetBSD:*:*)
-	echo m68k-atari-netbsd${UNAME_RELEASE}
-	exit 0 ;;
-    atari*:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    sun3*:NetBSD:*:*)
-	echo m68k-sun-netbsd${UNAME_RELEASE}
-	exit 0 ;;
-    sun3*:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mac68k:NetBSD:*:*)
-	echo m68k-apple-netbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mac68k:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mvme68k:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    mvme88k:OpenBSD:*:*)
-	echo m88k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
+    # The situation for MiNT is a little confusing.  The machine name
+    # can be virtually everything (everything which is not
+    # "atarist" or "atariste" at least should have a processor
+    # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
+    # to the lowercase version "mint" (or "freemint").  Finally
+    # the system name "TOS" denotes a system which is actually not
+    # MiNT.  But MiNT is downward compatible to TOS, so this should
+    # be no problem.
+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
+	echo m68k-milan-mint${UNAME_RELEASE}
+	exit ;;
+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
+	echo m68k-hades-mint${UNAME_RELEASE}
+	exit ;;
+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
+	echo m68k-unknown-mint${UNAME_RELEASE}
+	exit ;;
+    m68k:machten:*:*)
+	echo m68k-apple-machten${UNAME_RELEASE}
+	exit ;;
     powerpc:machten:*:*)
 	echo powerpc-apple-machten${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     RISC*:Mach:*:*)
 	echo mips-dec-mach_bsd4.3
-	exit 0 ;;
+	exit ;;
     RISC*:ULTRIX:*:*)
 	echo mips-dec-ultrix${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     VAX*:ULTRIX*:*:*)
 	echo vax-dec-ultrix${UNAME_RELEASE}
-	exit 0 ;;
-    2020:CLIX:*:*)
+	exit ;;
+    2020:CLIX:*:* | 2430:CLIX:*:*)
 	echo clipper-intergraph-clix${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     mips:*:*:UMIPS | mips:*:*:RISCos)
-	sed 's/^	//' << EOF >dummy.c
-	int main (argc, argv) int argc; char **argv; {
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+#ifdef __cplusplus
+#include <stdio.h>  /* for printf() prototype */
+	int main (int argc, char *argv[]) {
+#else
+	int main (argc, argv) int argc; char *argv[]; {
+#endif
 	#if defined (host_mips) && defined (MIPSEB)
 	#if defined (SYSTYPE_SYSV)
 	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
@@ -245,62 +454,83 @@
 	  exit (-1);
 	}
 EOF
-	${CC-cc} dummy.c -o dummy \
-	  && ./dummy `echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` \
-	  && rm dummy.c dummy && exit 0
-	rm -f dummy.c dummy
+	$CC_FOR_BUILD -o $dummy $dummy.c &&
+	  dummyarg=`echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` &&
+	  SYSTEM_NAME=`$dummy $dummyarg` &&
+	    { echo "$SYSTEM_NAME"; exit; }
 	echo mips-mips-riscos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
+    Motorola:PowerMAX_OS:*:*)
+	echo powerpc-motorola-powermax
+	exit ;;
+    Motorola:*:4.3:PL8-*)
+	echo powerpc-harris-powermax
+	exit ;;
+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
+	echo powerpc-harris-powermax
+	exit ;;
     Night_Hawk:Power_UNIX:*:*)
 	echo powerpc-harris-powerunix
-	exit 0 ;;
+	exit ;;
     m88k:CX/UX:7*:*)
 	echo m88k-harris-cxux7
-	exit 0 ;;
+	exit ;;
     m88k:*:4*:R4*)
 	echo m88k-motorola-sysv4
-	exit 0 ;;
+	exit ;;
     m88k:*:3*:R3*)
 	echo m88k-motorola-sysv3
-	exit 0 ;;
+	exit ;;
     AViiON:dgux:*:*)
-        # DG/UX returns AViiON for all architectures
-        UNAME_PROCESSOR=`/usr/bin/uname -p`
-        if [ $UNAME_PROCESSOR = mc88100 -o $UNAME_PROCESSOR = mc88110 ] ; then
-	if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx \
-	     -o ${TARGET_BINARY_INTERFACE}x = x ] ; then
+	# DG/UX returns AViiON for all architectures
+	UNAME_PROCESSOR=`/usr/bin/uname -p`
+	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
+	then
+	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
+	       [ ${TARGET_BINARY_INTERFACE}x = x ]
+	    then
 		echo m88k-dg-dgux${UNAME_RELEASE}
-	else
+	    else
 		echo m88k-dg-dguxbcs${UNAME_RELEASE}
+	    fi
+	else
+	    echo i586-dg-dgux${UNAME_RELEASE}
 	fi
-        else echo i586-dg-dgux${UNAME_RELEASE}
-        fi
- 	exit 0 ;;
+	exit ;;
     M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
 	echo m88k-dolphin-sysv3
-	exit 0 ;;
+	exit ;;
     M88*:*:R3*:*)
 	# Delta 88k system running SVR3
 	echo m88k-motorola-sysv3
-	exit 0 ;;
+	exit ;;
     XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
 	echo m88k-tektronix-sysv3
-	exit 0 ;;
+	exit ;;
     Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
 	echo m68k-tektronix-bsd
-	exit 0 ;;
+	exit ;;
     *:IRIX*:*:*)
 	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
-	exit 0 ;;
+	exit ;;
     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
-	echo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id
-	exit 0 ;;              # Note that: echo "'`uname -s`'" gives 'AIX '
-    i?86:AIX:*:*)
+	echo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id
+	exit ;;               # Note that: echo "'`uname -s`'" gives 'AIX '
+    i*86:AIX:*:*)
 	echo i386-ibm-aix
-	exit 0 ;;
+	exit ;;
+    ia64:AIX:*:*)
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
+	exit ;;
     *:AIX:2:3)
 	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
-		sed 's/^		//' << EOF >dummy.c
+		eval $set_cc_for_build
+		sed 's/^		//' << EOF >$dummy.c
 		#include <sys/systemcfg.h>
 
 		main()
@@ -311,17 +541,21 @@
 			exit(0);
 			}
 EOF
-		${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0
-		rm -f dummy.c dummy
-		echo rs6000-ibm-aix3.2.5
+		if $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`
+		then
+			echo "$SYSTEM_NAME"
+		else
+			echo rs6000-ibm-aix3.2.5
+		fi
 	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
 		echo rs6000-ibm-aix3.2.4
 	else
 		echo rs6000-ibm-aix3.2
 	fi
-	exit 0 ;;
-    *:AIX:*:4)
-	if /usr/sbin/lsattr -EHl proc0 | grep POWER >/dev/null 2>&1; then
+	exit ;;
+    *:AIX:*:[4567])
+	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
 		IBM_ARCH=rs6000
 	else
 		IBM_ARCH=powerpc
@@ -329,43 +563,120 @@
 	if [ -x /usr/bin/oslevel ] ; then
 		IBM_REV=`/usr/bin/oslevel`
 	else
-		IBM_REV=4.${UNAME_RELEASE}
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
 	fi
 	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
-	exit 0 ;;
+	exit ;;
     *:AIX:*:*)
 	echo rs6000-ibm-aix
-	exit 0 ;;
+	exit ;;
     ibmrt:4.4BSD:*|romp-ibm:BSD:*)
 	echo romp-ibm-bsd4.4
-	exit 0 ;;
-    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and
+	exit ;;
+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
 	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
-	exit 0 ;;                           # report: romp-ibm BSD 4.3
+	exit ;;                             # report: romp-ibm BSD 4.3
     *:BOSX:*:*)
 	echo rs6000-bull-bosx
-	exit 0 ;;
+	exit ;;
     DPX/2?00:B.O.S.:*:*)
 	echo m68k-bull-sysv3
-	exit 0 ;;
+	exit ;;
     9000/[34]??:4.3bsd:1.*:*)
 	echo m68k-hp-bsd
-	exit 0 ;;
+	exit ;;
     hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
 	echo m68k-hp-bsd4.4
-	exit 0 ;;
-    9000/[3478]??:HP-UX:*:*)
+	exit ;;
+    9000/[34678]??:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
 	case "${UNAME_MACHINE}" in
 	    9000/31? )            HP_ARCH=m68000 ;;
 	    9000/[34]?? )         HP_ARCH=m68k ;;
-	    9000/7?? | 9000/8?[1679] ) HP_ARCH=hppa1.1 ;;
-	    9000/8?? )            HP_ARCH=hppa1.0 ;;
+	    9000/[678][0-9][0-9])
+		if [ -x /usr/bin/getconf ]; then
+		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
+		    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+		    case "${sc_cpu_version}" in
+		      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
+		      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
+		      532)                      # CPU_PA_RISC2_0
+			case "${sc_kernel_bits}" in
+			  32) HP_ARCH="hppa2.0n" ;;
+			  64) HP_ARCH="hppa2.0w" ;;
+			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
+			esac ;;
+		    esac
+		fi
+		if [ "${HP_ARCH}" = "" ]; then
+		    eval $set_cc_for_build
+		    sed 's/^		//' << EOF >$dummy.c
+
+		#define _HPUX_SOURCE
+		#include <stdlib.h>
+		#include <unistd.h>
+
+		int main ()
+		{
+		#if defined(_SC_KERNEL_BITS)
+		    long bits = sysconf(_SC_KERNEL_BITS);
+		#endif
+		    long cpu  = sysconf (_SC_CPU_VERSION);
+
+		    switch (cpu)
+			{
+			case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
+			case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
+			case CPU_PA_RISC2_0:
+		#if defined(_SC_KERNEL_BITS)
+			    switch (bits)
+				{
+				case 64: puts ("hppa2.0w"); break;
+				case 32: puts ("hppa2.0n"); break;
+				default: puts ("hppa2.0"); break;
+				} break;
+		#else  /* !defined(_SC_KERNEL_BITS) */
+			    puts ("hppa2.0"); break;
+		#endif
+			default: puts ("hppa1.0"); break;
+			}
+		    exit (0);
+		}
+EOF
+		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    test -z "$HP_ARCH" && HP_ARCH=hppa
+		fi ;;
 	esac
-	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	if [ ${HP_ARCH} = "hppa2.0w" ]
+	then
+	    eval $set_cc_for_build
+
+	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
+	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
+	    # generating 64-bit code.  GNU and HP use different nomenclature:
+	    #
+	    # $ CC_FOR_BUILD=cc ./config.guess
+	    # => hppa2.0w-hp-hpux11.23
+	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
+	    # => hppa64-hp-hpux11.23
+
+	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |
+		grep -q __LP64__
+	    then
+		HP_ARCH="hppa2.0w"
+	    else
+		HP_ARCH="hppa64"
+	    fi
+	fi
 	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
-	exit 0 ;;
+	exit ;;
+    ia64:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	echo ia64-hp-hpux${HPUX_REV}
+	exit ;;
     3050*:HI-UX:*:*)
-	sed 's/^	//' << EOF >dummy.c
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
 	#include <unistd.h>
 	int
 	main ()
@@ -390,324 +701,452 @@
 	  exit (0);
 	}
 EOF
-	${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0
-	rm -f dummy.c dummy
+	$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&
+		{ echo "$SYSTEM_NAME"; exit; }
 	echo unknown-hitachi-hiuxwe2
-	exit 0 ;;
+	exit ;;
     9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
 	echo hppa1.1-hp-bsd
-	exit 0 ;;
+	exit ;;
     9000/8??:4.3bsd:*:*)
 	echo hppa1.0-hp-bsd
-	exit 0 ;;
+	exit ;;
+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
+	echo hppa1.0-hp-mpeix
+	exit ;;
     hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
 	echo hppa1.1-hp-osf
-	exit 0 ;;
+	exit ;;
     hp8??:OSF1:*:*)
 	echo hppa1.0-hp-osf
-	exit 0 ;;
-    i?86:OSF1:*:*)
+	exit ;;
+    i*86:OSF1:*:*)
 	if [ -x /usr/sbin/sysversion ] ; then
 	    echo ${UNAME_MACHINE}-unknown-osf1mk
 	else
 	    echo ${UNAME_MACHINE}-unknown-osf1
 	fi
-	exit 0 ;;
+	exit ;;
     parisc*:Lites*:*:*)
 	echo hppa1.1-hp-lites
-	exit 0 ;;
+	exit ;;
     C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
 	echo c1-convex-bsd
-        exit 0 ;;
+	exit ;;
     C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
 	if getsysinfo -f scalar_acc
 	then echo c32-convex-bsd
 	else echo c2-convex-bsd
 	fi
-        exit 0 ;;
+	exit ;;
     C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
 	echo c34-convex-bsd
-        exit 0 ;;
+	exit ;;
     C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
 	echo c38-convex-bsd
-        exit 0 ;;
+	exit ;;
     C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
 	echo c4-convex-bsd
-        exit 0 ;;
-    CRAY*X-MP:*:*:*)
-	echo xmp-cray-unicos
-        exit 0 ;;
+	exit ;;
     CRAY*Y-MP:*:*:*)
-	echo ymp-cray-unicos${UNAME_RELEASE}
-	exit 0 ;;
+	echo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
     CRAY*[A-Z]90:*:*:*)
 	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
 	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
-	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/
-	exit 0 ;;
+	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
+	      -e 's/\.[^.]*$/.X/'
+	exit ;;
     CRAY*TS:*:*:*)
-	echo t90-cray-unicos${UNAME_RELEASE}
-	exit 0 ;;
-    CRAY-2:*:*:*)
-	echo cray2-cray-unicos
-        exit 0 ;;
-    F300:UNIX_System_V:*:*)
-        FUJITSU_SYS=`uname -p | tr [A-Z] [a-z] | sed -e 's/\///'`
-        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
-        echo "f300-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
-        exit 0 ;;
-    F301:UNIX_System_V:*:*)
-       echo f301-fujitsu-uxpv`echo $UNAME_RELEASE | sed 's/ .*//'`
-       exit 0 ;;
-    hp3[0-9][05]:NetBSD:*:*)
-	echo m68k-hp-netbsd${UNAME_RELEASE}
-	exit 0 ;;
-    hp300:OpenBSD:*:*)
-	echo m68k-unknown-openbsd${UNAME_RELEASE}
-	exit 0 ;;
-    i?86:BSD/386:*:* | *:BSD/OS:*:*)
+	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*T3E:*:*:*)
+	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*SV1:*:*:*)
+	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    *:UNICOS/mp:*:*)
+	echo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
+	FUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+	FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
+	echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit ;;
+    5000:UNIX_System_V:4.*:*)
+	FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+	FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
+	echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit ;;
+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
 	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
+    sparc*:BSD/OS:*:*)
+	echo sparc-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
+    *:BSD/OS:*:*)
+	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
     *:FreeBSD:*:*)
-	echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
-	exit 0 ;;
-    *:NetBSD:*:*)
-	echo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
-	exit 0 ;;
-    *:OpenBSD:*:*)
-	echo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
-	exit 0 ;;
+	UNAME_PROCESSOR=`/usr/bin/uname -p`
+	case ${UNAME_PROCESSOR} in
+	    amd64)
+		echo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	    *)
+		echo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	esac
+	exit ;;
     i*:CYGWIN*:*)
-	echo i386-pc-cygwin32
-	exit 0 ;;
-    i*:MINGW*:*)
-	echo i386-pc-mingw32
-	exit 0 ;;
+	echo ${UNAME_MACHINE}-pc-cygwin
+	exit ;;
+    *:MINGW*:*)
+	echo ${UNAME_MACHINE}-pc-mingw32
+	exit ;;
+    i*:MSYS*:*)
+	echo ${UNAME_MACHINE}-pc-msys
+	exit ;;
+    i*:windows32*:*)
+	# uname -m includes "-pc" on this system.
+	echo ${UNAME_MACHINE}-mingw32
+	exit ;;
+    i*:PW*:*)
+	echo ${UNAME_MACHINE}-pc-pw32
+	exit ;;
+    *:Interix*:*)
+	case ${UNAME_MACHINE} in
+	    x86)
+		echo i586-pc-interix${UNAME_RELEASE}
+		exit ;;
+	    authenticamd | genuineintel | EM64T)
+		echo x86_64-unknown-interix${UNAME_RELEASE}
+		exit ;;
+	    IA64)
+		echo ia64-unknown-interix${UNAME_RELEASE}
+		exit ;;
+	esac ;;
+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
+	echo i${UNAME_MACHINE}-pc-mks
+	exit ;;
+    8664:Windows_NT:*)
+	echo x86_64-pc-mks
+	exit ;;
+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
+	# UNAME_MACHINE based on the output of uname instead of i386?
+	echo i586-pc-interix
+	exit ;;
+    i*:UWIN*:*)
+	echo ${UNAME_MACHINE}-pc-uwin
+	exit ;;
+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
+	echo x86_64-unknown-cygwin
+	exit ;;
     p*:CYGWIN*:*)
-	echo powerpcle-unknown-cygwin32
-	exit 0 ;;
+	echo powerpcle-unknown-cygwin
+	exit ;;
     prep*:SunOS:5.*:*)
 	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
-	exit 0 ;;
+	exit ;;
     *:GNU:*:*)
+	# the GNU system
 	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
-	exit 0 ;;
-    *:Linux:*:*)
-	# The BFD linker knows what the default object file format is, so
-	# first see if it will tell us.
-	ld_help_string=`ld --help 2>&1`
-	ld_supported_emulations=`echo $ld_help_string \
-			 | sed -ne '/supported emulations:/!d
-				    s/[ 	][ 	]*/ /g
-				    s/.*supported emulations: *//
-				    s/ .*//
-				    p'`
-        case "$ld_supported_emulations" in
-	  i?86linux)  echo "${UNAME_MACHINE}-pc-linux-gnuaout"      ; exit 0 ;;
-	  i?86coff)   echo "${UNAME_MACHINE}-pc-linux-gnucoff"      ; exit 0 ;;
-	  sparclinux) echo "${UNAME_MACHINE}-unknown-linux-gnuaout" ; exit 0 ;;
-	  m68klinux)  echo "${UNAME_MACHINE}-unknown-linux-gnuaout" ; exit 0 ;;
-	  elf32ppc)   echo "powerpc-unknown-linux-gnu"              ; exit 0 ;;
-	esac
-
-	if test "${UNAME_MACHINE}" = "alpha" ; then
-		sed 's/^	//'  <<EOF >dummy.s
-		.globl main
-		.ent main
-	main:
-		.frame \$30,0,\$26,0
-		.prologue 0
-		.long 0x47e03d80 # implver $0
-		lda \$2,259
-		.long 0x47e20c21 # amask $2,$1
-		srl \$1,8,\$2
-		sll \$2,2,\$2
-		sll \$0,3,\$0
-		addl \$1,\$0,\$0
-		addl \$2,\$0,\$0
-		ret \$31,(\$26),1
-		.end main
-EOF
-		LIBC=""
-		${CC-cc} dummy.s -o dummy 2>/dev/null
-		if test "$?" = 0 ; then
-			./dummy
-			case "$?" in
-			7)
-				UNAME_MACHINE="alpha"
-				;;
-			15)
-				UNAME_MACHINE="alphaev5"
-				;;
-			14)
-				UNAME_MACHINE="alphaev56"
-				;;
-			10)
-				UNAME_MACHINE="alphapca56"
-				;;
-			16)
-				UNAME_MACHINE="alphaev6"
-				;;
-			esac	
-
-			objdump --private-headers dummy | \
-			  grep ld.so.1 > /dev/null
-			if test "$?" = 0 ; then
-				LIBC="libc1"
-			fi
-		fi	
-		rm -f dummy.s dummy
-		echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC} ; exit 0
-	elif test "${UNAME_MACHINE}" = "mips" ; then
-	  cat >dummy.c <<EOF
-main(argc, argv)
-     int argc;
-     char *argv[];
-{
-#ifdef __MIPSEB__
-  printf ("%s-unknown-linux-gnu\n", argv[1]);
-#endif
-#ifdef __MIPSEL__
-  printf ("%sel-unknown-linux-gnu\n", argv[1]);
-#endif
-  return 0;
-}
-EOF
-	  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy "${UNAME_MACHINE}" && rm dummy.c dummy && exit 0
-	  rm -f dummy.c dummy
+	exit ;;
+    *:GNU/*:*:*)
+	# other systems with GNU libc and userland
+	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu
+	exit ;;
+    i*86:Minix:*:*)
+	echo ${UNAME_MACHINE}-pc-minix
+	exit ;;
+    aarch64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    aarch64_be:Linux:*:*)
+	UNAME_MACHINE=aarch64_be
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    alpha:Linux:*:*)
+	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
+	  EV5)   UNAME_MACHINE=alphaev5 ;;
+	  EV56)  UNAME_MACHINE=alphaev56 ;;
+	  PCA56) UNAME_MACHINE=alphapca56 ;;
+	  PCA57) UNAME_MACHINE=alphapca56 ;;
+	  EV6)   UNAME_MACHINE=alphaev6 ;;
+	  EV67)  UNAME_MACHINE=alphaev67 ;;
+	  EV68*) UNAME_MACHINE=alphaev68 ;;
+	esac
+	objdump --private-headers /bin/sh | grep -q ld.so.1
+	if test "$?" = 0 ; then LIBC="libc1" ; else LIBC="" ; fi
+	echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}
+	exit ;;
+    arm*:Linux:*:*)
+	eval $set_cc_for_build
+	if echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \
+	    | grep -q __ARM_EABI__
+	then
+	    echo ${UNAME_MACHINE}-unknown-linux-gnu
 	else
-	  # Either a pre-BFD a.out linker (linux-gnuoldld)
-	  # or one that does not give us useful --help.
-	  # GCC wants to distinguish between linux-gnuoldld and linux-gnuaout.
-	  # If ld does not provide *any* "supported emulations:"
-	  # that means it is gnuoldld.
-	  echo "$ld_help_string" | grep >/dev/null 2>&1 "supported emulations:"
-	  test $? != 0 && echo "${UNAME_MACHINE}-pc-linux-gnuoldld" && exit 0
-
-	  case "${UNAME_MACHINE}" in
-	  i?86)
-	    VENDOR=pc;
-	    ;;
-	  *)
-	    VENDOR=unknown;
-	    ;;
-	  esac
-	  # Determine whether the default compiler is a.out or elf
-	  cat >dummy.c <<EOF
-#include <features.h>
-main(argc, argv)
-     int argc;
-     char *argv[];
-{
-#ifdef __ELF__
-# ifdef __GLIBC__
-#  if __GLIBC__ >= 2
-    printf ("%s-${VENDOR}-linux-gnu\n", argv[1]);
-#  else
-    printf ("%s-${VENDOR}-linux-gnulibc1\n", argv[1]);
-#  endif
-# else
-   printf ("%s-${VENDOR}-linux-gnulibc1\n", argv[1]);
-# endif
-#else
-  printf ("%s-${VENDOR}-linux-gnuaout\n", argv[1]);
-#endif
-  return 0;
-}
+	    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \
+		| grep -q __ARM_PCS_VFP
+	    then
+		echo ${UNAME_MACHINE}-unknown-linux-gnueabi
+	    else
+		echo ${UNAME_MACHINE}-unknown-linux-gnueabihf
+	    fi
+	fi
+	exit ;;
+    avr32*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    cris:Linux:*:*)
+	echo ${UNAME_MACHINE}-axis-linux-gnu
+	exit ;;
+    crisv32:Linux:*:*)
+	echo ${UNAME_MACHINE}-axis-linux-gnu
+	exit ;;
+    frv:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    hexagon:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    i*86:Linux:*:*)
+	LIBC=gnu
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#ifdef __dietlibc__
+	LIBC=dietlibc
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC'`
+	echo "${UNAME_MACHINE}-pc-linux-${LIBC}"
+	exit ;;
+    ia64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    m32r*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    m68*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    mips:Linux:*:* | mips64:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef ${UNAME_MACHINE}
+	#undef ${UNAME_MACHINE}el
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=${UNAME_MACHINE}el
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=${UNAME_MACHINE}
+	#else
+	CPU=
+	#endif
+	#endif
 EOF
-	  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy "${UNAME_MACHINE}" && rm dummy.c dummy && exit 0
-	  rm -f dummy.c dummy
-	fi ;;
-# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions
-# are messed up and put the nodename in both sysname and nodename.
-    i?86:DYNIX/ptx:4*:*)
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`
+	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-gnu"; exit; }
+	;;
+    or32:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    padre:Linux:*:*)
+	echo sparc-unknown-linux-gnu
+	exit ;;
+    parisc64:Linux:*:* | hppa64:Linux:*:*)
+	echo hppa64-unknown-linux-gnu
+	exit ;;
+    parisc:Linux:*:* | hppa:Linux:*:*)
+	# Look for CPU level
+	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
+	  PA7*) echo hppa1.1-unknown-linux-gnu ;;
+	  PA8*) echo hppa2.0-unknown-linux-gnu ;;
+	  *)    echo hppa-unknown-linux-gnu ;;
+	esac
+	exit ;;
+    ppc64:Linux:*:*)
+	echo powerpc64-unknown-linux-gnu
+	exit ;;
+    ppc:Linux:*:*)
+	echo powerpc-unknown-linux-gnu
+	exit ;;
+    s390:Linux:*:* | s390x:Linux:*:*)
+	echo ${UNAME_MACHINE}-ibm-linux
+	exit ;;
+    sh64*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    sh*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    sparc:Linux:*:* | sparc64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    tile*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    vax:Linux:*:*)
+	echo ${UNAME_MACHINE}-dec-linux-gnu
+	exit ;;
+    x86_64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    xtensa*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    i*86:DYNIX/ptx:4*:*)
+	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
+	# earlier versions are messed up and put the nodename in both
+	# sysname and nodename.
 	echo i386-sequent-sysv4
-	exit 0 ;;
-    i?86:UNIX_SV:4.2MP:2.*)
-        # Unixware is an offshoot of SVR4, but it has its own version
-        # number series starting with 2...
-        # I am not positive that other SVR4 systems won't match this,
+	exit ;;
+    i*86:UNIX_SV:4.2MP:2.*)
+	# Unixware is an offshoot of SVR4, but it has its own version
+	# number series starting with 2...
+	# I am not positive that other SVR4 systems won't match this,
 	# I just have to hope.  -- rms.
-        # Use sysv4.2uw... so that sysv4* matches it.
+	# Use sysv4.2uw... so that sysv4* matches it.
 	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
-	exit 0 ;;
-    i?86:*:4.*:* | i?86:SYSTEM_V:4.*:*)
+	exit ;;
+    i*86:OS/2:*:*)
+	# If we were able to find `uname', then EMX Unix compatibility
+	# is probably installed.
+	echo ${UNAME_MACHINE}-pc-os2-emx
+	exit ;;
+    i*86:XTS-300:*:STOP)
+	echo ${UNAME_MACHINE}-unknown-stop
+	exit ;;
+    i*86:atheos:*:*)
+	echo ${UNAME_MACHINE}-unknown-atheos
+	exit ;;
+    i*86:syllable:*:*)
+	echo ${UNAME_MACHINE}-pc-syllable
+	exit ;;
+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)
+	echo i386-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    i*86:*DOS:*:*)
+	echo ${UNAME_MACHINE}-pc-msdosdjgpp
+	exit ;;
+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
+	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
 	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
-		echo ${UNAME_MACHINE}-univel-sysv${UNAME_RELEASE}
+		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
 	else
-		echo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}
+		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
 	fi
-	exit 0 ;;
-    i?86:*:3.2:*)
+	exit ;;
+    i*86:*:5:[678]*)
+	# UnixWare 7.x, OpenUNIX and OpenServer 6.
+	case `/bin/uname -X | grep "^Machine"` in
+	    *486*)	     UNAME_MACHINE=i486 ;;
+	    *Pentium)	     UNAME_MACHINE=i586 ;;
+	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
+	esac
+	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
+	exit ;;
+    i*86:*:3.2:*)
 	if test -f /usr/options/cb.name; then
 		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
 		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
 	elif /bin/uname -X 2>/dev/null >/dev/null ; then
-		UNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`
-		(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486
-		(/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \
+		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
+		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
+		(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \
 			&& UNAME_MACHINE=i586
+		(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
+			&& UNAME_MACHINE=i686
 		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
 	else
 		echo ${UNAME_MACHINE}-pc-sysv32
 	fi
-	exit 0 ;;
+	exit ;;
     pc:*:*:*)
-        # uname -m prints for DJGPP always 'pc', but it prints nothing about
-        # the processor, so we play safe by assuming i386.
-	echo i386-pc-msdosdjgpp
-        exit 0 ;;
+	# Left here for compatibility:
+	# uname -m prints for DJGPP always 'pc', but it prints nothing about
+	# the processor, so we play safe by assuming i586.
+	# Note: whatever this is, it MUST be the same as what config.sub
+	# prints for the "djgpp" host, or else GDB configury will decide that
+	# this is a cross-build.
+	echo i586-pc-msdosdjgpp
+	exit ;;
     Intel:Mach:3*:*)
 	echo i386-pc-mach3
-	exit 0 ;;
+	exit ;;
     paragon:*:*:*)
 	echo i860-intel-osf1
-	exit 0 ;;
+	exit ;;
     i860:*:4.*:*) # i860-SVR4
 	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
 	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
 	else # Add other i860-SVR4 vendors below as they are discovered.
 	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
 	fi
-	exit 0 ;;
+	exit ;;
     mini*:CTIX:SYS*5:*)
 	# "miniframe"
 	echo m68010-convergent-sysv
-	exit 0 ;;
-    M68*:*:R3V[567]*:*)
-	test -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;
-    3[34]??:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 4850:*:4.0:3.0)
+	exit ;;
+    mc68k:UNIX:SYSTEM5:3.51m)
+	echo m68k-convergent-sysv
+	exit ;;
+    M680?0:D-NIX:5.3:*)
+	echo m68k-diab-dnix
+	exit ;;
+    M68*:*:R3V[5678]*:*)
+	test -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;
+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
 	OS_REL=''
 	test -r /etc/.relid \
 	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
 	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
-	  && echo i486-ncr-sysv4.3${OS_REL} && exit 0
+	  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
 	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
-	  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;
+	  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
-        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \
-          && echo i486-ncr-sysv4 && exit 0 ;;
-    m68*:LynxOS:2.*:*)
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && { echo i486-ncr-sysv4; exit; } ;;
+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)
+	OS_REL='.3'
+	test -r /etc/.relid \
+	    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \
+	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
 	echo m68k-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     mc68030:UNIX_System_V:4.*:*)
 	echo m68k-atari-sysv4
-	exit 0 ;;
-    i?86:LynxOS:2.*:*)
-	echo i386-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
     TSUNAMI:LynxOS:2.*:*)
 	echo sparc-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
-    rs6000:LynxOS:2.*:* | PowerPC:LynxOS:2.*:*)
+	exit ;;
+    rs6000:LynxOS:2.*:*)
 	echo rs6000-unknown-lynxos${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)
+	echo powerpc-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
     SM[BE]S:UNIX_SV:*:*)
 	echo mips-dde-sysv${UNAME_RELEASE}
-	exit 0 ;;
+	exit ;;
+    RM*:ReliantUNIX-*:*:*)
+	echo mips-sni-sysv4
+	exit ;;
     RM*:SINIX-*:*:*)
 	echo mips-sni-sysv4
-	exit 0 ;;
+	exit ;;
     *:SINIX-*:*:*)
 	if uname -p 2>/dev/null >/dev/null ; then
 		UNAME_MACHINE=`(uname -p) 2>/dev/null`
@@ -715,39 +1154,187 @@
 	else
 		echo ns32k-sni-sysv
 	fi
-	exit 0 ;;
-    PENTIUM:CPunix:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort
-                           # says <Richard.M.Bartel@ccMail.Census.GOV>
-        echo i586-unisys-sysv4
-        exit 0 ;;
+	exit ;;
+    PENTIUM:*:4.0*:*)	# Unisys `ClearPath HMP IX 4000' SVR4/MP effort
+			# says <Richard.M.Bartel@ccMail.Census.GOV>
+	echo i586-unisys-sysv4
+	exit ;;
     *:UNIX_System_V:4*:FTX*)
 	# From Gerald Hewes <hewes@openmarket.com>.
 	# How about differentiating between stratus architectures? -djm
 	echo hppa1.1-stratus-sysv4
-	exit 0 ;;
+	exit ;;
     *:*:*:FTX*)
 	# From seanf@swdc.stratus.com.
 	echo i860-stratus-sysv4
-	exit 0 ;;
+	exit ;;
+    i*86:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo ${UNAME_MACHINE}-stratus-vos
+	exit ;;
+    *:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo hppa1.1-stratus-vos
+	exit ;;
     mc68*:A/UX:*:*)
 	echo m68k-apple-aux${UNAME_RELEASE}
-	exit 0 ;;
-    news*:NEWS-OS:*:6*)
+	exit ;;
+    news*:NEWS-OS:6*:*)
 	echo mips-sony-newsos6
-	exit 0 ;;
-    R3000:*System_V*:*:* | R4000:UNIX_SYSV:*:*)
+	exit ;;
+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
 	if [ -d /usr/nec ]; then
-	        echo mips-nec-sysv${UNAME_RELEASE}
+		echo mips-nec-sysv${UNAME_RELEASE}
 	else
-	        echo mips-unknown-sysv${UNAME_RELEASE}
+		echo mips-unknown-sysv${UNAME_RELEASE}
 	fi
-        exit 0 ;;
+	exit ;;
+    BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
+	echo powerpc-be-beos
+	exit ;;
+    BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
+	echo powerpc-apple-beos
+	exit ;;
+    BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
+	echo i586-pc-beos
+	exit ;;
+    BePC:Haiku:*:*)	# Haiku running on Intel PC compatible.
+	echo i586-pc-haiku
+	exit ;;
+    SX-4:SUPER-UX:*:*)
+	echo sx4-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-5:SUPER-UX:*:*)
+	echo sx5-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-6:SUPER-UX:*:*)
+	echo sx6-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-7:SUPER-UX:*:*)
+	echo sx7-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-8:SUPER-UX:*:*)
+	echo sx8-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-8R:SUPER-UX:*:*)
+	echo sx8r-nec-superux${UNAME_RELEASE}
+	exit ;;
+    Power*:Rhapsody:*:*)
+	echo powerpc-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Rhapsody:*:*)
+	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Darwin:*:*)
+	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
+	case $UNAME_PROCESSOR in
+	    i386)
+		eval $set_cc_for_build
+		if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+		  if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \
+		      (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
+		      grep IS_64BIT_ARCH >/dev/null
+		  then
+		      UNAME_PROCESSOR="x86_64"
+		  fi
+		fi ;;
+	    unknown) UNAME_PROCESSOR=powerpc ;;
+	esac
+	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	exit ;;
+    *:procnto*:*:* | *:QNX:[0123456789]*:*)
+	UNAME_PROCESSOR=`uname -p`
+	if test "$UNAME_PROCESSOR" = "x86"; then
+		UNAME_PROCESSOR=i386
+		UNAME_MACHINE=pc
+	fi
+	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
+	exit ;;
+    *:QNX:*:4*)
+	echo i386-pc-qnx
+	exit ;;
+    NEO-?:NONSTOP_KERNEL:*:*)
+	echo neo-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    NSE-?:NONSTOP_KERNEL:*:*)
+	echo nse-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    NSR-?:NONSTOP_KERNEL:*:*)
+	echo nsr-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    *:NonStop-UX:*:*)
+	echo mips-compaq-nonstopux
+	exit ;;
+    BS2000:POSIX*:*:*)
+	echo bs2000-siemens-sysv
+	exit ;;
+    DS/*:UNIX_System_V:*:*)
+	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
+	exit ;;
+    *:Plan9:*:*)
+	# "uname -m" is not consistent, so use $cputype instead. 386
+	# is converted to i386 for consistency with other x86
+	# operating systems.
+	if test "$cputype" = "386"; then
+	    UNAME_MACHINE=i386
+	else
+	    UNAME_MACHINE="$cputype"
+	fi
+	echo ${UNAME_MACHINE}-unknown-plan9
+	exit ;;
+    *:TOPS-10:*:*)
+	echo pdp10-unknown-tops10
+	exit ;;
+    *:TENEX:*:*)
+	echo pdp10-unknown-tenex
+	exit ;;
+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
+	echo pdp10-dec-tops20
+	exit ;;
+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
+	echo pdp10-xkl-tops20
+	exit ;;
+    *:TOPS-20:*:*)
+	echo pdp10-unknown-tops20
+	exit ;;
+    *:ITS:*:*)
+	echo pdp10-unknown-its
+	exit ;;
+    SEI:*:*:SEIUX)
+	echo mips-sei-seiux${UNAME_RELEASE}
+	exit ;;
+    *:DragonFly:*:*)
+	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	exit ;;
+    *:*VMS:*:*)
+	UNAME_MACHINE=`(uname -p) 2>/dev/null`
+	case "${UNAME_MACHINE}" in
+	    A*) echo alpha-dec-vms ; exit ;;
+	    I*) echo ia64-dec-vms ; exit ;;
+	    V*) echo vax-dec-vms ; exit ;;
+	esac ;;
+    *:XENIX:*:SysV)
+	echo i386-pc-xenix
+	exit ;;
+    i*86:skyos:*:*)
+	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'
+	exit ;;
+    i*86:rdos:*:*)
+	echo ${UNAME_MACHINE}-pc-rdos
+	exit ;;
+    i*86:AROS:*:*)
+	echo ${UNAME_MACHINE}-pc-aros
+	exit ;;
+    x86_64:VMkernel:*:*)
+	echo ${UNAME_MACHINE}-unknown-esx
+	exit ;;
 esac
 
 #echo '(No uname command or uname output not recognized.)' 1>&2
 #echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2
 
-cat >dummy.c <<EOF
+eval $set_cc_for_build
+cat >$dummy.c <<EOF
 #ifdef _SEQUENT_
 # include <sys/types.h>
 # include <sys/utsname.h>
@@ -763,16 +1350,16 @@
 #include <sys/param.h>
   printf ("m68k-sony-newsos%s\n",
 #ifdef NEWSOS4
-          "4"
+	"4"
 #else
-	  ""
+	""
 #endif
-         ); exit (0);
+	); exit (0);
 #endif
 #endif
 
 #if defined (__arm) && defined (__acorn) && defined (__unix)
-  printf ("arm-acorn-riscix"); exit (0);
+  printf ("arm-acorn-riscix\n"); exit (0);
 #endif
 
 #if defined (hp300) && !defined (hpux)
@@ -785,7 +1372,10 @@
 #endif
   int version;
   version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
-  printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
+  if (version < 4)
+    printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
+  else
+    printf ("%s-next-openstep%d\n", __ARCHITECTURE__, version);
   exit (0);
 #endif
 
@@ -830,11 +1420,24 @@
 #endif
 
 #if defined (vax)
-#if !defined (ultrix)
-  printf ("vax-dec-bsd\n"); exit (0);
-#else
-  printf ("vax-dec-ultrix\n"); exit (0);
-#endif
+# if !defined (ultrix)
+#  include <sys/param.h>
+#  if defined (BSD)
+#   if BSD == 43
+      printf ("vax-dec-bsd4.3\n"); exit (0);
+#   else
+#    if BSD == 199006
+      printf ("vax-dec-bsd4.3reno\n"); exit (0);
+#    else
+      printf ("vax-dec-bsd\n"); exit (0);
+#    endif
+#   endif
+#  else
+    printf ("vax-dec-bsd\n"); exit (0);
+#  endif
+# else
+    printf ("vax-dec-ultrix\n"); exit (0);
+# endif
 #endif
 
 #if defined (alliant) && defined (i860)
@@ -845,12 +1448,12 @@
 }
 EOF
 
-${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy && rm dummy.c dummy && exit 0
-rm -f dummy.c dummy
+$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&
+	{ echo "$SYSTEM_NAME"; exit; }
 
 # Apollos put the system type in the environment.
 
-test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }
+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }
 
 # Convex versions that predate uname can use getsysinfo(1)
 
@@ -859,25 +1462,69 @@
     case `getsysinfo -f cpu_type` in
     c1*)
 	echo c1-convex-bsd
-	exit 0 ;;
+	exit ;;
     c2*)
 	if getsysinfo -f scalar_acc
 	then echo c32-convex-bsd
 	else echo c2-convex-bsd
 	fi
-	exit 0 ;;
+	exit ;;
     c34*)
 	echo c34-convex-bsd
-	exit 0 ;;
+	exit ;;
     c38*)
 	echo c38-convex-bsd
-	exit 0 ;;
+	exit ;;
     c4*)
 	echo c4-convex-bsd
-	exit 0 ;;
+	exit ;;
     esac
 fi
 
-#echo '(Unable to guess system type)' 1>&2
+cat >&2 <<EOF
+$0: unable to guess system type
+
+This script, last modified $timestamp, has failed to recognize
+the operating system you are using. It is advised that you
+download the most up to date version of the config scripts from
+
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+and
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+
+If the version you run ($0) is already up to date, please
+send the following data and any information you think might be
+pertinent to <config-patches@gnu.org> in order to provide the needed
+information to handle your system.
+
+config.guess timestamp = $timestamp
+
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
+
+hostinfo               = `(hostinfo) 2>/dev/null`
+/bin/universe          = `(/bin/universe) 2>/dev/null`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
+/bin/arch              = `(/bin/arch) 2>/dev/null`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
+
+UNAME_MACHINE = ${UNAME_MACHINE}
+UNAME_RELEASE = ${UNAME_RELEASE}
+UNAME_SYSTEM  = ${UNAME_SYSTEM}
+UNAME_VERSION = ${UNAME_VERSION}
+EOF
 
 exit 1
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
--- libxbase-2.0.0.orig/html/Makefile
+++ libxbase-2.0.0/html/Makefile
@@ -0,0 +1,223 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+#	This file is part of the XBase libraries
+#    Copyright (C) 1998,1999 Vitaly Fedrushkov <fedrushkov@acm.org>
+
+#    This library is free software; you can redistribute it and/or
+#    modify it under the terms of the GNU Library General Public
+#    License as published by the Free Software Foundation; either
+#    version 2 of the License, or (at your option) any later version.
+
+#    This library is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#    Library General Public License for more details.
+
+#    You should have received a copy of the GNU Library General Public
+#    License along with this library; see the file COPYING.LIB.  If not,
+#    write to the Free Software Foundation, Inc., or see
+#    http://www.gnu.org/.
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = ..
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = ..
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+EXTRA_DIST = COPYING.LIB Xb2cpp.html cvsdoc xbase.html xbase.jpg	      	xbase_a1.html xbase_a2.html xbase_apps.html xbase_bib.html	      	xbase_c1.html xbase_c10.html xbase_c11.html xbase_c12.html	      	xbase_c13.html xbase_c14.html xbase_c15.html xbase_c16.html	      	xbase_c17.html xbase_c18.html xbase_c19.html xbase_c2.html	      	xbase_c3.html xbase_c4.html xbase_c5.html xbase_c6.html xbase_c8.html 	xbase_c9.html xbase_download.html xbase_help.html xbase_links.html    	xbase_locking.html xbase_mail.html xbase_order.html xbase_port.html   	xbase_preamble.html xbase_probs.html xbase_toc.html zipflow.gif
+
+
+MAINTAINERCLEANFILES = Makefile.in
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = ../xbase/xbconfig.h
+CONFIG_CLEAN_FILES = 
+DIST_COMMON =  COPYING.LIB ChangeLog Makefile.am Makefile.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = gtar
+GZIP_ENV = --best
+all: all-redirect
+.SUFFIXES:
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps html/Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+tags: TAGS
+TAGS:
+
+
+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
+
+subdir = html
+
+distdir: $(DISTFILES)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+info-am:
+info: info-am
+dvi-am:
+dvi: dvi-am
+check-am: all-am
+check: check-am
+installcheck-am:
+installcheck: installcheck-am
+install-exec-am:
+install-exec: install-exec-am
+
+install-data-am:
+install-data: install-data-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-am
+uninstall-am:
+uninstall: uninstall-am
+all-am: Makefile
+all-redirect: all-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs:
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
+mostlyclean-am:  mostlyclean-generic
+
+mostlyclean: mostlyclean-am
+
+clean-am:  clean-generic mostlyclean-am
+
+clean: clean-am
+
+distclean-am:  distclean-generic clean-am
+	-rm -f libtool
+
+distclean: distclean-am
+
+maintainer-clean-am:  maintainer-clean-generic distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-am
+
+.PHONY: tags distdir info-am info dvi-am dvi check check-am \
+installcheck-am installcheck install-exec-am install-exec \
+install-data-am install-data install-am install uninstall-am uninstall \
+all-redirect all-am all installdirs mostlyclean-generic \
+distclean-generic clean-generic maintainer-clean-generic clean \
+mostlyclean distclean maintainer-clean
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/examples/sample5.cpp
+++ libxbase-2.0.0/examples/sample5.cpp
@@ -47,7 +47,7 @@
 
 /* set the stack large for dos compiles */
 #ifdef __XBDOS
-#include <stdio.h>
+#include <cstdio>
 extern unsigned _stklen = 100000;
 #endif
 
@@ -62,37 +62,37 @@
    xbNdx i4( &d );
 
    rc = d.OpenDatabase( "MYFILE" );
-   cout << "OpenDatabase rc = " << rc << "\n";
+   std::cout << "OpenDatabase rc = " << rc << "\n";
 
    rc = i1.OpenIndex( "MYINDEX1" );
-   cout << "OpenIndex 1 rc = " << rc << "\n";
+   std::cout << "OpenIndex 1 rc = " << rc << "\n";
 
    rc = i2.OpenIndex( "MYINDEX2" );
-   cout << "OpenIndex 2 rc = " << rc << "\n";
+   std::cout << "OpenIndex 2 rc = " << rc << "\n";
 
    rc = i3.OpenIndex( "MYINDEX3" );
-   cout << "OpenIndex 3 rc = " << rc << "\n";
+   std::cout << "OpenIndex 3 rc = " << rc << "\n";
 
    rc = i4.OpenIndex( "MYINDEX4" );
-   cout << "OpenIndex 4 rc = " << rc << "\n";
+   std::cout << "OpenIndex 4 rc = " << rc << "\n";
 
    rc = i1.FindKey( "Queue" );			/* alpha search   */
-   cout << "Find Key rc = " << rc << "\n";
+   std::cout << "Find Key rc = " << rc << "\n";
 
    rc = i4.FindKey( (xbDouble) 77.77 );		/* numeric search */
-   cout << "Find Key rc = " << rc << "\n";
+   std::cout << "Find Key rc = " << rc << "\n";
 
    rc = i1.GetFirstKey();
-   cout << "GetFirstKey rc = " << rc << "\n";
+   std::cout << "GetFirstKey rc = " << rc << "\n";
 
    rc = i1.GetNextKey();
-   cout << "GetNextKey rc = " << rc << "\n";
+   std::cout << "GetNextKey rc = " << rc << "\n";
 
    rc = i1.GetLastKey();
-   cout << "GetLastKey rc = " << rc << "\n";
+   std::cout << "GetLastKey rc = " << rc << "\n";
 
    rc = i1.GetPrevKey();
-   cout << "GetPrevKey rc = " << rc << "\n";
+   std::cout << "GetPrevKey rc = " << rc << "\n";
 
    d.CloseDatabase();
    return 0;
--- libxbase-2.0.0.orig/examples/sample2.cpp
+++ libxbase-2.0.0/examples/sample2.cpp
@@ -55,7 +55,7 @@
 
 /* set the stack large for dos compiles */
 #ifdef __XBDOS
-#include <stdio.h>
+#include <cstdio>
 extern unsigned _stklen = 100000;
 #endif
 
@@ -75,15 +75,15 @@
 
 
   if(( rc = MyFile.OpenDatabase( "MYFILE.DBF" )) != XB_NO_ERROR )
-     cout << "\nError opening MYFILE.DBF rc=" << rc;
+     std::cout << "\nError opening MYFILE.DBF rc=" << rc;
   if(( rc = MyIndex1.OpenIndex( "MYINDEX1.NDX" )) != XB_NO_ERROR )
-     cout << "\nError opening index1 rc=" << rc;
+     std::cout << "\nError opening index1 rc=" << rc;
   if(( rc = MyIndex2.OpenIndex( "MYINDEX2.NDX" )) != XB_NO_ERROR )
-     cout << "\nError opening index2 rc=" << rc;
+     std::cout << "\nError opening index2 rc=" << rc;
   if(( rc = MyIndex3.OpenIndex( "MYINDEX3.NDX" )) != XB_NO_ERROR )
-     cout << "\nError opening index3 rc=" << rc;
+     std::cout << "\nError opening index3 rc=" << rc;
   if(( rc = MyIndex4.OpenIndex( "MYINDEX4.NDX" )) != XB_NO_ERROR )
-     cout << "\nError opening index4 rc=" << rc;
+     std::cout << "\nError opening index4 rc=" << rc;
 
   lname     = MyFile.GetFieldNo( "LASTNAME" );
   fname     = MyFile.GetFieldNo( "FIRSTNAME" ); 
@@ -97,19 +97,19 @@
   m1        = MyFile.GetFieldNo( "MEMO1" );
   z         = MyFile.GetFieldNo( "ZIPCODE" );
 
-  cout << "\nLast Name Id  = " << lname;
-  cout << "\nFirst Name Id = " << fname;
-  cout << "\nBirthdate Id  = " << birthdate;
-  cout << "\nAmount Id     = " << amount;
-  cout << "\nSwitch Id     = " << sw;
-  cout << "\nFloat 1 Id    = " << f1;  
-  cout << "\nFloat 2 Id    = " << f2;
-  cout << "\nFloat 3 Id    = " << f3;
-  cout << "\nFloat 4 Id    = " << f4;
+  std::cout << "\nLast Name Id  = " << lname;
+  std::cout << "\nFirst Name Id = " << fname;
+  std::cout << "\nBirthdate Id  = " << birthdate;
+  std::cout << "\nAmount Id     = " << amount;
+  std::cout << "\nSwitch Id     = " << sw;
+  std::cout << "\nFloat 1 Id    = " << f1;  
+  std::cout << "\nFloat 2 Id    = " << f2;
+  std::cout << "\nFloat 3 Id    = " << f3;
+  std::cout << "\nFloat 4 Id    = " << f4;
 #ifdef XB_MEMO_FIELDS
-  cout << "\nMemo1 Id      = " << m1;
+  std::cout << "\nMemo1 Id      = " << m1;
 #endif
-  cout << "\nZipcode Id    = " << z << "\n";
+  std::cout << "\nZipcode Id    = " << z << "\n";
 
   /* build record one */
   MyFile.BlankRecord();			/* blank out the record buffer */
@@ -125,7 +125,7 @@
   MyFile.PutField( f4, "1" );
   MyFile.PutField( z, "76262" );
   if(( rc = MyFile.AppendRecord()) != XB_NO_ERROR )       /* write it */
-     cout << "\nError " << rc << " appending data record.";
+     std::cout << "\nError " << rc << " appending data record.";
 
   /* build record two */
   MyFile.BlankRecord();			/* blank out the record buffer */
@@ -146,7 +146,7 @@
   MyFile.UpdateMemoData( m1, 20, "Sample memo field 2", F_SETLKW );
 #endif
   if(( rc = MyFile.AppendRecord()) != XB_NO_ERROR )       /* write it */
-     cout << "\nError " << rc << " appending data record.";
+     std::cout << "\nError " << rc << " appending data record.";
 
   /* build record three */
   MyFile.BlankRecord();			/* blank out the record buffer */
@@ -167,7 +167,7 @@
   MyFile.UpdateMemoData( m1, 20, "Sample memo field 3", F_SETLKW );
 #endif
   if(( rc = MyFile.AppendRecord()) != XB_NO_ERROR )       /* write it */
-     cout << "\nError " << rc << " appending data record.";
+     std::cout << "\nError " << rc << " appending data record.";
 
   /* build record four */
   MyFile.BlankRecord();			/* blank out the record buffer */
@@ -188,7 +188,7 @@
   MyFile.UpdateMemoData( m1, 20, "Sample memo field 4", F_SETLKW );
 #endif
   if(( rc = MyFile.AppendRecord()) != XB_NO_ERROR )       /* write it */
-     cout << "\nError " << rc << " appending data record.";
+     std::cout << "\nError " << rc << " appending data record.";
 
   MyFile.CloseDatabase();				/* close database */
   return 0;
--- libxbase-2.0.0.orig/examples/sample1.cpp
+++ libxbase-2.0.0/examples/sample1.cpp
@@ -49,7 +49,7 @@
 
 /* set the stack large for dos compiles */
 #ifdef __XBDOS
-#include <stdio.h>
+#include <cstdio>
 extern unsigned _stklen = 100000;
 #endif
 
@@ -86,29 +86,29 @@
 
   if(( rc = MyFile.CreateDatabase( "MYFILE.DBF", MyRecord, XB_OVERLAY )) 
         != XB_NO_ERROR )
-     cout << "\nError creating database = " << rc << "\n";
+     std::cout << "\nError creating database = " << rc << "\n";
   else
   {
      /* define a simple index */
 
      if(( rc = MyIndex1.CreateIndex( 
        "MYINDEX1.NDX", "LASTNAME", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
-        cout << "\nError creating index 1 = " << rc << "\n";
+        std::cout << "\nError creating index 1 = " << rc << "\n";
 
      /* define a multi-field index "LASTNAME            FIRSTNAME" */
      if(( rc = MyIndex2.CreateIndex( 
        "MYINDEX2.NDX", "LASTNAME+FIRSTNAME", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
-        cout << "\nError creating index 2 = " << rc << "\n";
+        std::cout << "\nError creating index 2 = " << rc << "\n";
 
      /* define a multi-field index "LASTNAMEFIRSTNAME" */
      if(( rc = MyIndex3.CreateIndex( 
        "MYINDEX3.NDX", "LASTNAME-FIRSTNAME", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
-        cout << "\nError creating index 3 = " << rc << "\n";
+        std::cout << "\nError creating index 3 = " << rc << "\n";
 
      /* define a numeric index "ZIPCODE" */
      if(( rc = MyIndex4.CreateIndex( 
        "MYINDEX4.NDX", "ZIPCODE", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
-        cout << "\nError creating index 4 = " << rc << "\n";
+        std::cout << "\nError creating index 4 = " << rc << "\n";
   }
 
   MyFile.CloseDatabase();   /* Close database and associated indexes */
--- libxbase-2.0.0.orig/examples/Makefile
+++ libxbase-2.0.0/examples/Makefile
@@ -0,0 +1,385 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = ..
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = ..
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+INCLUDES = -I$(topdir) $(all_includes)
+LDADD = -L$(topdir)/xbase/.libs -lxbase
+
+# for shadow passwords override the value
+INSTALL_PROGRAM = /usr/bin/install -c
+
+noinst_PROGRAMS = sample1 sample2 sample3 sample4 sample5                exfilter
+
+
+exfilter_SOURCES = exfilter.cpp
+sample1_SOURCES = sample1.cpp
+sample2_SOURCES = sample2.cpp
+sample3_SOURCES = sample3.cpp
+sample4_SOURCES = sample4.cpp
+sample5_SOURCES = sample5.cpp
+
+noinst_HEADERS = 
+
+EXTRA_DIST =  	makefile.g95 	examples.ide
+
+
+MAINTAINERCLEANFILES = Makefile.in
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = ../xbase/xbconfig.h
+CONFIG_CLEAN_FILES = 
+PROGRAMS =  $(noinst_PROGRAMS)
+
+
+DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../xbase
+CPPFLAGS = 
+LDFLAGS = -s
+LIBS = 
+sample1_OBJECTS =  sample1.o
+sample1_LDADD = $(LDADD)
+sample1_DEPENDENCIES = 
+sample1_LDFLAGS = 
+sample2_OBJECTS =  sample2.o
+sample2_LDADD = $(LDADD)
+sample2_DEPENDENCIES = 
+sample2_LDFLAGS = 
+sample3_OBJECTS =  sample3.o
+sample3_LDADD = $(LDADD)
+sample3_DEPENDENCIES = 
+sample3_LDFLAGS = 
+sample4_OBJECTS =  sample4.o
+sample4_LDADD = $(LDADD)
+sample4_DEPENDENCIES = 
+sample4_LDFLAGS = 
+sample5_OBJECTS =  sample5.o
+sample5_LDADD = $(LDADD)
+sample5_DEPENDENCIES = 
+sample5_LDFLAGS = 
+exfilter_OBJECTS =  exfilter.o
+exfilter_LDADD = $(LDADD)
+exfilter_DEPENDENCIES = 
+exfilter_LDFLAGS = 
+CXXFLAGS = -O2 -Wall
+CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
+HEADERS =  $(noinst_HEADERS)
+
+DIST_COMMON =  Makefile.am Makefile.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = gtar
+GZIP_ENV = --best
+SOURCES = $(sample1_SOURCES) $(sample2_SOURCES) $(sample3_SOURCES) $(sample4_SOURCES) $(sample5_SOURCES) $(exfilter_SOURCES)
+OBJECTS = $(sample1_OBJECTS) $(sample2_OBJECTS) $(sample3_OBJECTS) $(sample4_OBJECTS) $(sample5_OBJECTS) $(exfilter_OBJECTS)
+
+all: all-redirect
+.SUFFIXES:
+.SUFFIXES: .S .c .cpp .lo .o .s
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps examples/Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+
+mostlyclean-noinstPROGRAMS:
+
+clean-noinstPROGRAMS:
+	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
+
+distclean-noinstPROGRAMS:
+
+maintainer-clean-noinstPROGRAMS:
+
+.c.o:
+	$(COMPILE) -c $<
+
+.s.o:
+	$(COMPILE) -c $<
+
+.S.o:
+	$(COMPILE) -c $<
+
+mostlyclean-compile:
+	-rm -f *.o core *.core
+
+clean-compile:
+
+distclean-compile:
+	-rm -f *.tab.c
+
+maintainer-clean-compile:
+
+.c.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.s.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.S.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+
+maintainer-clean-libtool:
+
+sample1: $(sample1_OBJECTS) $(sample1_DEPENDENCIES)
+	@rm -f sample1
+	$(CXXLINK) $(sample1_LDFLAGS) $(sample1_OBJECTS) $(sample1_LDADD) $(LIBS)
+
+sample2: $(sample2_OBJECTS) $(sample2_DEPENDENCIES)
+	@rm -f sample2
+	$(CXXLINK) $(sample2_LDFLAGS) $(sample2_OBJECTS) $(sample2_LDADD) $(LIBS)
+
+sample3: $(sample3_OBJECTS) $(sample3_DEPENDENCIES)
+	@rm -f sample3
+	$(CXXLINK) $(sample3_LDFLAGS) $(sample3_OBJECTS) $(sample3_LDADD) $(LIBS)
+
+sample4: $(sample4_OBJECTS) $(sample4_DEPENDENCIES)
+	@rm -f sample4
+	$(CXXLINK) $(sample4_LDFLAGS) $(sample4_OBJECTS) $(sample4_LDADD) $(LIBS)
+
+sample5: $(sample5_OBJECTS) $(sample5_DEPENDENCIES)
+	@rm -f sample5
+	$(CXXLINK) $(sample5_LDFLAGS) $(sample5_OBJECTS) $(sample5_LDADD) $(LIBS)
+
+exfilter: $(exfilter_OBJECTS) $(exfilter_DEPENDENCIES)
+	@rm -f exfilter
+	$(CXXLINK) $(exfilter_LDFLAGS) $(exfilter_OBJECTS) $(exfilter_LDADD) $(LIBS)
+.cpp.o:
+	$(CXXCOMPILE) -c $<
+.cpp.lo:
+	$(LTCXXCOMPILE) -c $<
+
+tags: TAGS
+
+ID: $(HEADERS) $(SOURCES) $(LISP)
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	here=`pwd` && cd $(srcdir) \
+	  && mkid -f$$here/ID $$unique $(LISP)
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
+	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)
+
+mostlyclean-tags:
+
+clean-tags:
+
+distclean-tags:
+	-rm -f TAGS ID
+
+maintainer-clean-tags:
+
+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
+
+subdir = examples
+
+distdir: $(DISTFILES)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+exfilter.o: exfilter.cpp
+sample1.o: sample1.cpp
+sample2.o: sample2.cpp
+sample3.o: sample3.cpp
+sample4.o: sample4.cpp
+sample5.o: sample5.cpp
+
+info-am:
+info: info-am
+dvi-am:
+dvi: dvi-am
+check-am: all-am
+check: check-am
+installcheck-am:
+installcheck: installcheck-am
+install-exec-am:
+install-exec: install-exec-am
+
+install-data-am:
+install-data: install-data-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-am
+uninstall-am:
+uninstall: uninstall-am
+all-am: Makefile $(PROGRAMS) $(HEADERS)
+all-redirect: all-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs:
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
+mostlyclean-am:  mostlyclean-noinstPROGRAMS mostlyclean-compile \
+		mostlyclean-libtool mostlyclean-tags \
+		mostlyclean-generic
+
+mostlyclean: mostlyclean-am
+
+clean-am:  clean-noinstPROGRAMS clean-compile clean-libtool clean-tags \
+		clean-generic mostlyclean-am
+
+clean: clean-am
+
+distclean-am:  distclean-noinstPROGRAMS distclean-compile \
+		distclean-libtool distclean-tags distclean-generic \
+		clean-am
+	-rm -f libtool
+
+distclean: distclean-am
+
+maintainer-clean-am:  maintainer-clean-noinstPROGRAMS \
+		maintainer-clean-compile maintainer-clean-libtool \
+		maintainer-clean-tags maintainer-clean-generic \
+		distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-am
+
+.PHONY: mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
+clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
+mostlyclean-compile distclean-compile clean-compile \
+maintainer-clean-compile mostlyclean-libtool distclean-libtool \
+clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
+distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
+dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
+install-exec install-data-am install-data install-am install \
+uninstall-am uninstall all-redirect all-am all installdirs \
+mostlyclean-generic distclean-generic clean-generic \
+maintainer-clean-generic clean mostlyclean distclean maintainer-clean
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/examples/exfilter.cpp
+++ libxbase-2.0.0/examples/exfilter.cpp
@@ -59,15 +59,15 @@
   xbDbf d( &x );
   xbNdx i( &d );
 
-  cout << "exfilter program executing" << endl;
+  std::cout << "exfilter program executing" << std::endl;
 
   if(( rc = d.OpenDatabase( "MYFILE.DBF" )) != XB_NO_ERROR ){
-    cout << "Error opening database" << endl;
+    std::cout << "Error opening database" << std::endl;
     return 1;
   }
 
   if(( rc = i.OpenIndex( "MYINDEX1.NDX" )) != XB_NO_ERROR ){
-    cout << "Error opening index" << endl;
+    std::cout << "Error opening index" << std::endl;
     return 2;
   }
 
@@ -75,7 +75,7 @@
   /* use filter 1 w/o index */
   rc = f1.GetFirstFilterRec();
   while( rc == XB_NO_ERROR ){
-    cout << "Filter 1 Found Record " << d.GetCurRecNo() << endl;
+    std::cout << "Filter 1 Found Record " << d.GetCurRecNo() << std::endl;
     rc = f1.GetNextFilterRec();
   }
   xbFilter f2( &d, &i, "FLOAT1>1" );
@@ -83,12 +83,12 @@
   rc = f2.GetLastFilterRec();
 
   while( rc == XB_NO_ERROR ){
-    cout << "Filter 2 Found Record " << d.GetCurRecNo() << endl;
+    std::cout << "Filter 2 Found Record " << d.GetCurRecNo() << std::endl;
     rc = f2.GetPrevFilterRec();
   }
   d.CloseDatabase();
 #else
-  cout << "XB_FILTERS not compiled into library" << endl;
+  std::cout << "XB_FILTERS not compiled into library" << std::endl;
 #endif  
 
   return 0;
--- libxbase-2.0.0.orig/examples/sample4.cpp
+++ libxbase-2.0.0/examples/sample4.cpp
@@ -52,7 +52,7 @@
 #include <xbase/xbase.h>
 
 #ifdef __XBDOS
-#include <stdio.h>
+#include <cstdio>
 extern unsigned _stklen = 100000;
 #endif
 
@@ -68,33 +68,33 @@
 
   if(( rc = MyFile.OpenDatabase( "MYFILE.DBF" )) != XB_NO_ERROR )
   {
-     cout << "\nError opening file rc = " << rc << "\n";
+     std::cout << "\nError opening file rc = " << rc << "\n";
      exit(1);
   }
   if(( rc = MyIndex1.OpenIndex( "MYINDEX1.NDX" )) != XB_NO_ERROR )
   {
-     cout << "\nError opening index1 rc = " << rc << "\n";
+     std::cout << "\nError opening index1 rc = " << rc << "\n";
      exit(1);
   }
 
   if(( rc = MyIndex2.OpenIndex( "MYINDEX2.NDX" )) != XB_NO_ERROR )
   {
-     cout << "\nError opening index2 rc = " << rc << "\n";
+     std::cout << "\nError opening index2 rc = " << rc << "\n";
      exit(1);
   }
   if(( rc = MyIndex3.OpenIndex( "MYINDEX3.NDX" )) != XB_NO_ERROR )
   {
-     cout << "\nError opening index3 rc = " << rc << "\n";
+     std::cout << "\nError opening index3 rc = " << rc << "\n";
      exit(1);
   }
   if(( rc = MyIndex4.OpenIndex( "MYINDEX4.NDX" )) != XB_NO_ERROR )
   {
-     cout << "\nError opening index4 rc = " << rc << "\n";
+     std::cout << "\nError opening index4 rc = " << rc << "\n";
      exit(1);
   }
 
 
-  cout << "Sample GetRecord\n"; 
+  std::cout << "Sample GetRecord\n"; 
 
   MyFile.ExclusiveLock( F_SETLKW ); /* lock the files for our exclusive use */
 
@@ -103,26 +103,26 @@
   MyFile.DeleteRecord();
   
   if( MyFile.RecordDeleted() )
-    cout << "Record is deleted...\n";
+    std::cout << "Record is deleted...\n";
   else 
-    cout << "Record is not deleted...\n";
+    std::cout << "Record is not deleted...\n";
 
 
 /* to undelete a record the following commented code could be used
 
   MyFile.UndeleteRecord();
   if( MyFile.RecordDeleted() )
-     cout << "Record is deleted...\n";
+     std::cout << "Record is deleted...\n";
   else 
-    cout << "Record is not deleted...\n";
+    std::cout << "Record is not deleted...\n";
 */
 
 /* to permanently remove deleted records from the file, pack the database */
 
    if(( rc = MyFile.PackDatabase( F_SETLKW )) != XB_NO_ERROR )
-      cout << "\nError packing database rc = " << rc;
+      std::cout << "\nError packing database rc = " << rc;
    else
-      cout << "\nDatabase packed.\n";
+      std::cout << "\nDatabase packed.\n";
 
   MyFile.ExclusiveUnlock();     /* unlock the files */
   MyFile.CloseDatabase();	/* close database */
--- libxbase-2.0.0.orig/examples/sample3.cpp
+++ libxbase-2.0.0/examples/sample3.cpp
@@ -56,7 +56,7 @@
 
 /* set the stack large for dos compiles */
 #ifdef __XBDOS
-#include <stdio.h>
+#include <cstdio>
 extern unsigned _stklen = 100000;
 #endif
 
@@ -81,66 +81,66 @@
   f1        = MyFile.GetFieldNo( "FLOAT1" );
   memo      = MyFile.GetFieldNo( "MEMO1" );
 
-  cout << "\nThere are " << MyFile.FieldCount() << " fields in the file";
+  std::cout << "\nThere are " << MyFile.FieldCount() << " fields in the file";
   recs = MyFile.NoOfRecords();
-  cout << "There are " << recs << " records in the file." << endl;  
+  std::cout << "There are " << recs << " records in the file." << std::endl;  
 
-  cout << "\nLASTNAME   is type: " << MyFile.GetFieldType( lname )
+  std::cout << "\nLASTNAME   is type: " << MyFile.GetFieldType( lname )
    << " length: " << MyFile.GetFieldLen( lname );
-  cout << "\nFIRSTNAME  is type: " << MyFile.GetFieldType( fname )
+  std::cout << "\nFIRSTNAME  is type: " << MyFile.GetFieldType( fname )
    << " length: " << MyFile.GetFieldLen( fname );
-  cout << "\nBIRTHDATE  is type: " << MyFile.GetFieldType( birthdate )
+  std::cout << "\nBIRTHDATE  is type: " << MyFile.GetFieldType( birthdate )
    << " length: " << MyFile.GetFieldLen( birthdate );
-  cout << "\nAMOUNT     is type: " << MyFile.GetFieldType( amount )
+  std::cout << "\nAMOUNT     is type: " << MyFile.GetFieldType( amount )
    << " length: " << MyFile.GetFieldLen( amount );
-  cout << "\nSWITCH     is type: " << MyFile.GetFieldType( sw )
+  std::cout << "\nSWITCH     is type: " << MyFile.GetFieldType( sw )
    << " length: " << MyFile.GetFieldLen( sw ) << "\n\n";
 
-  cout << "Sample GetRecord" << endl; 
+  std::cout << "Sample GetRecord" << std::endl; 
   MyFile.GetRecord( 1L );
   MyFile.GetField( lname, buf );  
-  cout << "Name 1 = " << buf << endl;
-  cout << "Name 1 = " << MyFile.GetStringField( lname ) << endl;
+  std::cout << "Name 1 = " << buf << std::endl;
+  std::cout << "Name 1 = " << MyFile.GetStringField( lname ) << std::endl;
 
   f = MyFile.GetFloatField( f1 );
-  cout << "FLOAT1 = " << f << endl;
+  std::cout << "FLOAT1 = " << f << std::endl;
   f = MyFile.GetFloatField( "FLOAT2" );
-  cout << "FLOAT2 = " << f << endl;
+  std::cout << "FLOAT2 = " << f << std::endl;
 
-  cout << "Sample GetRecordBuf" << endl; 
+  std::cout << "Sample GetRecordBuf" << std::endl; 
   p = MyFile.GetRecordBuf();			/* pointer to record buffer */
-  for( i = 0; i < 49; i++ ) cout << *p++;	/* display the buffer */
+  for( i = 0; i < 49; i++ ) std::cout << *p++;	/* display the buffer */
 
-  cout << "\n\nLoop through forwards..." << endl;
+  std::cout << "\n\nLoop through forwards..." << std::endl;
   rc = MyFile.GetFirstRecord(); 
   while( rc == XB_NO_ERROR )
   {
     MyFile.GetField( lname, buf );  
-    cout << MyFile.GetCurRecNo();
-    cout << " Name = " << buf << endl;
+    std::cout << MyFile.GetCurRecNo();
+    std::cout << " Name = " << buf << std::endl;
     rc = MyFile.GetNextRecord();
 #ifdef XB_MEMO_FIELDS
     if( MyFile.MemoFieldExists( memo ))
-     cout << "Memo field MEMO1 len = " << MyFile.GetMemoFieldLen(memo) << endl;
+     std::cout << "Memo field MEMO1 len = " << MyFile.GetMemoFieldLen(memo) << std::endl;
 #endif
   }
 
-  cout << "\n\nSample PutRecord" << endl << endl;
+  std::cout << "\n\nSample PutRecord" << std::endl << std::endl;
   MyFile.PutField( lname, "Stantonbob" );
   MyFile.PutField( lname, "Sally" );
   MyFile.PutRecord( MyFile.GetCurRecNo() );
 
-  cout << "\nLoop through backwards.." << endl;
+  std::cout << "\nLoop through backwards.." << std::endl;
   rc = MyFile.GetLastRecord(); 
   while( rc == XB_NO_ERROR )
   {
 //    MyFile.GetField( lname, buf );  
-    cout << "Last Name = " << MyFile.GetStringField( lname ) << endl;
-    cout << "Logical Field = " << MyFile.GetLogicalField( "SWITCH" ) << endl;
+    std::cout << "Last Name = " << MyFile.GetStringField( lname ) << std::endl;
+    std::cout << "Logical Field = " << MyFile.GetLogicalField( "SWITCH" ) << std::endl;
     rc = MyFile.GetPrevRecord();
   }
 
-  cout << endl;
+  std::cout << std::endl;
   MyFile.CloseDatabase();				/* close database */
   return 0;
 }     
--- libxbase-2.0.0.orig/xbase/xbase.cpp
+++ libxbase-2.0.0/xbase/xbase.cpp
@@ -58,7 +58,7 @@
 
 #include <xbase/xbase.h>
 #include <ctype.h>
-#include <string.h>
+#include <cstring>
 
 #include <xbase/xbexcept.h>
 
@@ -535,57 +535,57 @@
 {
 #if 0 // replaced following code to remove duplicate strings (9/27/2000 DTB)
   switch( ErrorNo ) {
-    case    0: cout << "No Error" << endl;                     break;
-    case -100: cout << "End Of File" << endl;                  break;
-//  case -101: cout << "Beginning Of File" << endl;            break;
-    case -102: cout << "No Memory" << endl;                    break;
-    case -103: cout << "File Already Exists" << endl;          break;
-    case -104: cout << "Database or Index Open Error" << endl; break;
-    case -105: cout << "Error writing to disk drive" << endl;  break;
-    case -106: cout << "Unknown Field Type" << endl;           break;
-    case -107: cout << "Database already open" << endl;        break;
-    case -108: cout << "Not an Xbase type database" << endl;   break;
-    case -109: cout << "Invalid Record Number" << endl;        break;
-    case -110: cout << "Invalid Option" << endl;               break;
-    case -111: cout << "Database not open" << endl;            break;
-    case -112: cout << "Disk Drive Seek Error" << endl;        break;
-    case -113: cout << "Disk Drive Read Error" << endl;        break;
-    case -114: cout << "Search Key Not Found" << endl;         break;
-    case -115: cout << "Search Key Found" << endl;             break;
-    case -116: cout << "Invalid Key" << endl;                  break;
-    case -117: cout << "Invalid Node Link" << endl;            break;
-    case -118: cout << "Key Not Unique" << endl;               break;
-    case -119: cout << "Invalid Key Expression" << endl;       break;
-//  case -120: cout << "DBF File Not Open" << endl;            break;
-    case -121: cout << "Invalid Key Type" << endl;             break;
-    case -122: cout << "Invalid Node No" << endl;              break;
-    case -123: cout << "Node Full" << endl;                    break;
-    case -124: cout << "Invalid Field Number" << endl;         break;
-    case -125: cout << "Invalid Data" << endl;                 break;
-    case -126: cout << "Not a leaf node" << endl;              break;
-    case -127: cout << "Lock Failed" << endl;                  break;
-    case -128: cout << "Close Error" << endl;                  break;
-    case -129: cout << "Invalid Schema" << endl;               break;
-    case -130: cout << "Invalid Name" << endl;                 break;
-    case -131: cout << "Invalid Block Size" << endl;           break;
-    case -132: cout << "Invalid Block Number" << endl;         break;
-    case -133: cout << "Not a Memo field" << endl;             break;
-    case -134: cout << "No Memo Data" << endl;                 break;
-    case -135: cout << "Expression syntax error" << endl;      break;
-    case -136: cout << "Parse Error" << endl;                  break;
-    case -137: cout << "No Data" << endl;                      break;
-//  case -138: cout << "Unknown Token Type" << endl;           break;
-
-    case -140: cout << "Invalid Field" << endl;                break;
-    case -141: cout << "Insufficient Parms" << endl;           break;
-    case -142: cout << "Invalid Function" << endl;             break;
-    case -143: cout << "Invalid Field Length" << endl;         break;
-    case -144: cout << "Harvest Node Error" << endl;           break;
-    case -145: cout << "Invalid Date" << endl;                 break;
-    default:   cout << "Unknown error code" << endl;           break;
+    case    0: std::cout << "No Error" << std::endl;                     break;
+    case -100: std::cout << "End Of File" << std::endl;                  break;
+//  case -101: std::cout << "Beginning Of File" << std::endl;            break;
+    case -102: std::cout << "No Memory" << std::endl;                    break;
+    case -103: std::cout << "File Already Exists" << std::endl;          break;
+    case -104: std::cout << "Database or Index Open Error" << std::endl; break;
+    case -105: std::cout << "Error writing to disk drive" << std::endl;  break;
+    case -106: std::cout << "Unknown Field Type" << std::endl;           break;
+    case -107: std::cout << "Database already open" << std::endl;        break;
+    case -108: std::cout << "Not an Xbase type database" << std::endl;   break;
+    case -109: std::cout << "Invalid Record Number" << std::endl;        break;
+    case -110: std::cout << "Invalid Option" << std::endl;               break;
+    case -111: std::cout << "Database not open" << std::endl;            break;
+    case -112: std::cout << "Disk Drive Seek Error" << std::endl;        break;
+    case -113: std::cout << "Disk Drive Read Error" << std::endl;        break;
+    case -114: std::cout << "Search Key Not Found" << std::endl;         break;
+    case -115: std::cout << "Search Key Found" << std::endl;             break;
+    case -116: std::cout << "Invalid Key" << std::endl;                  break;
+    case -117: std::cout << "Invalid Node Link" << std::endl;            break;
+    case -118: std::cout << "Key Not Unique" << std::endl;               break;
+    case -119: std::cout << "Invalid Key Expression" << std::endl;       break;
+//  case -120: std::cout << "DBF File Not Open" << std::endl;            break;
+    case -121: std::cout << "Invalid Key Type" << std::endl;             break;
+    case -122: std::cout << "Invalid Node No" << std::endl;              break;
+    case -123: std::cout << "Node Full" << std::endl;                    break;
+    case -124: std::cout << "Invalid Field Number" << std::endl;         break;
+    case -125: std::cout << "Invalid Data" << std::endl;                 break;
+    case -126: std::cout << "Not a leaf node" << std::endl;              break;
+    case -127: std::cout << "Lock Failed" << std::endl;                  break;
+    case -128: std::cout << "Close Error" << std::endl;                  break;
+    case -129: std::cout << "Invalid Schema" << std::endl;               break;
+    case -130: std::cout << "Invalid Name" << std::endl;                 break;
+    case -131: std::cout << "Invalid Block Size" << std::endl;           break;
+    case -132: std::cout << "Invalid Block Number" << std::endl;         break;
+    case -133: std::cout << "Not a Memo field" << std::endl;             break;
+    case -134: std::cout << "No Memo Data" << std::endl;                 break;
+    case -135: std::cout << "Expression syntax error" << std::endl;      break;
+    case -136: std::cout << "Parse Error" << std::endl;                  break;
+    case -137: std::cout << "No Data" << std::endl;                      break;
+//  case -138: std::cout << "Unknown Token Type" << std::endl;           break;
+
+    case -140: std::cout << "Invalid Field" << std::endl;                break;
+    case -141: std::cout << "Insufficient Parms" << std::endl;           break;
+    case -142: std::cout << "Invalid Function" << std::endl;             break;
+    case -143: std::cout << "Invalid Field Length" << std::endl;         break;
+    case -144: std::cout << "Harvest Node Error" << std::endl;           break;
+    case -145: std::cout << "Invalid Date" << std::endl;                 break;
+    default:   std::cout << "Unknown error code" << std::endl;           break;
   }
 #else
-  cout << GetErrorMessage(ErrorNo) << endl;
+  std::cout << GetErrorMessage(ErrorNo) << std::endl;
 #endif
 }
 
--- libxbase-2.0.0.orig/xbase/xbstring.cpp
+++ libxbase-2.0.0/xbase/xbstring.cpp
@@ -55,8 +55,8 @@
 
 #include <xbase/xbase.h>
 
-#include <stdlib.h>
-#include <stdio.h>
+#include <cstdlib>
+#include <cstdio>
 
 #ifdef HAVE_STRING_H
 #include <string.h>
@@ -582,7 +582,7 @@
 //! Short description.
 /*!
 */
-XBDLLEXPORT ostream& operator << ( ostream& os, const xbString& xbs ) {
+XBDLLEXPORT std::ostream& operator << ( std::ostream& os, const xbString& xbs ) {
   return os << xbs.data;
 }
 
--- libxbase-2.0.0.orig/xbase/xbfilter.cpp
+++ libxbase-2.0.0/xbase/xbfilter.cpp
@@ -107,7 +107,7 @@
     if(( rc = d->xbase->ProcessExpression( e )) != XB_NO_ERROR )
       xb_error( rc );
 
-  cout << "xbfilter fixme" << endl;
+  std::cout << "xbfilter fixme" << std::endl;
 //    if( d->xbase->GetInt()){
       CurFilterRecNo = d->GetCurRecNo();
       return XB_NO_ERROR;
@@ -139,7 +139,7 @@
     if(( rc = d->xbase->ProcessExpression( e )) != XB_NO_ERROR )
       xb_error( rc );
 
-cout << "xbfilter fixme" << endl;
+std::cout << "xbfilter fixme" << std::endl;
 //    if( d->xbase->GetInt()){
       CurFilterRecNo = d->GetCurRecNo();
       return XB_NO_ERROR;
@@ -175,7 +175,7 @@
     if(( rc = d->xbase->ProcessExpression( e )) != XB_NO_ERROR )
       xb_error( rc );
 
-    cout << "xbfilter fix me" << endl;
+    std::cout << "xbfilter fix me" << std::endl;
 //    if( d->xbase->GetInt()){
       CurFilterRecNo = d->GetCurRecNo();
       return XB_NO_ERROR;
@@ -210,7 +210,7 @@
   while( rc == XB_NO_ERROR ){
     if(( rc = d->xbase->ProcessExpression( e )) != XB_NO_ERROR )
       xb_error( rc );
-   cout << "xbfilter fix me" << endl;
+   std::cout << "xbfilter fix me" << std::endl;
   //  if( d->xbase->GetInt()){
       CurFilterRecNo = d->GetCurRecNo();
       return XB_NO_ERROR;
--- libxbase-2.0.0.orig/xbase/xbase.h
+++ libxbase-2.0.0/xbase/xbase.h
@@ -1,4 +1,4 @@
-/*  $Id: xbase.h,v 1.19 2001/06/26 23:43:11 dbryson Exp $
+/*  $Id: xbase.h.in,v 1.5 2000/11/10 19:30:29 dbryson Exp $
 
     Xbase project source code
 
--- libxbase-2.0.0.orig/xbase/stamp-h
+++ libxbase-2.0.0/xbase/stamp-h
@@ -0,0 +1 @@
+timestamp
--- libxbase-2.0.0.orig/xbase/expfunc.cpp
+++ libxbase-2.0.0/xbase/expfunc.cpp
@@ -58,8 +58,8 @@
 
 #include <ctype.h>
 #include <math.h>
-#include <stdlib.h>
-#include <string.h>
+#include <cstdlib>
+#include <cstring>
 
 #include <xbase/exp.h>
 #include <xbase/xbexcept.h>
@@ -327,7 +327,7 @@
       break;
 
       default:
-      cout << "\nInternal error. " << ptype;
+      std::cout << "\nInternal error. " << ptype;
       break;
    }
    Push( (void *) WorkNode );
--- libxbase-2.0.0.orig/xbase/stack.cpp
+++ libxbase-2.0.0/xbase/stack.cpp
@@ -57,9 +57,9 @@
 
 #include <xbase/xbase.h>
 
-#include <string.h>
-#include <stdlib.h>
-#include <iostream.h>
+#include <cstring>
+#include <cstdlib>
+#include <iostream>
 
 #include <xbase/xstack.h>
 
@@ -199,32 +199,32 @@
    xbStackElement * e;
    if( StackDepth == 0 )
    {
-      cout << "\nStack is empty...";
+      std::cout << "\nStack is empty...";
       return;
    }
 
-   cout << "\nThere are " << StackDepth << " entries.";
-   cout << "\nFirst = " << First << "  Last = " << Last;
+   std::cout << "\nThere are " << StackDepth << " entries.";
+   std::cout << "\nFirst = " << First << "  Last = " << Last;
 
    e = First;
    while( e )
    {
-      cout << "\n*****************************";
-      cout << "\nThis      = " << e;
-      cout << "\nNext      = " << e->Next;
-      cout << "\nPrevious  = " << e->Previous;
-      cout << "\nUser Pointer = " << e->UserPtr;
+      std::cout << "\n*****************************";
+      std::cout << "\nThis      = " << e;
+      std::cout << "\nNext      = " << e->Next;
+      std::cout << "\nPrevious  = " << e->Previous;
+      std::cout << "\nUser Pointer = " << e->UserPtr;
       e = e->Next;
    }
-   cout << "\nFree list follows...";
+   std::cout << "\nFree list follows...";
    e = Free;
    while( e )
    {
-      cout << "\n*****************************";
-      cout << "\nThis      = " << e;
-      cout << "\nNext      = " << e->Next;
-      cout << "\nPrevious  = " << e->Previous;
-      cout << "\nUser Pointer = " << e->UserPtr;
+      std::cout << "\n*****************************";
+      std::cout << "\nThis      = " << e;
+      std::cout << "\nNext      = " << e->Next;
+      std::cout << "\nPrevious  = " << e->Previous;
+      std::cout << "\nUser Pointer = " << e->UserPtr;
       e = e->Next;
    }
    return;
--- libxbase-2.0.0.orig/xbase/memo.cpp
+++ libxbase-2.0.0/xbase/memo.cpp
@@ -56,7 +56,7 @@
 #include <xbase/xbase.h>
 #ifdef XB_MEMO_FIELDS
 
-#include <stdio.h>
+#include <cstdio>
 #include <xbase/xbexcept.h>
 
 /*! \file memo.cpp
@@ -1028,16 +1028,16 @@
 void xbDbf::DumpMemoHeader( void ) const
 {
    xbShort i;
-   cout << "\n*********************************";
-   cout << "\nMemo header data...";
-   cout << "\nNext Block " << MemoHeader.NextBlock;
+   std::cout << "\n*********************************";
+   std::cout << "\nMemo header data...";
+   std::cout << "\nNext Block " << MemoHeader.NextBlock;
    if( IsType4Dbt() )
    {
-      cout << "\nFilename   ";
+      std::cout << "\nFilename   ";
       for( i = 0; i < 8; i++ )
-         cout << MemoHeader.FileName[i];
+         std::cout << MemoHeader.FileName[i];
    }
-   cout << "\nBlocksize  " << MemoHeader.BlockSize;
+   std::cout << "\nBlocksize  " << MemoHeader.BlockSize;
    return;
 }
 /***********************************************************************/
@@ -1053,16 +1053,16 @@
       return rc;
    LastDataBlock = CalcLastDataBlock();
    CurBlock = MemoHeader.NextBlock;
-   cout << "\nTotal blocks in file = " << LastDataBlock;
-   cout << "\nHead Next Block = " << CurBlock;
+   std::cout << "\nTotal blocks in file = " << LastDataBlock;
+   std::cout << "\nHead Next Block = " << CurBlock;
    while( CurBlock < LastDataBlock )
    {
       if(( rc = ReadMemoBlock( CurBlock, 2 )) != XB_NO_ERROR )
          return rc;
-      cout << "\n**********************************";
-      cout << "\nThis Block = " << CurBlock;
-      cout << "\nNext Block = " << NextFreeBlock;
-      cout << "\nNo Of Blocks = " << FreeBlockCnt << "\n";
+      std::cout << "\n**********************************";
+      std::cout << "\nThis Block = " << CurBlock;
+      std::cout << "\nNext Block = " << NextFreeBlock;
+      std::cout << "\nNo Of Blocks = " << FreeBlockCnt << "\n";
       CurBlock = NextFreeBlock;
    }
    return XB_NO_ERROR;
@@ -1079,17 +1079,17 @@
    if( IsType3Dbt() )
    {
       for( i = 0; i < 512; i++ )
-         cout << *p++;
+         std::cout << *p++;
    }
    else
    {
-      cout << "\nField1     => " << mfield1;
-      cout << "\nStart Pos  => " << MStartPos;
-      cout << "\nField Len  => " << MFieldLen;
-      cout << "\nBlock data => ";
+      std::cout << "\nField1     => " << mfield1;
+      std::cout << "\nStart Pos  => " << MStartPos;
+      std::cout << "\nField Len  => " << MFieldLen;
+      std::cout << "\nBlock data => ";
       p += 8;
       for( i = 8; i < MemoHeader.BlockSize; i++ )
-         cout << *p++;
+         std::cout << *p++;
    }
    return;
 }
--- libxbase-2.0.0.orig/xbase/html.cpp
+++ libxbase-2.0.0/xbase/html.cpp
@@ -61,9 +61,9 @@
 
 #include <ctype.h>
 #include <fcntl.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
+#include <cstdio>
+#include <cstdlib>
+#include <cstring>
 #include <sys/types.h>             /* BSDI BSD/OS 3.1 */
 
 #include <xbase/xbexcept.h>
@@ -78,7 +78,7 @@
 */
 void xbHtml::TextOut( const char * String )
 {
-   cout << String;
+   std::cout << String;
 }
 /************************************************************************/
 //! Short description
@@ -111,18 +111,18 @@
 
    xbShort i;
    if( NoOfDataFields == 0 )
-      cout << "No Input Data From Form\n";
+      std::cout << "No Input Data From Form\n";
    else
    {
-      cout << "There are " << NoOfDataFields << " fields";
-      cout << "<BR>" << NoOfDataFields << " Field Name / Data Values received\n";
-      cout << "<BR>-----------------------------------\n";
+      std::cout << "There are " << NoOfDataFields << " fields";
+      std::cout << "<BR>" << NoOfDataFields << " Field Name / Data Values received\n";
+      std::cout << "<BR>-----------------------------------\n";
       for( i = 0; i < NoOfDataFields; i++ )
       {
-         cout << "<br>" << FieldNameArray[i] << " => ";
+         std::cout << "<br>" << FieldNameArray[i] << " => ";
 //       PrintEncodedString( DataValueArray[i] );
          if( DataValueArray[i] )
-            cout << DataValueArray[i];
+            std::cout << DataValueArray[i];
       }
    }
 }
@@ -368,42 +368,42 @@
    xbShort i;
    char  buf[255];
 
-   cout << "\n<TABLE>";
+   std::cout << "\n<TABLE>";
    if( Title )
-      cout << "\n<CAPTION ALIGN=\"TOP\">" << Title << "</CAPTION><BR>";
+      std::cout << "\n<CAPTION ALIGN=\"TOP\">" << Title << "</CAPTION><BR>";
    
    i = 0;
    while( fl[i].FieldLen != 0 )
    {
-      cout << "\n<BR><TR><TH ALIGN=\"LEFT\">" << fl[i].Label;
+      std::cout << "\n<BR><TR><TH ALIGN=\"LEFT\">" << fl[i].Label;
       if( fl[i].Option == 2 )
       {
          if( !d )
                 xb_error(XB_NOT_OPEN);
          d->GetField( fl[i].FieldNo, buf );
-         cout << "<TD>" << buf;
+         std::cout << "<TD>" << buf;
       }
       else
       {
-         cout << "<TD><INPUT TEXT NAME = \"" << fl[i].FieldName << "\"";
-         cout << " size = " << fl[i].FieldLen;
+         std::cout << "<TD><INPUT TEXT NAME = \"" << fl[i].FieldName << "\"";
+         std::cout << " size = " << fl[i].FieldLen;
      
          if( fl[i].Option == 1 )
-            cout << " TYPE=\"password\" ";
+            std::cout << " TYPE=\"password\" ";
 
-         cout << " value = ";
+         std::cout << " value = ";
          if( Option == 1 )
          {
        if( !d )
           xb_error(XB_NOT_OPEN);
             d->GetField( fl[i].FieldNo, buf );
-            cout << "\"" << buf << "\"";
+            std::cout << "\"" << buf << "\"";
          }
-         cout << ">";
+         std::cout << ">";
       }  
       i++;
    }
-   cout << "\n</TABLE>";
+   std::cout << "\n</TABLE>";
    return XB_NO_ERROR;
 }
 /************************************************************************/
@@ -413,8 +413,8 @@
 */
 void xbHtml::StartHtmlPage( const char * Title )
 {
-   cout << "Content-type: text/html\n\n";
-   cout << "\n<HTML><HEAD><TITLE>" << Title << "</TITLE></HEAD><BODY>";
+   std::cout << "Content-type: text/html\n\n";
+   std::cout << "\n<HTML><HEAD><TITLE>" << Title << "</TITLE></HEAD><BODY>";
 }
 /************************************************************************/
 //! Short description
@@ -425,11 +425,11 @@
 {
    switch( c )
    {
-      case '<':  cout << "&lt;"; break;
-      case '>':  cout << "&gt;"; break;
-      case '&':  cout << "&amp;"; break;
-      case '"':  cout << "&quot;"; break;
-      default: cout << c; break;  
+      case '<':  std::cout << "&lt;"; break;
+      case '>':  std::cout << "&gt;"; break;
+      case '&':  std::cout << "&amp;"; break;
+      case '"':  std::cout << "&quot;"; break;
+      default: std::cout << c; break;  
    }
    return;
 }
@@ -467,23 +467,23 @@
      )
       xb_error(XB_INVALID_OPTION);
 
-   cout << "\nSet-Cookie: " << Name << "=" << Value << ";";
+   std::cout << "\nSet-Cookie: " << Name << "=" << Value << ";";
    if( ExpDate )
    {
-      cout << ExpDate << ";";
+      std::cout << ExpDate << ";";
       if( ExpTime )
-         cout << ExpTime;
+         std::cout << ExpTime;
       else
-         cout << "00:00:00";
-      cout << TimeZone << ";";
+         std::cout << "00:00:00";
+      std::cout << TimeZone << ";";
    }
    if( Path )
-      cout << "\nPath=" << Path << ";";
+      std::cout << "\nPath=" << Path << ";";
    if( Domain )
-      cout << "domain=" << Domain << ";";
+      std::cout << "domain=" << Domain << ";";
    if( Secure )
-      cout << "Secure";
-   cout << "\n";
+      std::cout << "Secure";
+   std::cout << "\n";
    return XB_NO_ERROR;
 }
 /************************************************************************/
@@ -515,7 +515,7 @@
 */
 void xbHtml::SendRedirect( char * url ) const
 {  
-   cout << "Location: " << url << endl << endl; 
+   std::cout << "Location: " << url << std::endl << std::endl; 
 }
 /************************************************************************/
 //! Short description
--- libxbase-2.0.0.orig/xbase/Makefile
+++ libxbase-2.0.0/xbase/Makefile
@@ -0,0 +1,461 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+#	This file is part of the XBase libraries
+#    Copyright (C) 1998 Denis Pershin (dyp@inetlab.com)
+#
+#
+#    This library is free software; you can redistribute it and/or
+#    modify it under the terms of the GNU Lesser General Public
+#    License as published by the Free Software Foundation; either
+#    version 2.1 of the License, or (at your option) any later version.
+#
+#    This library is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#    Lesser General Public License for more details.
+#
+#    You should have received a copy of the GNU Lesser General Public
+#    License along with this library; if not, write to the Free Software
+#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+#    Contact:
+#
+#      Mail:
+#
+#        Technology Associates, Inc.
+#        XBase Project
+#        1455 Deming Way #11
+#        Sparks, NV 89434
+#        USA
+#
+#      Email:
+#
+#        xbase@techass.com
+#
+#      See our website at:
+#
+#        xdb.sourceforge.net
+#
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = ..
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = ..
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+INCLUDES = -I$(topdir)
+
+lib_LTLIBRARIES = libxbase.la
+
+pkginclude_HEADERS = dbf.h exp.h html.h ndx.h retcodes.h xbase.h 	xdate.h xstack.h xtypes.h xbexcept.h xbstring.h index.h ntx.h           xbconfig.h xbfilter.h
+
+
+#install-data-hook:
+#	(cd $(includedir); rm -f xbase.h; ln -s xbase/xbase.h xbase.h)
+
+libxbase_la_SOURCES = dbf.cpp exp.cpp expfunc.cpp expproc.cpp fields.cpp 	html.cpp lock.cpp memo.cpp ndx.cpp stack.cpp xbase.cpp xdate.cpp 	xbexcept.cpp xbstring.cpp index.cpp ntx.cpp xbfilter.cpp 
+
+
+EXTRA_DIST =  	xbase.h 	xbconfigw32.h 	makefile.g95 	xbase.ide
+
+
+libxbase_la_LDFLAGS = -version-info 0:0:0 -release 2.0
+libxbase_la_LIBADD = 
+
+MAINTAINERCLEANFILES = Makefile.in stamp-h.in xbconfig.h.in
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = xbconfig.h
+CONFIG_CLEAN_FILES =  xbase.h
+LTLIBRARIES =  $(lib_LTLIBRARIES)
+
+
+DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I.
+CPPFLAGS = 
+LDFLAGS = -s
+LIBS = 
+libxbase_la_DEPENDENCIES = 
+libxbase_la_OBJECTS =  dbf.lo exp.lo expfunc.lo expproc.lo fields.lo \
+html.lo lock.lo memo.lo ndx.lo stack.lo xbase.lo xdate.lo xbexcept.lo \
+xbstring.lo index.lo ntx.lo xbfilter.lo
+CXXFLAGS = -O2 -Wall
+CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
+HEADERS =  $(pkginclude_HEADERS)
+
+DIST_COMMON =  ./stamp-h.in Makefile.am Makefile.in xbase.h.in \
+xbconfig.h.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = gtar
+GZIP_ENV = --best
+SOURCES = $(libxbase_la_SOURCES)
+OBJECTS = $(libxbase_la_OBJECTS)
+
+all: all-redirect
+.SUFFIXES:
+.SUFFIXES: .S .c .cpp .lo .o .s
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps xbase/Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+
+xbconfig.h: stamp-h
+	@if test ! -f $@; then \
+		rm -f stamp-h; \
+		$(MAKE) stamp-h; \
+	else :; fi
+stamp-h: $(srcdir)/xbconfig.h.in $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES= CONFIG_HEADERS=xbase/xbconfig.h \
+	     $(SHELL) ./config.status
+	@echo timestamp > stamp-h 2> /dev/null
+$(srcdir)/xbconfig.h.in: $(srcdir)/stamp-h.in
+	@if test ! -f $@; then \
+		rm -f $(srcdir)/stamp-h.in; \
+		$(MAKE) $(srcdir)/stamp-h.in; \
+	else :; fi
+$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOHEADER)
+	@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null
+
+mostlyclean-hdr:
+
+clean-hdr:
+
+distclean-hdr:
+	-rm -f xbconfig.h
+
+maintainer-clean-hdr:
+xbase.h: $(top_builddir)/config.status xbase.h.in
+	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+mostlyclean-libLTLIBRARIES:
+
+clean-libLTLIBRARIES:
+	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
+
+distclean-libLTLIBRARIES:
+
+maintainer-clean-libLTLIBRARIES:
+
+install-libLTLIBRARIES: $(lib_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	$(mkinstalldirs) $(DESTDIR)$(libdir)
+	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
+	  if test -f $$p; then \
+	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
+	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
+	  else :; fi; \
+	done
+
+uninstall-libLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
+	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
+	done
+
+.c.o:
+	$(COMPILE) -c $<
+
+.s.o:
+	$(COMPILE) -c $<
+
+.S.o:
+	$(COMPILE) -c $<
+
+mostlyclean-compile:
+	-rm -f *.o core *.core
+
+clean-compile:
+
+distclean-compile:
+	-rm -f *.tab.c
+
+maintainer-clean-compile:
+
+.c.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.s.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.S.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+
+maintainer-clean-libtool:
+
+libxbase.la: $(libxbase_la_OBJECTS) $(libxbase_la_DEPENDENCIES)
+	$(CXXLINK) -rpath $(libdir) $(libxbase_la_LDFLAGS) $(libxbase_la_OBJECTS) $(libxbase_la_LIBADD) $(LIBS)
+.cpp.o:
+	$(CXXCOMPILE) -c $<
+.cpp.lo:
+	$(LTCXXCOMPILE) -c $<
+
+install-pkgincludeHEADERS: $(pkginclude_HEADERS)
+	@$(NORMAL_INSTALL)
+	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
+	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
+	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
+	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(pkgincludedir)/$$p"; \
+	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(pkgincludedir)/$$p; \
+	done
+
+uninstall-pkgincludeHEADERS:
+	@$(NORMAL_UNINSTALL)
+	list='$(pkginclude_HEADERS)'; for p in $$list; do \
+	  rm -f $(DESTDIR)$(pkgincludedir)/$$p; \
+	done
+
+tags: TAGS
+
+ID: $(HEADERS) $(SOURCES) $(LISP)
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	here=`pwd` && cd $(srcdir) \
+	  && mkid -f$$here/ID $$unique $(LISP)
+
+TAGS:  $(HEADERS) $(SOURCES) xbconfig.h.in $(TAGS_DEPENDENCIES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)xbconfig.h.in$$unique$(LISP)$$tags" \
+	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags xbconfig.h.in $$unique $(LISP) -o $$here/TAGS)
+
+mostlyclean-tags:
+
+clean-tags:
+
+distclean-tags:
+	-rm -f TAGS ID
+
+maintainer-clean-tags:
+
+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
+
+subdir = xbase
+
+distdir: $(DISTFILES)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+dbf.lo dbf.o : dbf.cpp
+expfunc.lo expfunc.o : expfunc.cpp
+exp.lo exp.o : exp.cpp
+expproc.lo expproc.o : expproc.cpp
+fields.lo fields.o : fields.cpp
+html.lo html.o : html.cpp
+index.lo index.o : index.cpp
+lock.lo lock.o : lock.cpp
+memo.lo memo.o : memo.cpp
+ndx.lo ndx.o : ndx.cpp
+ntx.lo ntx.o : ntx.cpp
+stack.lo stack.o : stack.cpp
+xbase.lo xbase.o : xbase.cpp
+xbexcept.lo xbexcept.o : xbexcept.cpp
+xbfilter.lo xbfilter.o : xbfilter.cpp
+xbstring.lo xbstring.o : xbstring.cpp
+xdate.lo xdate.o : xdate.cpp
+
+info-am:
+info: info-am
+dvi-am:
+dvi: dvi-am
+check-am: all-am
+check: check-am
+installcheck-am:
+installcheck: installcheck-am
+all-recursive-am: xbconfig.h
+	$(MAKE) $(AM_MAKEFLAGS) all-recursive
+
+install-exec-am: install-libLTLIBRARIES
+install-exec: install-exec-am
+
+install-data-am: install-pkgincludeHEADERS
+install-data: install-data-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-am
+uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS
+uninstall: uninstall-am
+all-am: Makefile $(LTLIBRARIES) $(HEADERS) xbconfig.h
+all-redirect: all-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs:
+	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir)
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
+mostlyclean-am:  mostlyclean-hdr mostlyclean-libLTLIBRARIES \
+		mostlyclean-compile mostlyclean-libtool \
+		mostlyclean-tags mostlyclean-generic
+
+mostlyclean: mostlyclean-am
+
+clean-am:  clean-hdr clean-libLTLIBRARIES clean-compile clean-libtool \
+		clean-tags clean-generic mostlyclean-am
+
+clean: clean-am
+
+distclean-am:  distclean-hdr distclean-libLTLIBRARIES distclean-compile \
+		distclean-libtool distclean-tags distclean-generic \
+		clean-am
+	-rm -f libtool
+
+distclean: distclean-am
+
+maintainer-clean-am:  maintainer-clean-hdr \
+		maintainer-clean-libLTLIBRARIES \
+		maintainer-clean-compile maintainer-clean-libtool \
+		maintainer-clean-tags maintainer-clean-generic \
+		distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-am
+
+.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \
+mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
+clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
+uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
+distclean-compile clean-compile maintainer-clean-compile \
+mostlyclean-libtool distclean-libtool clean-libtool \
+maintainer-clean-libtool uninstall-pkgincludeHEADERS \
+install-pkgincludeHEADERS tags mostlyclean-tags distclean-tags \
+clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
+check-am installcheck-am installcheck all-recursive-am install-exec-am \
+install-exec install-data-am install-data install-am install \
+uninstall-am uninstall all-redirect all-am all installdirs \
+mostlyclean-generic distclean-generic clean-generic \
+maintainer-clean-generic clean mostlyclean distclean maintainer-clean
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/xbase/index.h
+++ libxbase-2.0.0/xbase/index.h
@@ -47,10 +47,6 @@
 #ifndef __XB_INDEX_H__
 #define __XB_INDEX_H__
 
-#ifdef __GNUG__
-#pragma interface
-#endif
-
 #include <xbase/xbase.h>
 #include <string.h>
 
--- libxbase-2.0.0.orig/xbase/ndx.h
+++ libxbase-2.0.0/xbase/ndx.h
@@ -52,10 +52,6 @@
 #ifndef __XB_NDX_H__
 #define __XB_NDX_H__
 
-#ifdef __GNUG__
-#pragma interface
-#endif
-
 #include <xbase/xbase.h>
 #include <string.h>
 
--- libxbase-2.0.0.orig/xbase/exp.cpp
+++ libxbase-2.0.0/xbase/exp.cpp
@@ -60,7 +60,7 @@
 #include <xbase/xbase.h>
 #ifdef XB_EXPRESSIONS
 #include <ctype.h>
-#include <string.h>
+#include <cstring>
 
 #include <xbase/xbexcept.h>
 
@@ -1027,23 +1027,23 @@
 /*!
 */
 void xbExpn::DumpExpNode(xbExpNode *e) {
-   cout << "\n\n****** Exp Node ******";
-   cout << "\nExp Node Address " << e;
-   cout << "  Node Text = "  << e->NodeText;
-   cout << "\nType = "       << e->Type;
-   cout << " Len = "         << e->Len;
-   cout << " InTree = "      << e->InTree;
-   cout << "\nParent = "     << e->Node;
-   cout << "\nField No = "   << e->FieldNo;
-   cout << "\nExpressionType = " << e->ExpressionType;
-   cout << "\nStringResult = "     << e->StringResult;
-   cout << " DoubResult = "  << e->DoubResult;
-   cout << " IntResult = "   << e->IntResult;
-   cout << " ResultLen = "   << e->ResultLen;
-   cout << " DataLen = "     << e->DataLen;
-   cout << " Sibling 1 = "   << e->Sibling1;
-   cout << " Sibling 2 = "   << e->Sibling2;
-   if( e->Sibling3 ) cout << " Sibling3 = " << e->Sibling3;
+   std::cout << "\n\n****** Exp Node ******";
+   std::cout << "\nExp Node Address " << e;
+   std::cout << "  Node Text = "  << e->NodeText;
+   std::cout << "\nType = "       << e->Type;
+   std::cout << " Len = "         << e->Len;
+   std::cout << " InTree = "      << e->InTree;
+   std::cout << "\nParent = "     << e->Node;
+   std::cout << "\nField No = "   << e->FieldNo;
+   std::cout << "\nExpressionType = " << e->ExpressionType;
+   std::cout << "\nStringResult = "     << e->StringResult;
+   std::cout << " DoubResult = "  << e->DoubResult;
+   std::cout << " IntResult = "   << e->IntResult;
+   std::cout << " ResultLen = "   << e->ResultLen;
+   std::cout << " DataLen = "     << e->DataLen;
+   std::cout << " Sibling 1 = "   << e->Sibling1;
+   std::cout << " Sibling 2 = "   << e->Sibling2;
+   if( e->Sibling3 ) std::cout << " Sibling3 = " << e->Sibling3;
    return;
 }
 
--- libxbase-2.0.0.orig/xbase/dbf.cpp
+++ libxbase-2.0.0/xbase/dbf.cpp
@@ -73,9 +73,9 @@
 #endif
 #include <errno.h>
 
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
+#include <cstdio>
+#include <cstdlib>
+#include <cstring>
 
 #include <xbase/xbexcept.h>
 
@@ -802,31 +802,31 @@
    if( DbfStatus == XB_CLOSED )
      xb_error(XB_NOT_OPEN);
 
-   cout << "\nDatabase file " << DatabaseName << endl << endl;
+   std::cout << "\nDatabase file " << DatabaseName << std::endl << std::endl;
 
    if( Option != 2 )
    {
-      cout << "File header data:" << endl;
+      std::cout << "File header data:" << std::endl;
       if( Version == 3 )
-         cout << "Dbase III file" << endl;
+         std::cout << "Dbase III file" << std::endl;
       else if ( Version == 83 )
-         cout << "Dbase III file with memo fields" << endl << endl;
+         std::cout << "Dbase III file with memo fields" << std::endl << std::endl;
    
-      cout << "Last update date = " 
-          << (int) UpdateMM << "/" << (int) UpdateDD << "/" << (int) UpdateYY % 100 << endl;  
+      std::cout << "Last update date = " 
+          << (int) UpdateMM << "/" << (int) UpdateDD << "/" << (int) UpdateYY % 100 << std::endl;  
 
-      cout << "Header length    = " << HeaderLen << endl;
-      cout << "Record length    = " << RecordLen << endl;
-      cout << "Records in file  = " << NoOfRecs << endl << endl;
+      std::cout << "Header length    = " << HeaderLen << std::endl;
+      std::cout << "Record length    = " << RecordLen << std::endl;
+      std::cout << "Records in file  = " << NoOfRecs << std::endl << std::endl;
 #ifdef XB_REAL_DELETE
-      cout << "First Free Rec   = " << FirstFreeRec << endl << endl;
+      std::cout << "First Free Rec   = " << FirstFreeRec << std::endl << std::endl;
 #endif      
    }
    if( Option != 1 )
    {
 
-      cout << "Field Name   Type  Length  Decimals" << endl;
-      cout << "----------   ----  ------  --------" << endl;
+      std::cout << "Field Name   Type  Length  Decimals" << std::endl;
+      std::cout << "----------   ----  ------  --------" << std::endl;
       for( i = 0; i <NoOfFields; i++ )
       {
          if( SchemaPtr[i].Type == 'C' && SchemaPtr[i].NoOfDecs > 0 )
@@ -837,7 +837,7 @@
                   SchemaPtr[i].Type, SchemaPtr[i].FieldLen, SchemaPtr[i].NoOfDecs );
       }
    }
-   cout << endl;
+   std::cout << std::endl;
    return XB_NO_ERROR;
 }
 #endif
@@ -1575,17 +1575,17 @@
    if( i != XB_NO_ERROR )
       return i;
 
-   cout << "\nREC NUMBER " << RecNo << "\n";
+   std::cout << "\nREC NUMBER " << RecNo << "\n";
 
    if( RecordDeleted() ) 
-      cout << "\nRecord deleted...\n";
+      std::cout << "\nRecord deleted...\n";
 
    for( i = 0; i < NoOfFields; i++ )
    {
       GetField( i, buf );
-      cout << SchemaPtr[i].FieldName << " = '" << buf << "'\n";
+      std::cout << SchemaPtr[i].FieldName << " = '" << buf << "'\n";
    }
-   cout << "\n";
+   std::cout << "\n";
    return XB_NO_ERROR;
 }
 /************************************************************************/
--- libxbase-2.0.0.orig/xbase/ndx.cpp
+++ libxbase-2.0.0/xbase/ndx.cpp
@@ -66,7 +66,7 @@
 #endif
 
 #include <xbase/xbase.h>
-#include <iostream.h>
+#include <iostream>
 
 #ifdef XB_INDEX_NDX
 
@@ -74,9 +74,9 @@
 #include <io.h>
 #endif
 
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
+#include <cstdio>
+#include <cstdlib>
+#include <cstring>
 
 #include <xbase/xbexcept.h>
 
@@ -148,26 +148,26 @@
 void xbNdx::DumpNodeChain()
 {
    xbNdxNodeLink  *n;
-   cout << "\n*************************\n";
-   cout <<   "xbNodeLinkCtr = " << xbNodeLinkCtr;
-   cout << "\nReused      = " << ReusedxbNodeLinks << "\n";
+   std::cout << "\n*************************\n";
+   std::cout <<   "xbNodeLinkCtr = " << xbNodeLinkCtr;
+   std::cout << "\nReused      = " << ReusedxbNodeLinks << "\n";
 
    n = NodeChain;
    while(n)
    {
-      cout << "xbNodeLink Chain" << n->NodeNo << "\n";
+      std::cout << "xbNodeLink Chain" << n->NodeNo << "\n";
       n = n->NextNode;
    }
    n = FreeNodeChain;
    while(n)
    {
-      cout << "FreexbNodeLink Chain" << n->NodeNo << "\n";
+      std::cout << "FreexbNodeLink Chain" << n->NodeNo << "\n";
       n = n->NextNode;
    }
    n = DeleteChain;
    while(n)
    {
-      cout << "DeleteLink Chain" << n->NodeNo << "\n";
+      std::cout << "DeleteLink Chain" << n->NodeNo << "\n";
       n = n->NextNode;
    }
 }
@@ -226,20 +226,20 @@
 #ifdef XBASE_DEBUG
 void xbNdx::DumpHdrNode()
 {
-   cout << "\nStart node    = " << HeadNode.StartNode;
-   cout << "\nTotal nodes   = " << HeadNode.TotalNodes;
-   cout << "\nNo of keys    = " << HeadNode.NoOfKeys;
-   cout << "\nKey Length    = " << HeadNode.KeyLen;
-   cout << "\nKeys Per Node = " << HeadNode.KeysPerNode;
-   cout << "\nKey type      = " << HeadNode.KeyType;
-   cout << "\nKey size      = " << HeadNode.KeySize;
-   cout << "\nUnknown 2     = " << HeadNode.Unknown2;
-   cout << "\nUnique        = " << HeadNode.Unique;
-   cout << "\nKeyExpression = " << HeadNode.KeyExpression;
+   std::cout << "\nStart node    = " << HeadNode.StartNode;
+   std::cout << "\nTotal nodes   = " << HeadNode.TotalNodes;
+   std::cout << "\nNo of keys    = " << HeadNode.NoOfKeys;
+   std::cout << "\nKey Length    = " << HeadNode.KeyLen;
+   std::cout << "\nKeys Per Node = " << HeadNode.KeysPerNode;
+   std::cout << "\nKey type      = " << HeadNode.KeyType;
+   std::cout << "\nKey size      = " << HeadNode.KeySize;
+   std::cout << "\nUnknown 2     = " << HeadNode.Unknown2;
+   std::cout << "\nUnique        = " << HeadNode.Unique;
+   std::cout << "\nKeyExpression = " << HeadNode.KeyExpression;
 #ifdef XB_VAR_NODESIZE
-   cout << "\nNodeSize      = " << NodeSize;
+   std::cout << "\nNodeSize      = " << NodeSize;
 #endif // XB_VAR_NODESIZE
-   cout << "\n";
+   std::cout << "\n";
 
 #if 0
    FILE * log;
@@ -1930,7 +1930,7 @@
    /* if not at the end of the node shift everthing to the right */
    if( n1->CurKeyNo+1 < HeadNode.KeysPerNode )   /* this clause appears to work */
    {
-      if( CurNode->NodeNo == HeadNode.StartNode ) cout << "\nHead node ";
+      if( CurNode->NodeNo == HeadNode.StartNode ) std::cout << "\nHead node ";
    
       for( j = 0,i = n1->CurKeyNo+1; i < n1->Leaf.NoOfKeysThisNode; i++,j++ ) 
       {
@@ -2632,7 +2632,7 @@
    else
    {
       /* this should never be true-but could be if 100 byte limit is ignored*/
-      cout << "Fatal index error\n";
+      std::cout << "Fatal index error\n";
       exit(0);
    }
    return XB_NO_ERROR;   
@@ -2716,7 +2716,7 @@
    while( ctr < dbf->NoOfRecords() )
    {
       ctr++;
-      if( option ) cout << "\nChecking Record " << ctr;
+      if( option ) std::cout << "\nChecking Record " << ctr;
       if(!dbf->RecordDeleted())      
       {
          CreateKey( 0, 0 );
@@ -2725,8 +2725,8 @@
          {
             if( option )
             {
-               cout << "\nRecord number " << dbf->GetCurRecNo() <<  " Not Found\n";
-               cout << "Key = " << KeyBuf << "\n";
+               std::cout << "\nRecord number " << dbf->GetCurRecNo() <<  " Not Found\n";
+               std::cout << "Key = " << KeyBuf << "\n";
             }
             return rc;
          }
@@ -2735,8 +2735,8 @@
          return rc;
    }
    if( option ){
-      cout << "\nTotal records checked = " << ctr << "\n";
-      cout << "Exiting with rc = " << rc << "\n";
+      std::cout << "\nTotal records checked = " << ctr << "\n";
+      std::cout << "Exiting with rc = " << rc << "\n";
    }
 
    return XB_NO_ERROR;
--- libxbase-2.0.0.orig/xbase/ntx.h
+++ libxbase-2.0.0/xbase/ntx.h
@@ -218,7 +218,7 @@
    xbShort  KeyExists( char * Key ) { return FindKey( Key, strlen( Key ), 0 ); }
    xbShort  KeyExists( xbDouble );
 
-   xbShort xbNtx::AllocKeyBufs(void);
+   xbShort  AllocKeyBufs(void);
 
    virtual void GetExpression(char *buf, int len);
 };
--- libxbase-2.0.0.orig/xbase/xbstring.h
+++ libxbase-2.0.0/xbase/xbstring.h
@@ -55,8 +55,8 @@
 #include <xbase/xbconfig.h>
 #endif
 
-#include <stdlib.h>
-#include <iostream.h>
+#include <cstdlib>
+#include <iostream>
 
 /*! \file xbstring.h
 */
@@ -119,7 +119,7 @@
   bool operator <= ( const xbString& ) const;
   bool operator >= ( const xbString& ) const;
 
-  friend ostream& operator << ( ostream&, const xbString& );
+  friend std::ostream& operator << ( std::ostream&, const xbString& );
 
   xbString &remove(size_t pos = 0, int n = npos);
   xbString mid(size_t pos = 0, int n = npos) const;
--- libxbase-2.0.0.orig/xbase/dbf.h
+++ libxbase-2.0.0/xbase/dbf.h
@@ -65,7 +65,7 @@
 #include <xbase/xtypes.h>
 #include <xbase/xdate.h>
 
-#include <iostream.h>
+#include <iostream>
 #include <stdio.h>
 
 /*! \file dbf.h
--- libxbase-2.0.0.orig/xbase/ntx.cpp
+++ libxbase-2.0.0/xbase/ntx.cpp
@@ -147,26 +147,26 @@
 void xbNtx::DumpNodeChain( void )
 {
    xbNodeLink  *n;
-   cout << "\n*************************\n";
-   cout <<   "NodeLinkCtr = " << NodeLinkCtr;
-   cout << "\nReused      = " << ReusedNodeLinks << "\n";
+   std::cout << "\n*************************\n";
+   std::cout <<   "NodeLinkCtr = " << NodeLinkCtr;
+   std::cout << "\nReused      = " << ReusedNodeLinks << "\n";
 
    n = NodeChain;
    while(n)
    {
-      cout << "xbNodeLink Chain" << n->NodeNo << "\n";
+      std::cout << "xbNodeLink Chain" << n->NodeNo << "\n";
       n = n->NextNode;
    }
    n = FreeNodeChain;
    while(n)
    {
-      cout << "FreeNodeLink Chain" << n->NodeNo << "\n";
+      std::cout << "FreeNodeLink Chain" << n->NodeNo << "\n";
       n = n->NextNode;
    }
    n = DeleteChain;
    while(n)
    {
-      cout << "DeleteLink Chain" << n->NodeNo << "\n";
+      std::cout << "DeleteLink Chain" << n->NodeNo << "\n";
       n = n->NextNode;
    }
 }
@@ -249,18 +249,18 @@
 #ifdef XBASE_DEBUG
 void xbNtx::DumpHdrNode( void )
 {
-    cout << "\nSignature          = " << HeadNode.Signature;
-    cout << "\nVersion            = " << HeadNode.Version;
-    cout << "\nStartPahe          = " << HeadNode.StartNode;
-    cout << "\nUnusedOffset       = " << HeadNode.UnusedOffset;
-    cout << "\nKeySize            = " << HeadNode.KeySize;
-    cout << "\nKeyLen             = " << HeadNode.KeyLen;
-    cout << "\nDecimalCount       = " << HeadNode.DecimalCount;
-    cout << "\nKeysPerNode        = " << HeadNode.KeysPerNode;
-    cout << "\nHalfKeysPerPage    = " << HeadNode.HalfKeysPerNode;
-    cout << "\nKeyExpression      = " << HeadNode.KeyExpression;
-    cout << "\nUnique             = " << HeadNode.Unique;
-    cout << "\n";
+    std::cout << "\nSignature          = " << HeadNode.Signature;
+    std::cout << "\nVersion            = " << HeadNode.Version;
+    std::cout << "\nStartPahe          = " << HeadNode.StartNode;
+    std::cout << "\nUnusedOffset       = " << HeadNode.UnusedOffset;
+    std::cout << "\nKeySize            = " << HeadNode.KeySize;
+    std::cout << "\nKeyLen             = " << HeadNode.KeyLen;
+    std::cout << "\nDecimalCount       = " << HeadNode.DecimalCount;
+    std::cout << "\nKeysPerNode        = " << HeadNode.KeysPerNode;
+    std::cout << "\nHalfKeysPerPage    = " << HeadNode.HalfKeysPerNode;
+    std::cout << "\nKeyExpression      = " << HeadNode.KeyExpression;
+    std::cout << "\nUnique             = " << HeadNode.Unique;
+    std::cout << "\n";
 }
 #endif
 /***********************************************************************/
@@ -527,11 +527,11 @@
    GetLeafNode( n, 0 );
    NoOfKeys = dbf->xbase->GetShort( Node );
    p = Node + 4;        /* go past no of keys */
-   cout << "\n--------------------------------------------------------";
-   cout << "\nNode # " << n << " Number of keys = " << NoOfKeys << "\n";
+   std::cout << "\n--------------------------------------------------------";
+   std::cout << "\nNode # " << n << " Number of keys = " << NoOfKeys << "\n";
 
-   cout << "\n Key     Left     Rec      Key";
-   cout << "\nNumber  Branch   Number    Data";
+   std::cout << "\n Key     Left     Rec      Key";
+   std::cout << "\nNumber  Branch   Number    Data";
 
    for( i = 0; i < GetKeysPerNode()+1 /*NoOfKeys*/; i++ )
    {
@@ -539,8 +539,8 @@
       p+=4;
       RecNo = dbf->xbase->GetLong( p );
       p+=4;
-      cout << "\n" << i << "         " << LeftBranch << "          " << RecNo << "         ";
-      for( j = 0; j < HeadNode.KeyLen; j++ ) cout << *p++;
+      std::cout << "\n" << i << "         " << LeftBranch << "          " << RecNo << "         ";
+      for( j = 0; j < HeadNode.KeyLen; j++ ) std::cout << *p++;
    }
 }
 #endif
@@ -619,9 +619,9 @@
 xbNtx::GetItemOffset(xbShort RecNo, xbNodeLink *n, xbShort) {
     if (RecNo > (this->HeadNode.KeysPerNode + 1))
     {
-        cout << "RecNo = " << RecNo << endl;
-        cout << "this->HeadNode.KeysPerNode = " << this->HeadNode.KeysPerNode << endl;
-        cout << "********************* BUG ***********************" << endl;
+        std::cout << "RecNo = " << RecNo << std::endl;
+        std::cout << "this->HeadNode.KeysPerNode = " << this->HeadNode.KeysPerNode << std::endl;
+        std::cout << "********************* BUG ***********************" << std::endl;
         // ;-)
         exit(1);
     }
@@ -2465,7 +2465,7 @@
    if( !n ) return XB_INVALID_NODELINK;
    if( !GetDbfNo( 0, n ))
    {
-      cout << "Fatal index error - Not a leaf node" << n->NodeNo << "\n";
+      std::cout << "Fatal index error - Not a leaf node" << n->NodeNo << "\n";
 //      exit(0);
       return XB_NOT_LEAFNODE;
    }
@@ -2788,7 +2788,7 @@
 //    else
 //    {
 //       /* this should never be true-but could be if 100 byte limit is ignored*/
-//       cout << "Fatal index error\n";
+//       std::cout << "Fatal index error\n";
 //       exit(0);
 //    }
 //    return XB_NO_ERROR;   
@@ -3129,7 +3129,7 @@
 //             {
 //                 // Clipper, don't know why
 //                 PutLeftNodeNo(0, n2 , -1 );
-//                 cout << "Clipper hack" << endl;
+//                 std::cout << "Clipper hack" << std::endl;
 //             }
 
             DeleteKeyOffset(medianOffset, n2);
@@ -3149,7 +3149,7 @@
 //                 {
 //                     // Clipper, don't know why
 //                     PutLeftNodeNo(0, n2 , -1 );
-//                     cout << "Clipper hack in loop i = " <<  i << endl;
+//                     std::cout << "Clipper hack in loop i = " <<  i << std::endl;
 //                 }
             
                 // Remove the key from the current node.
@@ -3181,12 +3181,12 @@
    xbShort rc;
    xbLong ctr = 1L;
 
-   if ( option ) cout << "Checking NTX " << IndexName << endl;
+   if ( option ) std::cout << "Checking NTX " << IndexName << std::endl;
    rc = dbf->GetRecord( ctr );
    while( ctr < dbf->NoOfRecords() )
    {
       ctr++;
-      if( option ) cout << "\nChecking Record " << ctr;
+      if( option ) std::cout << "\nChecking Record " << ctr;
       if(!dbf->RecordDeleted())      
       {
          CreateKey( 0, 0 );
@@ -3195,8 +3195,8 @@
          {
             if( option )
             {
-               cout << "\nRecord number " << dbf->GetCurRecNo() <<  " Not Found\n";
-               cout << "Key = " << KeyBuf << "\n";
+               std::cout << "\nRecord number " << dbf->GetCurRecNo() <<  " Not Found\n";
+               std::cout << "Key = " << KeyBuf << "\n";
             }
             return rc;
          }
@@ -3207,8 +3207,8 @@
 
    if( option )
    {
-       cout << "Exiting with rc = " << rc << "\n";
-       cout << "\nTotal records checked = " << ctr << "\n";
+       std::cout << "Exiting with rc = " << rc << "\n";
+       std::cout << "\nTotal records checked = " << ctr << "\n";
    }
 
    return XB_NO_ERROR;
--- libxbase-2.0.0.orig/xbase/html.h
+++ libxbase-2.0.0/xbase/html.h
@@ -61,8 +61,8 @@
 #include <xbase/xbconfig.h>
 #endif
 
-#include <stdlib.h>
-#include <string.h>
+#include <cstdlib>
+#include <cstring>
 
 #include <xbase/xtypes.h>
 
@@ -92,28 +92,28 @@
    //! Short description.
    /*!
    */
-   void   BoldOff( void ) { cout << "</b>\n"; };
+   void   BoldOff( void ) { std::cout << "</b>\n"; };
    //! Short description.
    /*!
    */
-   void   BoldOn( void ) { cout << "<b>"; };
+   void   BoldOn( void ) { std::cout << "<b>"; };
    //! Short description.
    /*!
    */
-   void   Bullet( void ) { cout << "<li>"; };
+   void   Bullet( void ) { std::cout << "<li>"; };
    void   DumpArray( void );
    //! Short description.
    /*!
    */
-   void   EmphasizeOff( void ) { cout << "</em>\n"; };
+   void   EmphasizeOff( void ) { std::cout << "</em>\n"; };
    //! Short description.
    /*!
    */
-   void   EmphasizeOn( void ) { cout << "<em>"; };
+   void   EmphasizeOn( void ) { std::cout << "<em>"; };
    //! Short description.
    /*!
    */
-   void   EndHtmlPage( void ) { cout << "</BODY>\n</HTML>\n"; }
+   void   EndHtmlPage( void ) { std::cout << "</BODY>\n</HTML>\n"; }
    xbShort  GenFormFields(xbDbf *d, xbShort Option,const char * Title,xbFieldList *fl);
    xbShort  GetArrayNo( const char * FieldName );
    const  char * GetCookie( const char *CookieName );
@@ -124,47 +124,47 @@
    //! Short description.
    /*!
    */
-   void   HeaderOff( xbShort i ){ cout << "</h" << i << ">\n"; };
+   void   HeaderOff( xbShort i ){ std::cout << "</h" << i << ">\n"; };
    //! Short description.
    /*!
    */
-   void   HeaderOn( xbShort i ){ cout << "<h" << i << ">\n"; };
+   void   HeaderOn( xbShort i ){ std::cout << "<h" << i << ">\n"; };
    //! Short description.
    /*!
    */
-   void   ItalicOff( void ) { cout << "</i>\n"; };
+   void   ItalicOff( void ) { std::cout << "</i>\n"; };
    //! Short description.
    /*!
    */
-   void   ItalicOn( void ) { cout << "<i>"; };
+   void   ItalicOn( void ) { std::cout << "<i>"; };
    //! Short description.
    /*!
    */
-   void   NewLine( void ) { cout << "<br>"; }
+   void   NewLine( void ) { std::cout << "<br>"; }
    xbShort  PostMethod( void );
    void   PrintEncodedChar( char );
    void   PrintEncodedString( const char *s );
    //! Short description.
    /*!
    */
-   void   PrintHtml( char * s ) { cout << s; };
+   void   PrintHtml( char * s ) { std::cout << s; };
    //! Short description.
    /*!
    */
-   void   PrintHtml( xbLong l ) { cout << l; };
+   void   PrintHtml( xbLong l ) { std::cout << l; };
    //! Short description.
    /*!
    */
-   void   PrintHtml( xbShort i ) { cout << i; };
+   void   PrintHtml( xbShort i ) { std::cout << i; };
    //! Short description.
    /*!
    */
-   void   PrintHtml( int i ) { cout << i; };
+   void   PrintHtml( int i ) { std::cout << i; };
    void   StartHtmlPage( const char *Title );
    //! Short description.
    /*!
    */
-   void   StartTextPage( void ) { cout << "Content-type: text/plain\n\n"; }
+   void   StartTextPage( void ) { std::cout << "Content-type: text/plain\n\n"; }
    void   TextOut( const char *String );
    xbLong   Tally( const char *FileName );
    xbShort  SetCookie(const char *Name, const char *Value, const char *ExpDate,
--- libxbase-2.0.0.orig/docs/doxygen.cfg
+++ libxbase-2.0.0/docs/doxygen.cfg
@@ -0,0 +1,732 @@
+# Doxyfile 1.2.3
+
+# This file describes the settings to be used by doxygen for a project
+#
+# All text after a hash (#) is considered a comment and will be ignored
+# The format is:
+#       TAG = value [value, ...]
+# For lists items can also be appended using:
+#       TAG += value [value, ...]
+# Values that contain spaces should be placed between quotes (" ")
+
+#---------------------------------------------------------------------------
+# General configuration options
+#---------------------------------------------------------------------------
+
+# The PROJECT_NAME tag is a single word (or a sequence of words surrounded 
+# by quotes) that should identify the project. 
+
+PROJECT_NAME           = "Xbase Class Library"
+
+# The PROJECT_NUMBER tag can be used to enter a project or revision number. 
+# This could be handy for archiving the generated documentation or 
+# if some version control system is used.
+
+PROJECT_NUMBER         = 2.0.0
+
+# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) 
+# base path where the generated documentation will be put. 
+# If a relative path is entered, it will be relative to the location 
+# where doxygen was started. If left blank the current directory will be used.
+
+OUTPUT_DIRECTORY       = 
+
+# The OUTPUT_LANGUAGE tag is used to specify the language in which all 
+# documentation generated by doxygen is written. Doxygen will use this 
+# information to generate all constant output in the proper language. 
+# The default language is English, other supported languages are: 
+# Dutch, French, Italian, Czech, Swedish, German, Finnish, Japanese, 
+# Korean, Hungarian, Spanish, Romanian, Russian, Croatian, Polish, 
+# Portuguese and Slovene.
+
+OUTPUT_LANGUAGE        = English
+
+# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in 
+# documentation are documented, even if no documentation was available. 
+# Private class members and static file members will be hidden unless 
+# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES 
+
+EXTRACT_ALL            = YES
+
+# If the EXTRACT_PRIVATE tag is set to YES all private members of a class 
+# will be included in the documentation. 
+
+EXTRACT_PRIVATE        = NO
+
+# If the EXTRACT_STATIC tag is set to YES all static members of a file 
+# will be included in the documentation. 
+
+EXTRACT_STATIC         = NO
+
+# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all 
+# undocumented members of documented classes, files or namespaces. 
+# If set to NO (the default) these members will be included in the 
+# various overviews, but no documentation section is generated. 
+# This option has no effect if EXTRACT_ALL is enabled. 
+
+HIDE_UNDOC_MEMBERS     = NO
+
+# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all 
+# undocumented classes that are normally visible in the class hierarchy. 
+# If set to NO (the default) these class will be included in the various 
+# overviews. This option has no effect if EXTRACT_ALL is enabled. 
+
+HIDE_UNDOC_CLASSES     = NO
+
+# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will 
+# include brief member descriptions after the members that are listed in 
+# the file and class documentation (similar to JavaDoc). 
+# Set to NO to disable this. 
+
+BRIEF_MEMBER_DESC      = YES
+
+# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend 
+# the brief description of a member or function before the detailed description. 
+# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the 
+# brief descriptions will be completely suppressed. 
+
+REPEAT_BRIEF           = YES
+
+# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then 
+# Doxygen will generate a detailed section even if there is only a brief 
+# description. 
+
+ALWAYS_DETAILED_SEC    = NO
+
+# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full 
+# path before files name in the file list and in the header files. If set 
+# to NO the shortest path that makes the file name unique will be used. 
+
+FULL_PATH_NAMES        = NO
+
+# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag 
+# can be used to strip a user defined part of the path. Stripping is 
+# only done if one of the specified strings matches the left-hand part of 
+# the path. It is allowed to use relative paths in the argument list.
+
+STRIP_FROM_PATH        = 
+
+# The INTERNAL_DOCS tag determines if documentation 
+# that is typed after a \internal command is included. If the tag is set 
+# to NO (the default) then the documentation will be excluded. 
+# Set it to YES to include the internal documentation. 
+
+INTERNAL_DOCS          = NO
+
+# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will 
+# generate a class diagram (in Html and LaTeX) for classes with base or 
+# super classes. Setting the tag to NO turns the diagrams off. 
+
+CLASS_DIAGRAMS         = YES
+
+# If the SOURCE_BROWSER tag is set to YES then a list of source files will 
+# be generated. Documented entities will be cross-referenced with these sources. 
+
+SOURCE_BROWSER         = NO
+
+# Setting the INLINE_SOURCES tag to YES will include the body 
+# of functions and classes directly in the documentation. 
+
+INLINE_SOURCES         = NO
+
+# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct 
+# doxygen to hide any special comment blocks from generated source code 
+# fragments. Normal C and C++ comments will always remain visible. 
+
+STRIP_CODE_COMMENTS    = YES
+
+# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate 
+# file names in lower case letters. If set to YES upper case letters are also 
+# allowed. This is useful if you have classes or files whose names only differ 
+# in case and if your file system supports case sensitive file names. Windows 
+# users are adviced to set this option to NO.
+
+CASE_SENSE_NAMES       = YES
+
+# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen 
+# will show members with their full class and namespace scopes in the 
+# documentation. If set to YES the scope will be hidden. 
+
+HIDE_SCOPE_NAMES       = NO
+
+# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen 
+# will generate a verbatim copy of the header file for each class for 
+# which an include is specified. Set to NO to disable this. 
+
+VERBATIM_HEADERS       = YES
+
+# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen 
+# will put list of the files that are included by a file in the documentation 
+# of that file. 
+
+SHOW_INCLUDE_FILES     = YES
+
+# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen 
+# will interpret the first line (until the first dot) of a JavaDoc-style 
+# comment as the brief description. If set to NO, the JavaDoc 
+# comments  will behave just like the Qt-style comments (thus requiring an 
+# explict @brief command for a brief description. 
+
+JAVADOC_AUTOBRIEF      = NO
+
+# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented 
+# member inherits the documentation from any documented member that it 
+# reimplements. 
+
+INHERIT_DOCS           = YES
+
+# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] 
+# is inserted in the documentation for inline members. 
+
+INLINE_INFO            = YES
+
+# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen 
+# will sort the (detailed) documentation of file and class members 
+# alphabetically by member name. If set to NO the members will appear in 
+# declaration order. 
+
+SORT_MEMBER_DOCS       = YES
+
+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC 
+# tag is set to YES, then doxygen will reuse the documentation of the first 
+# member in the group (if any) for the other members of the group. By default 
+# all members of a group must be documented explicitly.
+
+DISTRIBUTE_GROUP_DOC   = NO
+
+# The TAB_SIZE tag can be used to set the number of spaces in a tab. 
+# Doxygen uses this value to replace tabs by spaces in code fragments. 
+
+TAB_SIZE               = 8
+
+# The ENABLE_SECTIONS tag can be used to enable conditional 
+# documentation sections, marked by \if sectionname ... \endif. 
+
+ENABLED_SECTIONS       = 
+
+# The GENERATE_TODOLIST tag can be used to enable (YES) or 
+# disable (NO) the todo list. This list is created by putting \todo 
+# commands in the documentation.
+
+GENERATE_TODOLIST      = YES
+
+# The GENERATE_TESTLIST tag can be used to enable (YES) or 
+# disable (NO) the test list. This list is created by putting \test 
+# commands in the documentation.
+
+GENERATE_TESTLIST      = YES
+
+# This tag can be used to specify a number of aliases that acts 
+# as commands in the documentation. An alias has the form "name=value". 
+# For example adding "sideeffect=\par Side Effects:\n" will allow you to 
+# put the command \sideeffect (or @sideeffect) in the documentation, which 
+# will result in a user defined paragraph with heading "Side Effects:". 
+# You can put \n's in the value part of an alias to insert newlines. 
+
+ALIASES                = 
+
+#---------------------------------------------------------------------------
+# configuration options related to warning and progress messages
+#---------------------------------------------------------------------------
+
+# The QUIET tag can be used to turn on/off the messages that are generated 
+# by doxygen. Possible values are YES and NO. If left blank NO is used. 
+
+QUIET                  = NO
+
+# The WARNINGS tag can be used to turn on/off the warning messages that are 
+# generated by doxygen. Possible values are YES and NO. If left blank 
+# NO is used. 
+
+WARNINGS               = YES
+
+# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings 
+# for undocumented members. If EXTRACT_ALL is set to YES then this flag will 
+# automatically be disabled. 
+
+WARN_IF_UNDOCUMENTED   = YES
+
+# The WARN_FORMAT tag determines the format of the warning messages that 
+# doxygen can produce. The string should contain the $file, $line, and $text 
+# tags, which will be replaced by the file and line number from which the 
+# warning originated and the warning text. 
+
+WARN_FORMAT            = "$file:$line: $text"
+
+# The WARN_LOGFILE tag can be used to specify a file to which warning 
+# and error messages should be written. If left blank the output is written 
+# to stderr. 
+
+WARN_LOGFILE           = 
+
+#---------------------------------------------------------------------------
+# configuration options related to the input files
+#---------------------------------------------------------------------------
+
+# The INPUT tag can be used to specify the files and/or directories that contain 
+# documented source files. You may enter file names like "myfile.cpp" or 
+# directories like "/usr/src/myproject". Separate the files or directories 
+# with spaces. 
+
+INPUT                  = ../xbase
+
+# If the value of the INPUT tag contains directories, you can use the 
+# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
+# and *.h) to filter out the source-files in the directories. If left 
+# blank all files are included. 
+
+FILE_PATTERNS          = *.cpp *.h
+
+# The RECURSIVE tag can be used to turn specify whether or not subdirectories 
+# should be searched for input files as well. Possible values are YES and NO. 
+# If left blank NO is used. 
+
+RECURSIVE              = NO
+
+# The EXCLUDE tag can be used to specify files and/or directories that should 
+# excluded from the INPUT source files. This way you can easily exclude a 
+# subdirectory from a directory tree whose root is specified with the INPUT tag. 
+
+EXCLUDE                = 
+
+# If the value of the INPUT tag contains directories, you can use the 
+# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude 
+# certain files from those directories. 
+
+EXCLUDE_PATTERNS       = 
+
+# The EXAMPLE_PATH tag can be used to specify one or more files or 
+# directories that contain example code fragments that are included (see 
+# the \include command). 
+
+EXAMPLE_PATH           = 
+
+# If the value of the EXAMPLE_PATH tag contains directories, you can use the 
+# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
+# and *.h) to filter out the source-files in the directories. If left 
+# blank all files are included. 
+
+EXAMPLE_PATTERNS       = 
+
+# The IMAGE_PATH tag can be used to specify one or more files or 
+# directories that contain image that are included in the documentation (see 
+# the \image command). 
+
+IMAGE_PATH             = 
+
+# The INPUT_FILTER tag can be used to specify a program that doxygen should 
+# invoke to filter for each input file. Doxygen will invoke the filter program 
+# by executing (via popen()) the command <filter> <input-file>, where <filter> 
+# is the value of the INPUT_FILTER tag, and <input-file> is the name of an 
+# input file. Doxygen will then use the output that the filter program writes 
+# to standard output. 
+
+INPUT_FILTER           = 
+
+# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using 
+# INPUT_FILTER) will be used to filter the input files when producing source 
+# files to browse. 
+
+FILTER_SOURCE_FILES    = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the alphabetical class index
+#---------------------------------------------------------------------------
+
+# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index 
+# of all compounds will be generated. Enable this if the project 
+# contains a lot of classes, structs, unions or interfaces. 
+
+ALPHABETICAL_INDEX     = YES
+
+# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then 
+# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns 
+# in which this list will be split (can be a number in the range [1..20]) 
+
+COLS_IN_ALPHA_INDEX    = 5
+
+# In case all classes in a project start with a common prefix, all 
+# classes will be put under the same header in the alphabetical index. 
+# The IGNORE_PREFIX tag can be used to specify one or more prefixes that 
+# should be ignored while generating the index headers. 
+
+IGNORE_PREFIX          = 
+
+#---------------------------------------------------------------------------
+# configuration options related to the HTML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_HTML tag is set to YES (the default) Doxygen will 
+# generate HTML output. 
+
+GENERATE_HTML          = YES
+
+# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. 
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
+# put in front of it. If left blank `html' will be used as the default path. 
+
+HTML_OUTPUT            = html
+
+# The HTML_HEADER tag can be used to specify a personal HTML header for 
+# each generated HTML page. If it is left blank doxygen will generate a 
+# standard header.
+
+HTML_HEADER            = 
+
+# The HTML_FOOTER tag can be used to specify a personal HTML footer for 
+# each generated HTML page. If it is left blank doxygen will generate a 
+# standard footer.
+
+HTML_FOOTER            = 
+
+# The HTML_STYLESHEET tag can be used to specify a user defined cascading 
+# style sheet that is used by each HTML page. It can be used to 
+# fine-tune the look of the HTML output. If the tag is left blank doxygen 
+# will generate a default style sheet 
+
+HTML_STYLESHEET        = 
+
+# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, 
+# files or namespaces will be aligned in HTML using tables. If set to 
+# NO a bullet list will be used. 
+
+HTML_ALIGN_MEMBERS     = YES
+
+# If the GENERATE_HTMLHELP tag is set to YES, additional index files 
+# will be generated that can be used as input for tools like the 
+# Microsoft HTML help workshop to generate a compressed HTML help file (.chm) 
+# of the generated HTML documentation. 
+
+GENERATE_HTMLHELP      = NO
+
+# The DISABLE_INDEX tag can be used to turn on/off the condensed index at 
+# top of each HTML page. The value NO (the default) enables the index and 
+# the value YES disables it. 
+
+DISABLE_INDEX          = NO
+
+# This tag can be used to set the number of enum values (range [1..20]) 
+# that doxygen will group on one line in the generated HTML documentation. 
+
+ENUM_VALUES_PER_LINE   = 4
+
+#---------------------------------------------------------------------------
+# configuration options related to the LaTeX output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will 
+# generate Latex output. 
+
+GENERATE_LATEX         = YES
+
+# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. 
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
+# put in front of it. If left blank `latex' will be used as the default path. 
+
+LATEX_OUTPUT           = latex
+
+# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact 
+# LaTeX documents. This may be useful for small projects and may help to 
+# save some trees in general. 
+
+COMPACT_LATEX          = NO
+
+# The PAPER_TYPE tag can be used to set the paper type that is used 
+# by the printer. Possible values are: a4, a4wide, letter, legal and 
+# executive. If left blank a4wide will be used. 
+
+PAPER_TYPE             = a4wide
+
+# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX 
+# packages that should be included in the LaTeX output. 
+
+EXTRA_PACKAGES         = 
+
+# The LATEX_HEADER tag can be used to specify a personal LaTeX header for 
+# the generated latex document. The header should contain everything until 
+# the first chapter. If it is left blank doxygen will generate a 
+# standard header. Notice: only use this tag if you know what you are doing! 
+
+LATEX_HEADER           = 
+
+# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated 
+# is prepared for conversion to pdf (using ps2pdf). The pdf file will 
+# contain links (just like the HTML output) instead of page references 
+# This makes the output suitable for online browsing using a pdf viewer. 
+
+PDF_HYPERLINKS         = NO
+
+# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of 
+# plain latex in the generated Makefile. Set this option to YES to get a 
+# higher quality PDF documentation. 
+
+USE_PDFLATEX           = NO
+
+# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode. 
+# command to the generated LaTeX files. This will instruct LaTeX to keep 
+# running if errors occur, instead of asking the user for help. 
+# This option is also used when generating formulas in HTML. 
+
+LATEX_BATCHMODE        = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the RTF output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output 
+# The RTF output is optimised for Word 97 and may not look very pretty with 
+# other RTF readers or editors.
+
+GENERATE_RTF           = NO
+
+# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. 
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
+# put in front of it. If left blank `rtf' will be used as the default path. 
+
+RTF_OUTPUT             = rtf
+
+# If the COMPACT_RTF tag is set to YES Doxygen generates more compact 
+# RTF documents. This may be useful for small projects and may help to 
+# save some trees in general. 
+
+COMPACT_RTF            = NO
+
+# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated 
+# will contain hyperlink fields. The RTF file will 
+# contain links (just like the HTML output) instead of page references. 
+# This makes the output suitable for online browsing using a WORD or other. 
+# programs which support those fields. 
+# Note: wordpad (write) and others do not support links. 
+
+RTF_HYPERLINKS         = NO
+
+# Load stylesheet definitions from file. Syntax is similar to doxygen's 
+# config file, i.e. a series of assigments. You only have to provide 
+# replacements, missing definitions are set to their default value. 
+
+RTF_STYLESHEET_FILE    = 
+
+#---------------------------------------------------------------------------
+# configuration options related to the man page output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_MAN tag is set to YES (the default) Doxygen will 
+# generate man pages 
+
+GENERATE_MAN           = NO
+
+# The MAN_OUTPUT tag is used to specify where the man pages will be put. 
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be 
+# put in front of it. If left blank `man' will be used as the default path. 
+
+MAN_OUTPUT             = man
+
+# The MAN_EXTENSION tag determines the extension that is added to 
+# the generated man pages (default is the subroutine's section .3) 
+
+MAN_EXTENSION          = .3
+
+#---------------------------------------------------------------------------
+# configuration options related to the XML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_XML tag is set to YES Doxygen will 
+# generate an XML file that captures the structure of 
+# the code including all documentation. Warning: This feature 
+# is still experimental and very incomplete.
+
+GENERATE_XML           = NO
+
+#---------------------------------------------------------------------------
+# Configuration options related to the preprocessor   
+#---------------------------------------------------------------------------
+
+# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will 
+# evaluate all C-preprocessor directives found in the sources and include 
+# files. 
+
+ENABLE_PREPROCESSING   = YES
+
+# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro 
+# names in the source code. If set to NO (the default) only conditional 
+# compilation will be performed. Macro expansion can be done in a controlled 
+# way by setting EXPAND_ONLY_PREDEF to YES. 
+
+MACRO_EXPANSION        = NO
+
+# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES 
+# then the macro expansion is limited to the macros specified with the 
+# PREDEFINED and EXPAND_AS_PREDEFINED tags. 
+
+EXPAND_ONLY_PREDEF     = NO
+
+# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files 
+# in the INCLUDE_PATH (see below) will be search if a #include is found. 
+
+SEARCH_INCLUDES        = YES
+
+# The INCLUDE_PATH tag can be used to specify one or more directories that 
+# contain include files that are not input files but should be processed by 
+# the preprocessor. 
+
+INCLUDE_PATH           = 
+
+# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard 
+# patterns (like *.h and *.hpp) to filter out the header-files in the 
+# directories. If left blank, the patterns specified with FILE_PATTERNS will 
+# be used. 
+
+INCLUDE_FILE_PATTERNS  = 
+
+# The PREDEFINED tag can be used to specify one or more macro names that 
+# are defined before the preprocessor is started (similar to the -D option of 
+# gcc). The argument of the tag is a list of macros of the form: name 
+# or name=definition (no spaces). If the definition and the = are 
+# omitted =1 is assumed. 
+
+PREDEFINED             = 
+
+# If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then 
+# this tag can be used to specify a list of macro names that should be expanded. 
+# The macro definition that is found in the sources will be used. 
+# Use the PREDEFINED tag if you want to use a different macro definition. 
+
+EXPAND_AS_DEFINED      = 
+
+#---------------------------------------------------------------------------
+# Configuration::addtions related to external references   
+#---------------------------------------------------------------------------
+
+# The TAGFILES tag can be used to specify one or more tagfiles. 
+
+TAGFILES               = 
+
+# When a file name is specified after GENERATE_TAGFILE, doxygen will create 
+# a tag file that is based on the input files it reads. 
+
+GENERATE_TAGFILE       = 
+
+# If the ALLEXTERNALS tag is set to YES all external classes will be listed 
+# in the class index. If set to NO only the inherited external classes 
+# will be listed. 
+
+ALLEXTERNALS           = NO
+
+# The PERL_PATH should be the absolute path and name of the perl script 
+# interpreter (i.e. the result of `which perl'). 
+
+PERL_PATH              = /usr/bin/perl
+
+#---------------------------------------------------------------------------
+# Configuration options related to the dot tool   
+#---------------------------------------------------------------------------
+
+# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is 
+# available from the path. This tool is part of Graphviz, a graph visualization 
+# toolkit from AT&T and Lucent Bell Labs. The other options in this section 
+# have no effect if this option is set to NO (the default) 
+
+HAVE_DOT               = NO
+
+# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen 
+# will generate a graph for each documented class showing the direct and 
+# indirect inheritance relations. Setting this tag to YES will force the 
+# the CLASS_DIAGRAMS tag to NO.
+
+CLASS_GRAPH            = YES
+
+# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen 
+# will generate a graph for each documented class showing the direct and 
+# indirect implementation dependencies (inheritance, containment, and 
+# class references variables) of the class with other documented classes. 
+
+COLLABORATION_GRAPH    = YES
+
+# If the ENABLE_PREPROCESSING, INCLUDE_GRAPH, and HAVE_DOT tags are set to 
+# YES then doxygen will generate a graph for each documented file showing 
+# the direct and indirect include dependencies of the file with other 
+# documented files. 
+
+INCLUDE_GRAPH          = YES
+
+# If the ENABLE_PREPROCESSING, INCLUDED_BY_GRAPH, and HAVE_DOT tags are set to 
+# YES then doxygen will generate a graph for each documented header file showing 
+# the documented files that directly or indirectly include this file 
+
+INCLUDED_BY_GRAPH      = YES
+
+# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen 
+# will graphical hierarchy of all classes instead of a textual one. 
+
+GRAPHICAL_HIERARCHY    = YES
+
+# The tag DOT_PATH can be used to specify the path where the dot tool can be 
+# found. If left blank, it is assumed the dot tool can be found on the path. 
+
+DOT_PATH               = 
+
+# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width 
+# (in pixels) of the graphs generated by dot. If a graph becomes larger than 
+# this value, doxygen will try to truncate the graph, so that it fits within 
+# the specified constraint. Beware that most browsers cannot cope with very 
+# large images. 
+
+MAX_DOT_GRAPH_WIDTH    = 1024
+
+# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height 
+# (in pixels) of the graphs generated by dot. If a graph becomes larger than 
+# this value, doxygen will try to truncate the graph, so that it fits within 
+# the specified constraint. Beware that most browsers cannot cope with very 
+# large images. 
+
+MAX_DOT_GRAPH_HEIGHT   = 1024
+
+# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will 
+# generate a legend page explaining the meaning of the various boxes and 
+# arrows in the dot generated graphs. 
+
+GENERATE_LEGEND        = YES
+
+#---------------------------------------------------------------------------
+# Configuration::addtions related to the search engine   
+#---------------------------------------------------------------------------
+
+# The SEARCHENGINE tag specifies whether or not a search engine should be 
+# used. If set to NO the values of all tags below this one will be ignored. 
+
+SEARCHENGINE           = NO
+
+# The CGI_NAME tag should be the name of the CGI script that 
+# starts the search engine (doxysearch) with the correct parameters. 
+# A script with this name will be generated by doxygen. 
+
+CGI_NAME               = search.cgi
+
+# The CGI_URL tag should be the absolute URL to the directory where the 
+# cgi binaries are located. See the documentation of your http daemon for 
+# details. 
+
+CGI_URL                = 
+
+# The DOC_URL tag should be the absolute URL to the directory where the 
+# documentation is located. If left blank the absolute path to the 
+# documentation, with file:// prepended to it, will be used. 
+
+DOC_URL                = 
+
+# The DOC_ABSPATH tag should be the absolute path to the directory where the 
+# documentation is located. If left blank the directory on the local machine 
+# will be used. 
+
+DOC_ABSPATH            = 
+
+# The BIN_ABSPATH tag must point to the directory where the doxysearch binary 
+# is installed. 
+
+BIN_ABSPATH            = /usr/local/bin/
+
+# The EXT_DOC_PATHS tag can be used to specify one or more paths to 
+# documentation generated for other projects. This allows doxysearch to search 
+# the documentation for these projects as well. 
+
+EXT_DOC_PATHS          = 
--- libxbase-2.0.0.orig/docs/Makefile.am
+++ libxbase-2.0.0/docs/Makefile.am
@@ -1,9 +1,9 @@
-all : docs
+all: docs
 
-docs :
+docs:
 	doxygen doxygen.cfg
 
-clean :
+clean:
 	-rm -r html
 	-rm -r latex
 	-rm -r man
--- libxbase-2.0.0.orig/docs/Makefile
+++ libxbase-2.0.0/docs/Makefile
@@ -0,0 +1,214 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = ..
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = ..
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+EXTRA_DIST =  	Makefile.am 	Makefile.in 	doxygen.cfg.in
+
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = ../xbase/xbconfig.h
+CONFIG_CLEAN_FILES =  doxygen.cfg
+DIST_COMMON =  Makefile.am Makefile.in doxygen.cfg.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = tar
+GZIP_ENV = --best
+all: all-redirect
+.SUFFIXES:
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps docs/Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+doxygen.cfg: $(top_builddir)/config.status doxygen.cfg.in
+	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+tags: TAGS
+TAGS:
+
+
+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
+
+subdir = docs
+
+distdir: $(DISTFILES)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+info-am:
+info: info-am
+dvi-am:
+dvi: dvi-am
+check-am: all-am
+check: check-am
+installcheck-am:
+installcheck: installcheck-am
+install-exec-am:
+install-exec: install-exec-am
+
+install-data-am:
+install-data: install-data-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-am
+uninstall-am:
+uninstall: uninstall-am
+all-am: Makefile
+all-redirect: all-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs:
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+mostlyclean-am:  mostlyclean-generic
+
+mostlyclean: mostlyclean-am
+
+clean-am:  clean-generic mostlyclean-am
+
+clean: clean-am
+
+distclean-am:  distclean-generic clean-am
+	-rm -f libtool
+
+distclean: distclean-am
+
+maintainer-clean-am:  maintainer-clean-generic distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-am
+
+.PHONY: tags distdir info-am info dvi-am dvi check check-am \
+installcheck-am installcheck install-exec-am install-exec \
+install-data-am install-data install-am install uninstall-am uninstall \
+all-redirect all-am all installdirs mostlyclean-generic \
+distclean-generic clean-generic maintainer-clean-generic clean \
+mostlyclean distclean maintainer-clean
+
+
+all: docs
+
+docs:
+	doxygen doxygen.cfg
+
+clean:
+	-rm -r html
+	-rm -r latex
+	-rm -r man
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/docs/Makefile.in
+++ libxbase-2.0.0/docs/Makefile.in
@@ -1,6 +1,6 @@
-# Makefile.in generated automatically by automake 1.4 from Makefile.am
+# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
 
-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
 # with or without modifications, as long as this notice is preserved.
@@ -105,7 +105,7 @@
 
 DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
 
-TAR = gtar
+TAR = tar
 GZIP_ENV = --best
 all: all-redirect
 .SUFFIXES:
@@ -199,12 +199,12 @@
 mostlyclean distclean maintainer-clean
 
 
-all : docs
+all: docs
 
-docs :
+docs:
 	doxygen doxygen.cfg
 
-clean :
+clean:
 	-rm -r html
 	-rm -r latex
 	-rm -r man
--- libxbase-2.0.0.orig/libtest/indextst.cpp
+++ libxbase-2.0.0/libtest/indextst.cpp
@@ -33,7 +33,7 @@
 
 /* set the stack large for dos compiles */
 #ifdef __XBDOS
-#include <stdio.h>
+#include <cstdio>
 extern unsigned _stklen = 100000;
 #endif
 
@@ -79,36 +79,36 @@
 #endif
 
 #ifndef XBASE_DEBUG
-  cout << "XBASE_DEBUG support option not compiled into library";
+  std::cout << "XBASE_DEBUG support option not compiled into library";
   return 1;
 #endif
 
 
-  cout << "Creating test database and indices" << endl;
+  std::cout << "Creating test database and indices" << std::endl;
   if(( rc = MyFile.CreateDatabase( "IXTEST.DBF", MyRecord, XB_OVERLAY ))
         != XB_NO_ERROR )
-     cout << "Error creating database = " << rc << "\n";
+     std::cout << "Error creating database = " << rc << "\n";
   else
   {
 #ifdef XB_INDEX_NDX
      if(( rc = indx1.CreateIndex(
        "IXNDX1.NDX", "CHARFLD1", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
      {
-        cout << "Error creating index 1 = " << rc << endl;
+        std::cout << "Error creating index 1 = " << rc << std::endl;
         exit( 1 );
      }
 
      if(( rc = indx2.CreateIndex(
        "IXNDX2.NDX", "CHARFLD1+CHARFLD2", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
      {
-        cout << "Error creating index 2 = " << rc << endl;
+        std::cout << "Error creating index 2 = " << rc << std::endl;
         exit( 1 );
      }
 
      if(( rc = indx3.CreateIndex(
        "IXNDX3.NDX", "NUMFLD1", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
      {
-        cout << "Error creating index 3 = " << rc << endl;
+        std::cout << "Error creating index 3 = " << rc << std::endl;
         exit( 1 );
      }
 #endif
@@ -118,21 +118,21 @@
      if(( rc = intx1.CreateIndex(
        "IXNTX1.NTX", "CHARFLD1", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
      {
-        cout << "Error creating index 4 = " << rc << endl;
+        std::cout << "Error creating index 4 = " << rc << std::endl;
         exit( 1 );
      }
 
      if(( rc = intx2.CreateIndex( 
        "IXNTX2.NTX", "CHARFLD1+CHARFLD2", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
      {
-        cout << "Error creating index 5 = " << rc << endl;
+        std::cout << "Error creating index 5 = " << rc << std::endl;
         exit( 1 );
      }
 
      if(( rc = intx3.CreateIndex( 
        "IXNTX3.NTX", "NUMFLD1", XB_NOT_UNIQUE, XB_OVERLAY )) != XB_NO_ERROR )
      {
-        cout << "Error creating index 6 = " << rc << endl;
+        std::cout << "Error creating index 6 = " << rc << std::endl;
         exit( 1 );
      }
 #endif
@@ -142,14 +142,14 @@
   f2 = MyFile.GetFieldNo( "CHARFLD2" );
   f3 = MyFile.GetFieldNo( "NUMFLD1" ); 
 
-  cout << "Populating database and indices with data" << endl;
-  cout << ".";
-  cout.flush();
+  std::cout << "Populating database and indices with data" << std::endl;
+  std::cout << ".";
+  std::cout.flush();
   for( int i = 0; i < 10000; i++ ){
       if (i % 1000 == 0)
       {
-          cout << ".";
-          cout.flush();
+          std::cout << ".";
+          std::cout.flush();
       }
     memset( charbuf, 0x00, 10 );
     sprintf( charbuf, "%d", i );
@@ -159,7 +159,7 @@
     MyFile.PutLongField( f3, i );
     MyFile.AppendRecord();
   }
-  cout << " Done." << endl;
+  std::cout << " Done." << std::endl;
 
   // Check all indices.
   sts += CheckIndex(
@@ -179,14 +179,14 @@
   //
   // - Bob Cotton <bob@synxis.com>
   //
-  cout << "Reversing records." << endl;
-  cout << ".";
-  cout.flush();
+  std::cout << "Reversing records." << std::endl;
+  std::cout << ".";
+  std::cout.flush();
     for( xbLong j = 1; j < MyFile.NoOfRecords(); j++ ){
       if (j  % 1000 == 0)
       {
-          cout << ".";
-          cout.flush();
+          std::cout << ".";
+          std::cout.flush();
       }
       MyFile.GetRecord(j);
       memset( charbuf, 0x00, 10 );
@@ -196,7 +196,7 @@
       MyFile.PutLongField( f3, j-1 );
       MyFile.PutRecord();
   }
-  cout << " Done." << endl;
+  std::cout << " Done." << std::endl;
     
           
   // Check all indices
@@ -213,7 +213,7 @@
                     );
     
 
-  cout << "Index testing completed" << endl;cout.flush();
+  std::cout << "Index testing completed" << std::endl;std::cout.flush();
   MyFile.CloseDatabase();   /* Close database and associated indexes */
   return sts;
 }     
@@ -239,55 +239,55 @@
     int sts = 0;
     
 #if defined( XB_INDEX_NDX ) && defined( XBASE_DEBUG )
-    cout << "Testing NDX index 1 "; cout.flush();
+    std::cout << "Testing NDX index 1 "; std::cout.flush();
     if(( rc = indx1->CheckIndexIntegrity(0)) != XB_NO_ERROR ){
-        cout << "Error " << rc << " with index indx1" << endl;
+        std::cout << "Error " << rc << " with index indx1" << std::endl;
         sts++;
     }
     else
-        cout << "OK" << endl;
+        std::cout << "OK" << std::endl;
 
-    cout << "Testing NDX index 2 ";cout.flush();
+    std::cout << "Testing NDX index 2 ";std::cout.flush();
     if(( rc = indx2->CheckIndexIntegrity(0)) != XB_NO_ERROR ){
-        cout << "Error " << rc << " with index indx2" << endl;
+        std::cout << "Error " << rc << " with index indx2" << std::endl;
         sts++;
     }
     else
-        cout << "OK" << endl;
+        std::cout << "OK" << std::endl;
 
 
-    cout << "Testing NDX index 3 ";cout.flush();
+    std::cout << "Testing NDX index 3 ";std::cout.flush();
     if(( rc = indx3->CheckIndexIntegrity(0)) != XB_NO_ERROR ){
-        cout << "Error " << rc << " with index indx3" << endl;
+        std::cout << "Error " << rc << " with index indx3" << std::endl;
         sts++;
     }
     else
-        cout << "OK" << endl;
+        std::cout << "OK" << std::endl;
 #endif
 #if defined( XB_INDEX_NTX ) && defined( XBASE_DEBUG )
-    cout << "Testing NTX index 1 ";cout.flush();
+    std::cout << "Testing NTX index 1 ";std::cout.flush();
     if(( rc = intx1->CheckIndexIntegrity(0)) != XB_NO_ERROR ){
-        cout << "Error " << rc << " with index intx1" << endl;
+        std::cout << "Error " << rc << " with index intx1" << std::endl;
         sts++;
     }
     else
-        cout << "OK" << endl;
+        std::cout << "OK" << std::endl;
 
-    cout << "Testing NTX index 2 ";cout.flush();
+    std::cout << "Testing NTX index 2 ";std::cout.flush();
     if(( rc = intx2->CheckIndexIntegrity(0)) != XB_NO_ERROR ){
-        cout << "Error " << rc << " with index intx2" << endl;
+        std::cout << "Error " << rc << " with index intx2" << std::endl;
         sts++;
     }
     else
-        cout << "OK" << endl;
+        std::cout << "OK" << std::endl;
 
-    cout << "Testing NTX index 3 ";cout.flush();
+    std::cout << "Testing NTX index 3 ";std::cout.flush();
     if(( rc = intx3->CheckIndexIntegrity(0)) != XB_NO_ERROR ){
-        cout << "Error " << rc << " with index intx3" << endl;
+        std::cout << "Error " << rc << " with index intx3" << std::endl;
         sts++;
     }
     else
-        cout << "OK" << endl;
+        std::cout << "OK" << std::endl;
 #endif
     return sts;
 
--- libxbase-2.0.0.orig/libtest/Makefile
+++ libxbase-2.0.0/libtest/Makefile
@@ -0,0 +1,373 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = ..
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = ..
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+INCLUDES = -I$(topdir) $(all_includes)
+LDADD = -L$(topdir)/xbase/.libs -lxbase
+
+INSTALL_PROGRAM = /usr/bin/install -c
+
+noinst_PROGRAMS = indextst exptest locktest testdate testhtml.cgi
+
+indextst_SOURCES = indextst.cpp
+exptest_SOURCES = exptest.cpp
+locktest_SOURCES = locktest.cpp
+testdate_SOURCES = testdate.cpp
+testhtml_cgi_SOURCES = testhtml.cpp
+
+noinst_HEADERS = 
+
+EXTRA_DIST =  	makefile.g95 	libtest.ide 	testhtml.html 	README
+
+
+MAINTAINERCLEANFILES = Makefile.in
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = ../xbase/xbconfig.h
+CONFIG_CLEAN_FILES = 
+PROGRAMS =  $(noinst_PROGRAMS)
+
+
+DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../xbase
+CPPFLAGS = 
+LDFLAGS = -s
+LIBS = 
+indextst_OBJECTS =  indextst.o
+indextst_LDADD = $(LDADD)
+indextst_DEPENDENCIES = 
+indextst_LDFLAGS = 
+exptest_OBJECTS =  exptest.o
+exptest_LDADD = $(LDADD)
+exptest_DEPENDENCIES = 
+exptest_LDFLAGS = 
+locktest_OBJECTS =  locktest.o
+locktest_LDADD = $(LDADD)
+locktest_DEPENDENCIES = 
+locktest_LDFLAGS = 
+testdate_OBJECTS =  testdate.o
+testdate_LDADD = $(LDADD)
+testdate_DEPENDENCIES = 
+testdate_LDFLAGS = 
+testhtml_cgi_OBJECTS =  testhtml.o
+testhtml_cgi_LDADD = $(LDADD)
+testhtml_cgi_DEPENDENCIES = 
+testhtml_cgi_LDFLAGS = 
+CXXFLAGS = -O2 -Wall
+CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
+HEADERS =  $(noinst_HEADERS)
+
+DIST_COMMON =  README Makefile.am Makefile.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = gtar
+GZIP_ENV = --best
+SOURCES = $(indextst_SOURCES) $(exptest_SOURCES) $(locktest_SOURCES) $(testdate_SOURCES) $(testhtml_cgi_SOURCES)
+OBJECTS = $(indextst_OBJECTS) $(exptest_OBJECTS) $(locktest_OBJECTS) $(testdate_OBJECTS) $(testhtml_cgi_OBJECTS)
+
+all: all-redirect
+.SUFFIXES:
+.SUFFIXES: .S .c .cpp .lo .o .s
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libtest/Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+
+mostlyclean-noinstPROGRAMS:
+
+clean-noinstPROGRAMS:
+	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
+
+distclean-noinstPROGRAMS:
+
+maintainer-clean-noinstPROGRAMS:
+
+.c.o:
+	$(COMPILE) -c $<
+
+.s.o:
+	$(COMPILE) -c $<
+
+.S.o:
+	$(COMPILE) -c $<
+
+mostlyclean-compile:
+	-rm -f *.o core *.core
+
+clean-compile:
+
+distclean-compile:
+	-rm -f *.tab.c
+
+maintainer-clean-compile:
+
+.c.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.s.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.S.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+
+maintainer-clean-libtool:
+
+indextst: $(indextst_OBJECTS) $(indextst_DEPENDENCIES)
+	@rm -f indextst
+	$(CXXLINK) $(indextst_LDFLAGS) $(indextst_OBJECTS) $(indextst_LDADD) $(LIBS)
+
+exptest: $(exptest_OBJECTS) $(exptest_DEPENDENCIES)
+	@rm -f exptest
+	$(CXXLINK) $(exptest_LDFLAGS) $(exptest_OBJECTS) $(exptest_LDADD) $(LIBS)
+
+locktest: $(locktest_OBJECTS) $(locktest_DEPENDENCIES)
+	@rm -f locktest
+	$(CXXLINK) $(locktest_LDFLAGS) $(locktest_OBJECTS) $(locktest_LDADD) $(LIBS)
+
+testdate: $(testdate_OBJECTS) $(testdate_DEPENDENCIES)
+	@rm -f testdate
+	$(CXXLINK) $(testdate_LDFLAGS) $(testdate_OBJECTS) $(testdate_LDADD) $(LIBS)
+
+testhtml.cgi: $(testhtml_cgi_OBJECTS) $(testhtml_cgi_DEPENDENCIES)
+	@rm -f testhtml.cgi
+	$(CXXLINK) $(testhtml_cgi_LDFLAGS) $(testhtml_cgi_OBJECTS) $(testhtml_cgi_LDADD) $(LIBS)
+.cpp.o:
+	$(CXXCOMPILE) -c $<
+.cpp.lo:
+	$(LTCXXCOMPILE) -c $<
+
+tags: TAGS
+
+ID: $(HEADERS) $(SOURCES) $(LISP)
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	here=`pwd` && cd $(srcdir) \
+	  && mkid -f$$here/ID $$unique $(LISP)
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
+	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)
+
+mostlyclean-tags:
+
+clean-tags:
+
+distclean-tags:
+	-rm -f TAGS ID
+
+maintainer-clean-tags:
+
+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
+
+subdir = libtest
+
+distdir: $(DISTFILES)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+exptest.o: exptest.cpp
+indextst.o: indextst.cpp
+locktest.o: locktest.cpp
+testdate.o: testdate.cpp
+testhtml.o: testhtml.cpp
+
+info-am:
+info: info-am
+dvi-am:
+dvi: dvi-am
+check-am: all-am
+check: check-am
+installcheck-am:
+installcheck: installcheck-am
+install-exec-am:
+install-exec: install-exec-am
+
+install-data-am:
+install-data: install-data-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-am
+uninstall-am:
+uninstall: uninstall-am
+all-am: Makefile $(PROGRAMS) $(HEADERS)
+all-redirect: all-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs:
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
+mostlyclean-am:  mostlyclean-noinstPROGRAMS mostlyclean-compile \
+		mostlyclean-libtool mostlyclean-tags \
+		mostlyclean-generic
+
+mostlyclean: mostlyclean-am
+
+clean-am:  clean-noinstPROGRAMS clean-compile clean-libtool clean-tags \
+		clean-generic mostlyclean-am
+
+clean: clean-am
+
+distclean-am:  distclean-noinstPROGRAMS distclean-compile \
+		distclean-libtool distclean-tags distclean-generic \
+		clean-am
+	-rm -f libtool
+
+distclean: distclean-am
+
+maintainer-clean-am:  maintainer-clean-noinstPROGRAMS \
+		maintainer-clean-compile maintainer-clean-libtool \
+		maintainer-clean-tags maintainer-clean-generic \
+		distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-am
+
+.PHONY: mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
+clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
+mostlyclean-compile distclean-compile clean-compile \
+maintainer-clean-compile mostlyclean-libtool distclean-libtool \
+clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
+distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
+dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
+install-exec install-data-am install-data install-am install \
+uninstall-am uninstall all-redirect all-am all installdirs \
+mostlyclean-generic distclean-generic clean-generic \
+maintainer-clean-generic clean mostlyclean distclean maintainer-clean
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/libtest/testdate.cpp
+++ libxbase-2.0.0/libtest/testdate.cpp
@@ -66,133 +66,133 @@
    xbDate d3( CharDate );                  /* from char data     */
    xbDate d4;                              /* another date class */
 
-   cout << "This program tests the XDATE routines" << endl;
-   cout << "Date 1 (Sysdate) is    " << d1.GetDate() << endl;
-   cout << "Date 2 (StringDate) is " << d2.GetDate() << endl;
-   cout << "Date 3 (CharDate) is   " << d3.GetDate() << endl;
-
-   cout << "This year is  " << d1.YearOf() << endl;
-   cout << "Year of xbString Date is " <<  d2.YearOf( StringDate ) << endl;
-   cout << "Year of char Date is "     <<  d3.YearOf( CharDate ) << endl;
-
-   cout << "This Month is " << d1.MonthOf() << endl;
-   cout << "Month of xbString Date is " <<  d2.MonthOf( StringDate ) << endl;
-   cout << "Month of char Date is "     <<  d3.MonthOf( CharDate ) << endl;
-
-   cout << "Today is day " << d1.DayOf( XB_FMT_WEEK ) << " of the week" << endl; 
-   cout << "StringDate is day " << d2.DayOf( XB_FMT_MONTH, StringDate ) << " of the month" << endl;
-   cout << "CharDate is day " << d3.DayOf( XB_FMT_YEAR, CharDate ) << " of the year" << endl;
+   std::cout << "This program tests the XDATE routines" << std::endl;
+   std::cout << "Date 1 (Sysdate) is    " << d1.GetDate() << std::endl;
+   std::cout << "Date 2 (StringDate) is " << d2.GetDate() << std::endl;
+   std::cout << "Date 3 (CharDate) is   " << d3.GetDate() << std::endl;
+
+   std::cout << "This year is  " << d1.YearOf() << std::endl;
+   std::cout << "Year of xbString Date is " <<  d2.YearOf( StringDate ) << std::endl;
+   std::cout << "Year of char Date is "     <<  d3.YearOf( CharDate ) << std::endl;
+
+   std::cout << "This Month is " << d1.MonthOf() << std::endl;
+   std::cout << "Month of xbString Date is " <<  d2.MonthOf( StringDate ) << std::endl;
+   std::cout << "Month of char Date is "     <<  d3.MonthOf( CharDate ) << std::endl;
+
+   std::cout << "Today is day " << d1.DayOf( XB_FMT_WEEK ) << " of the week" << std::endl; 
+   std::cout << "StringDate is day " << d2.DayOf( XB_FMT_MONTH, StringDate ) << " of the month" << std::endl;
+   std::cout << "CharDate is day " << d3.DayOf( XB_FMT_YEAR, CharDate ) << " of the year" << std::endl;
 
    if( d1.IsLeapYear())
-      cout << "This is a leapyear" << endl;
+      std::cout << "This is a leapyear" << std::endl;
    else
-      cout << "This is not a leap year." << endl;
+      std::cout << "This is not a leap year." << std::endl;
  
    if( d2.IsLeapYear( StringDate ))
-      cout << "StringDate is a leapyear" << endl;
+      std::cout << "StringDate is a leapyear" << std::endl;
    else
-      cout << "StringDate is not a leap year." << endl;
+      std::cout << "StringDate is not a leap year." << std::endl;
  
    if( d3.IsLeapYear( CharDate ))
-      cout << "CharDate is a leapyear" << endl;
+      std::cout << "CharDate is a leapyear" << std::endl;
    else
-      cout << "CharDate is not a leap year." << endl;
+      std::cout << "CharDate is not a leap year." << std::endl;
  
-   cout << "Today is " << d1.Sysdate() << endl;
+   std::cout << "Today is " << d1.Sysdate() << std::endl;
 
    if( d1.DateIsValid( "19951301" ))
-      cout << "19951301 is a valid date" << endl;
+      std::cout << "19951301 is a valid date" << std::endl;
    else
-      cout << "19951301 is not a valid date" << endl;
+      std::cout << "19951301 is not a valid date" << std::endl;
 
    if( d1.DateIsValid( "19920229" ))
-      cout << "19920229 is a valid date" << endl;
+      std::cout << "19920229 is a valid date" << std::endl;
    else
-      cout << "19920229 is not a valid date" << endl;
+      std::cout << "19920229 is not a valid date" << std::endl;
 
    if( d2.DateIsValid( StringDate ))
-      cout << StringDate << " is a valid date" << endl;
+      std::cout << StringDate << " is a valid date" << std::endl;
    else
-      cout << StringDate << " is not a valid date" << endl;
+      std::cout << StringDate << " is not a valid date" << std::endl;
 
-   cout << "Today's Julian date " << d1.JulianDays() << endl;
-   cout << "StringDate Julian date " << d2.JulianDays( StringDate ) << endl;
+   std::cout << "Today's Julian date " << d1.JulianDays() << std::endl;
+   std::cout << "StringDate Julian date " << d2.JulianDays( StringDate ) << std::endl;
 
-   cout << "There are " << 
+   std::cout << "There are " << 
         ( d1.JulianDays( "19951101" ) - d1.JulianDays( "19951001" ))
-        << " days between 10/1/95 and 11/1/95." << endl;
+        << " days between 10/1/95 and 11/1/95." << std::endl;
 
-   cout << "Todays Julian date (Number of days since Jan 1 0100):"
-        << d1.JulianDays() << endl; 
+   std::cout << "Todays Julian date (Number of days since Jan 1 0100):"
+        << d1.JulianDays() << std::endl; 
 
    d4 = d1;    // set d4 class = to sysdate 
-   cout << "Object d4 initialized to " << d4.GetDate() << endl;
-   cout << "This should be todays date: "  
-        << d4.JulToDate8(d4.JulianDays()) << endl;
-   cout << "In 7 days it will be "  
-        << d4.JulToDate8(d4.JulianDays() + 7L ) << endl;
-
-   cout << "Today is " << d1.CharDayOf() << endl;
-   cout << "StringDate day is " << d2.CharDayOf( StringDate ) << endl;
-   cout << "This month is " << d1.CharMonthOf() << endl;
-   cout << "StringDate month is " << d2.CharMonthOf() << endl;
+   std::cout << "Object d4 initialized to " << d4.GetDate() << std::endl;
+   std::cout << "This should be todays date: "  
+        << d4.JulToDate8(d4.JulianDays()) << std::endl;
+   std::cout << "In 7 days it will be "  
+        << d4.JulToDate8(d4.JulianDays() + 7L ) << std::endl;
+
+   std::cout << "Today is " << d1.CharDayOf() << std::endl;
+   std::cout << "StringDate day is " << d2.CharDayOf( StringDate ) << std::endl;
+   std::cout << "This month is " << d1.CharMonthOf() << std::endl;
+   std::cout << "StringDate month is " << d2.CharMonthOf() << std::endl;
 
 
    /* various format routines using different formats, strings and chars */
    xbString xbStFmt( "MM/DD/YY" );
-   cout << "Format (YYDDD)     " << d1.FormatDate( "YYDDD" ) << endl;
-   cout << "Format (MM/DD/YY)  " << d1.FormatDate( xbStFmt ) << endl;
+   std::cout << "Format (YYDDD)     " << d1.FormatDate( "YYDDD" ) << std::endl;
+   std::cout << "Format (MM/DD/YY)  " << d1.FormatDate( xbStFmt ) << std::endl;
    xbStFmt = "DD/MM/YY";
-   cout << "Format (DD/MM/YY)  " << d1.FormatDate(xbStFmt, "19730110") << endl;
-   cout << "Format (MMMM DD,YYYY)    " <<
-      d1.FormatDate( "MMMM DD,YYYY", d1.GetDate()) << endl;
+   std::cout << "Format (DD/MM/YY)  " << d1.FormatDate(xbStFmt, "19730110") << std::endl;
+   std::cout << "Format (MMMM DD,YYYY)    " <<
+      d1.FormatDate( "MMMM DD,YYYY", d1.GetDate()) << std::endl;
    xbStFmt = "DDDD, MMMM DD YYYY";
-   cout << "Format (DDDD, MMMM DD YYYY) " <<
-      d2.FormatDate( xbStFmt, d2.GetDate()) << endl;
+   std::cout << "Format (DDDD, MMMM DD YYYY) " <<
+      d2.FormatDate( xbStFmt, d2.GetDate()) << std::endl;
 
-   cout << "Last day this month " << d1.LastDayOfMonth() << endl;
-   cout << "Last day of month for StringDate is " <<
-      d2.LastDayOfMonth( d2.GetDate()) << endl;
+   std::cout << "Last day this month " << d1.LastDayOfMonth() << std::endl;
+   std::cout << "Last day of month for StringDate is " <<
+      d2.LastDayOfMonth( d2.GetDate()) << std::endl;
 
-   cout << "Overloaded operators test..." << endl;
+   std::cout << "Overloaded operators test..." << std::endl;
 
    if( d1 == d2 )
-     cout << d1.GetDate() << " is equal to " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is equal to " << d2.GetDate() << std::endl;
    else
-     cout << d1.GetDate() << " is not equal to " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is not equal to " << d2.GetDate() << std::endl;
 
    if( d1 != d3 )
-     cout << d1.GetDate() << " is not equal to " << d3.GetDate() << endl;
+     std::cout << d1.GetDate() << " is not equal to " << d3.GetDate() << std::endl;
    else
-     cout << d1.GetDate() << " is equal to " << d3.GetDate() << endl;
+     std::cout << d1.GetDate() << " is equal to " << d3.GetDate() << std::endl;
      
    if( d1 < d2 )
-     cout << d1.GetDate() << " is less than " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is less than " << d2.GetDate() << std::endl;
    else
-     cout << d1.GetDate() << " is not less than " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is not less than " << d2.GetDate() << std::endl;
      
    if( d1 > d2 )
-     cout << d1.GetDate() << " is greater than " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is greater than " << d2.GetDate() << std::endl;
    else
-     cout << d1.GetDate() << " is not greater than " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is not greater than " << d2.GetDate() << std::endl;
      
    if( d1 <= d2 )
-     cout << d1.GetDate() << " is less than or equal to " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is less than or equal to " << d2.GetDate() << std::endl;
    else
-     cout << d1.GetDate() << " is not less than or equal to " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is not less than or equal to " << d2.GetDate() << std::endl;
      
    if( d1 >= d2 )
-     cout << d1.GetDate() << " is greater than or equal to " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is greater than or equal to " << d2.GetDate() << std::endl;
    else
-     cout << d1.GetDate() << " is not greater than or equal to " << d2.GetDate() << endl;
+     std::cout << d1.GetDate() << " is not greater than or equal to " << d2.GetDate() << std::endl;
 
    d1.Sysdate();
    d1++;
-   cout << "Tomorrow is " << d1.GetDate() << endl;
+   std::cout << "Tomorrow is " << d1.GetDate() << std::endl;
    d1-=2;
-   cout << "Yesterday was " << d1.GetDate() << endl;
-   cout << "There are " << d1 - d2 << " days between " << d1.GetDate() 
-        << " and " << d2.GetDate() << endl;
+   std::cout << "Yesterday was " << d1.GetDate() << std::endl;
+   std::cout << "There are " << d1 - d2 << " days between " << d1.GetDate() 
+        << " and " << d2.GetDate() << std::endl;
 
    return 0;
 }
--- libxbase-2.0.0.orig/libtest/exptest.cpp
+++ libxbase-2.0.0/libtest/exptest.cpp
@@ -50,39 +50,39 @@
   xbShort rc = 0;
   
   if(( rc = dbfPtr->xbase->ParseExpression( Expression, dbfPtr )) != 0 ){
-    cout << "Parse Error " << rc << " in expression " << Expression << endl;
+    std::cout << "Parse Error " << rc << " in expression " << Expression << std::endl;
     return 1;
   }
   e = dbfPtr->xbase->GetExpressionHandle();
 
-//  cout << "********************************" << endl << "Expression: " << Expression << endl;
+//  std::cout << "********************************" << std::endl << "Expression: " << Expression << std::endl;
 //  dbfPtr->xbase->DumpExpressionTree( e );
 
   if(( rc = dbfPtr->xbase->ProcessExpression(e)) != 0 ){
-    cout << "Error " << rc << " processing expression " << Expression << endl;
+    std::cout << "Error " << rc << " processing expression " << Expression << std::endl;
     return 1;
   }
   char type = dbfPtr->xbase->GetExpressionResultType(e);
   if( type != 'N' && type != 'L' ){
-    cout << "Expression " << Expression;
-    cout << " Expected result type Numeric or Logical, actual was ";
-    cout << type << endl;
+    std::cout << "Expression " << Expression;
+    std::cout << " Expected result type Numeric or Logical, actual was ";
+    std::cout << type << std::endl;
     return 1;
   }
 //  if( type == 'N' && ExpectedResult != dbfPtr->xbase->GetDoub()){
-//    cout << "Expression " << Expression;
-//    cout << " Actual result of " << dbfPtr->xbase->GetDoub() << " does not match ";
-//    cout << " expected result of " << ExpectedResult << endl;
+//    std::cout << "Expression " << Expression;
+//    std::cout << " Actual result of " << dbfPtr->xbase->GetDoub() << " does not match ";
+//    std::cout << " expected result of " << ExpectedResult << std::endl;
 //    return  1;
 //  }
 //  if( type == 'L' && ExpectedResult != (xbDouble) dbfPtr->xbase->GetInt()){
-//    cout << "Expression " << Expression;
-//    cout << " Actual result of " << dbfPtr->xbase->GetInt() << " does not match ";
-//    cout << " expected result of " << ExpectedResult << endl;
+//    std::cout << "Expression " << Expression;
+//    std::cout << " Actual result of " << dbfPtr->xbase->GetInt() << " does not match ";
+//    std::cout << " expected result of " << ExpectedResult << std::endl;
 //    return  1;
 //  }
-  cout << "Expression " << Expression << " returned " << ExpectedResult;
-  cout << " OK" << endl;
+  std::cout << "Expression " << Expression << " returned " << ExpectedResult;
+  std::cout << " OK" << std::endl;
   return 0;
 }
 /**************************************************************************/
@@ -94,42 +94,42 @@
 //  char temp[5];
 	
   if(( rc = dbfPtr->xbase->ParseExpression( Expression, dbfPtr )) != 0 ){
-    cout << "Parse Error " << rc << " in expression " << Expression << endl;
+    std::cout << "Parse Error " << rc << " in expression " << Expression << std::endl;
     return 1;
   }
   e = dbfPtr->xbase->GetExpressionHandle();
 
-//  cout << "**********************************" << endl << "Expression: " << Expression << endl;
+//  std::cout << "**********************************" << std::endl << "Expression: " << Expression << std::endl;
 //  dbfPtr->xbase->DumpExpressionTree( e );
 //  cin >> temp;
 
   if(( rc = dbfPtr->xbase->ProcessExpression(e)) != 0 ){
-    cout << "Error " << rc << " processing expression " << Expression << endl;
+    std::cout << "Error " << rc << " processing expression " << Expression << std::endl;
     return 1;
   }
   char type = dbfPtr->xbase->GetExpressionResultType(e);
   if( type != 'C' ){
-    cout << "Expression " << Expression;
-    cout << " Expected result type Character, actual was " << type << endl;
+    std::cout << "Expression " << Expression;
+    std::cout << " Expected result type Character, actual was " << type << std::endl;
     return 1;
   }
 //  if( strlen( ExpectedResult ) != strlen( dbfPtr->xbase->GetCharResult())){
-//    cout << "Expression " << Expression;
-//    cout << " result length of " << strlen( dbfPtr->xbase->GetCharResult()) <<
-//      " different than expected of " << strlen( ExpectedResult ) << endl;
-//    cout << "Calculated result =" << dbfPtr->xbase->GetCharResult() << "<" << endl;
+//    std::cout << "Expression " << Expression;
+//    std::cout << " result length of " << strlen( dbfPtr->xbase->GetCharResult()) <<
+//      " different than expected of " << strlen( ExpectedResult ) << std::endl;
+//    std::cout << "Calculated result =" << dbfPtr->xbase->GetCharResult() << "<" << std::endl;
 //    return 1;
 //  }
 /*
   if( strcmp( ExpectedResult, dbfPtr->xbase->GetCharResult())){
-    cout << "Expression " << Expression;
-    cout << " Actual result of " << dbfPtr->xbase->GetCharResult() << " does not match ";
-    cout << " expected result of " << ExpectedResult << endl;
+    std::cout << "Expression " << Expression;
+    std::cout << " Actual result of " << dbfPtr->xbase->GetCharResult() << " does not match ";
+    std::cout << " expected result of " << ExpectedResult << std::endl;
     return  1;
   }
 */
-  cout << "Expression " << Expression << " returned " << ExpectedResult;
-  cout << " OK" << endl;
+  std::cout << "Expression " << Expression << " returned " << ExpectedResult;
+  std::cout << " OK" << std::endl;
   return 0;
 }
 /*************************************************************************/
@@ -149,8 +149,8 @@
   d.PutFloatField( "FLOAT1", 5 );  
   
 
-  cout << "XBase Expression testor program.." << endl;
-  cout << "This program test the XBase expression logic." << endl;
+  std::cout << "XBase Expression testor program.." << std::endl;
+  std::cout << "This program test the XBase expression logic." << std::endl;
   ExpTestor * e = new ExpTestor(&d);
 
   e->TestExpression( "(25-3+2)*2", 48 );
--- libxbase-2.0.0.orig/tv/Makefile
+++ libxbase-2.0.0/tv/Makefile
@@ -0,0 +1,347 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+#	This file is part of the XBase libraries
+#    Copyright (C) 1998,1999 Vitaly Fedrushkov <fedrushkov@acm.org>
+
+#    This library is free software; you can redistribute it and/or
+#    modify it under the terms of the GNU Library General Public
+#    License as published by the Free Software Foundation; either
+#    version 2 of the License, or (at your option) any later version.
+
+#    This library is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#    Library General Public License for more details.
+
+#    You should have received a copy of the GNU Library General Public
+#    License along with this library; see the file COPYING.LIB.  If not,
+#    write to the Free Software Foundation, Inc., or see
+#    http://www.gnu.org/.
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = ..
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = ..
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+INCLUDES = -I$(topdir) $(all_includes)
+
+noinst_PROGRAMS = 
+EXTRA_PROGRAMS = tvxbase
+
+tvxbase_SOURCES = tvxbase.cpp tvbrowse.cpp tvbrowse.h
+tvxbase_LDADD = -L$(topdir)/xdb/.libs -lxdb -ltvision -lgpm
+
+MAINTAINERCLEANFILES = Makefile.in
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = ../xbase/xbconfig.h
+CONFIG_CLEAN_FILES = 
+PROGRAMS =  $(noinst_PROGRAMS)
+
+
+DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../xbase
+CPPFLAGS = 
+LDFLAGS = -s
+LIBS = 
+tvxbase_OBJECTS =  tvxbase.o tvbrowse.o
+tvxbase_DEPENDENCIES = 
+tvxbase_LDFLAGS = 
+CXXFLAGS = -O2 -Wall
+CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
+CFLAGS = -O2 -Wall
+COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
+DIST_COMMON =  README Makefile.am Makefile.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = gtar
+GZIP_ENV = --best
+SOURCES = $(tvxbase_SOURCES)
+OBJECTS = $(tvxbase_OBJECTS)
+
+all: all-redirect
+.SUFFIXES:
+.SUFFIXES: .S .c .cpp .lo .o .s
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps tv/Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+
+mostlyclean-noinstPROGRAMS:
+
+clean-noinstPROGRAMS:
+	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
+
+distclean-noinstPROGRAMS:
+
+maintainer-clean-noinstPROGRAMS:
+
+.c.o:
+	$(COMPILE) -c $<
+
+.s.o:
+	$(COMPILE) -c $<
+
+.S.o:
+	$(COMPILE) -c $<
+
+mostlyclean-compile:
+	-rm -f *.o core *.core
+
+clean-compile:
+
+distclean-compile:
+	-rm -f *.tab.c
+
+maintainer-clean-compile:
+
+.c.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.s.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.S.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+
+maintainer-clean-libtool:
+
+tvxbase: $(tvxbase_OBJECTS) $(tvxbase_DEPENDENCIES)
+	@rm -f tvxbase
+	$(CXXLINK) $(tvxbase_LDFLAGS) $(tvxbase_OBJECTS) $(tvxbase_LDADD) $(LIBS)
+.cpp.o:
+	$(CXXCOMPILE) -c $<
+.cpp.lo:
+	$(LTCXXCOMPILE) -c $<
+
+tags: TAGS
+
+ID: $(HEADERS) $(SOURCES) $(LISP)
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	here=`pwd` && cd $(srcdir) \
+	  && mkid -f$$here/ID $$unique $(LISP)
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
+	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)
+
+mostlyclean-tags:
+
+clean-tags:
+
+distclean-tags:
+	-rm -f TAGS ID
+
+maintainer-clean-tags:
+
+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
+
+subdir = tv
+
+distdir: $(DISTFILES)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+
+info-am:
+info: info-am
+dvi-am:
+dvi: dvi-am
+check-am: all-am
+check: check-am
+installcheck-am:
+installcheck: installcheck-am
+install-exec-am:
+install-exec: install-exec-am
+
+install-data-am:
+install-data: install-data-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-am
+uninstall-am:
+uninstall: uninstall-am
+all-am: Makefile $(PROGRAMS)
+all-redirect: all-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs:
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
+mostlyclean-am:  mostlyclean-noinstPROGRAMS mostlyclean-compile \
+		mostlyclean-libtool mostlyclean-tags \
+		mostlyclean-generic
+
+mostlyclean: mostlyclean-am
+
+clean-am:  clean-noinstPROGRAMS clean-compile clean-libtool clean-tags \
+		clean-generic mostlyclean-am
+
+clean: clean-am
+
+distclean-am:  distclean-noinstPROGRAMS distclean-compile \
+		distclean-libtool distclean-tags distclean-generic \
+		clean-am
+	-rm -f libtool
+
+distclean: distclean-am
+
+maintainer-clean-am:  maintainer-clean-noinstPROGRAMS \
+		maintainer-clean-compile maintainer-clean-libtool \
+		maintainer-clean-tags maintainer-clean-generic \
+		distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-am
+
+.PHONY: mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
+clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
+mostlyclean-compile distclean-compile clean-compile \
+maintainer-clean-compile mostlyclean-libtool distclean-libtool \
+clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
+distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
+dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
+install-exec install-data-am install-data install-am install \
+uninstall-am uninstall all-redirect all-am all installdirs \
+mostlyclean-generic distclean-generic clean-generic \
+maintainer-clean-generic clean mostlyclean distclean maintainer-clean
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/tv/tvxbase.cpp
+++ libxbase-2.0.0/tv/tvxbase.cpp
@@ -23,7 +23,7 @@
     Foundation, Inc., or see http://www.gnu.org/.
 */
 
-#include <iostream.h>
+#include <iostream>
 
 #define Uses_TApplication
 #define Uses_TButton
--- libxbase-2.0.0.orig/debian/libxbase2.0-0.postinst
+++ libxbase-2.0.0/debian/libxbase2.0-0.postinst
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+#DEBHELPER#
+
+
+if [ "$1" = "configure" ]; then
+	ldconfig
+fi
--- libxbase-2.0.0.orig/debian/docs
+++ libxbase-2.0.0/debian/docs
@@ -0,0 +1,3 @@
+NEWS
+README
+TODO
--- libxbase-2.0.0.orig/debian/control
+++ libxbase-2.0.0/debian/control
@@ -0,0 +1,64 @@
+Source: libxbase
+Priority: optional
+Section: libs
+Maintainer: Michael Vogt <mvo@debian.org>
+Standards-Version: 3.7.3
+Build-Depends: debhelper (>= 5.0.0), doxygen, automake
+Homepage: http://sourceforge.net/projects/xdb/
+
+Package: libxbase2.0-0
+Conflicts: libxbase2.0-0c102
+Replaces: libxbase2.0-0c102
+Section: libs
+Architecture: any
+Depends: ${shlibs:Depends}
+Description: xbase compatible C++ class library (shared libraries)
+ Xbase (formerly known as xdb, also formerly known as xBase) is a collection 
+ of specifiations, programs, utilities and a C++ class library for 
+ manipulating Xbase type datafiles and indices.
+ .
+ Xbase is useful for accessing data in legacy dBase 3 and 4 database files as
+ well as a general light-weight database engine.  It includes support for
+ DBF (dBase version 3 and 4) data files, NDX and NTX indexes, and DBT
+ (dBase version 3 and 4).  It supports file and record locking under *nix
+ OS's.
+ .
+ This package contains the shared libraries necessary to run programs linked
+ against Xbase.  For documentation, please install the libxbase2.0-dev package.
+
+Package: libxbase2.0-dev
+Section: libdevel
+Architecture: any
+Depends: libxbase2.0-0 (= ${binary:Version}), libc6-dev
+Suggests: libxbase2.0-bin
+Description: xbase compatible C++ class library (development files)
+ Xbase (formerly known as xdb, also formerly known as xBase) is a collection 
+ of specifiations, programs, utilities and a C++ class library for 
+ manipulating Xbase type datafiles and indices.
+ .
+ Xbase is useful for accessing data in legacy dBase 3 and 4 database files as
+ well as a general light-weight database engine.  It includes support for
+ DBF (dBase version 3 and 4) data files, NDX and NTX indexes, and DBT
+ (dBase version 3 and 4).  It supports file and record locking under *nix
+ OS's.
+ .
+ This package contains development files for Xbase and documentation 
+ distributed with Xbase.
+
+Package: libxbase2.0-bin
+Section: libs
+Architecture: any
+Depends: libxbase2.0-0 (= ${binary:Version}), libxbase2.0-dev, libc6-dev, ${shlibs:Depends}
+Conflicts: libxdb-dev
+Description: xbase compatible C++ class library (utilities)
+ Xbase (formerly known as xdb, also formerly known as xBase) is a collection 
+ of specifiations, programs, utilities and a C++ class library for 
+ manipulating Xbase type datafiles and indices.
+ .
+ Xbase is useful for accessing data in legacy dBase 3 and 4 database files as
+ well as a general light-weight database engine.  It includes support for
+ DBF (dBase version 3 and 4) data files, NDX and NTX indexes, and DBT
+ (dBase version 3 and 4).  It supports file and record locking under *nix
+ OS's.
+ .
+ This package contains the utility files for Xbase distributed with Xbase.
--- libxbase-2.0.0.orig/debian/libxbase2.0-0.install
+++ libxbase-2.0.0/debian/libxbase2.0-0.install
@@ -0,0 +1 @@
+debian/tmp/usr/lib/*.so.* usr/lib/
--- libxbase-2.0.0.orig/debian/dirs
+++ libxbase-2.0.0/debian/dirs
@@ -0,0 +1,3 @@
+usr/bin
+usr/lib
+usr/include/xdb
--- libxbase-2.0.0.orig/debian/copyright
+++ libxbase-2.0.0/debian/copyright
@@ -0,0 +1,23 @@
+This package was debianized by:
+	Ionutz Borcoman <borco@borco-ei.eng.hokudai.ac.jp> on
+	Thu, 10 Aug 2000 12:08:53 +0900.
+
+It was downloaded from: 
+	http://xdb.sourceforge.net/
+
+Upstream Authors: 
+Bob Cotton        <bcotton@synix.com>        - Clipper NTX index support
+Denis Braussen    <postoffice@mail.dotcom.fr> - general support
+Denis Pershin     <dyp@inetlab.com>          - provided library enhancements
+Eirk Bachman      <ebp@geocities.com>        - keeper of definitive Xbase spec
+Gabriel Emerson   <egabriel@io.com>          - provided logo
+Gary Kunkel       <gkunkel@startech.keller.tx.us> - original author
+Kehl Hubertus     <kehlh@hotmail.com>        - Xbase to Xbase C++ Perl Converter
+Michael Bedward   <mbedward@ozemail.com.au>  - Expression logic support
+Paul Foster       <paulf@quillandmouse.com>  - general support
+Vitaly Fedrushkov <willy@snowyowl.csu.ac.ru> - TV support and more
+
+Copyright: Copyright (C) 1997  StarTech, Gary A. Kunkel
+
+License:
+	LGPL (see /usr/share/common-licenses/LGPL)
--- libxbase-2.0.0.orig/debian/libxbase2.0-bin.install
+++ libxbase-2.0.0/debian/libxbase2.0-bin.install
@@ -0,0 +1,12 @@
+debian/tmp/usr/bin/checkndx usr/bin/
+debian/tmp/usr/bin/copydbf usr/bin/
+debian/tmp/usr/bin/dbfutil1 usr/bin/
+debian/tmp/usr/bin/dbfxtrct usr/bin/
+debian/tmp/usr/bin/deletall usr/bin/
+debian/tmp/usr/bin/dumphdr usr/bin/
+debian/tmp/usr/bin/dumprecs usr/bin/
+debian/tmp/usr/bin/packdbf usr/bin/
+debian/tmp/usr/bin/reindex usr/bin/
+debian/tmp/usr/bin/undelall usr/bin/
+debian/tmp/usr/bin/zap usr/bin/
+
--- libxbase-2.0.0.orig/debian/watch
+++ libxbase-2.0.0/debian/watch
@@ -0,0 +1,2 @@
+version=3
+http://sf.net/xdb/xbase-([\d.]+)\.tar\.gz
--- libxbase-2.0.0.orig/debian/compat
+++ libxbase-2.0.0/debian/compat
@@ -0,0 +1 @@
+5
--- libxbase-2.0.0.orig/debian/libxbase2.0-dev.examples
+++ libxbase-2.0.0/debian/libxbase2.0-dev.examples
@@ -0,0 +1 @@
+examples/*.cpp
--- libxbase-2.0.0.orig/debian/rules
+++ libxbase-2.0.0/debian/rules
@@ -0,0 +1,79 @@
+#!/usr/bin/make -f
+# Sample debian/rules that uses debhelper.
+# GNU copyright 1997 to 1999 by Joey Hess.
+
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
+        INSTALL_PROGRAM += -s
+endif
+
+ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
+        CFLAGS += -O0
+else
+        CFLAGS += -O2
+endif
+
+build: build-stamp
+build-stamp:
+	dh_testdir
+	./configure --prefix=/usr \
+	    --mandir=\$${prefix}/share/man \
+	    --enable-static
+	# Add here commands to compile the package.
+	$(MAKE)
+	touch build-stamp
+
+clean:
+	dh_testdir
+	dh_testroot
+	rm -f build-stamp install-stamp 
+
+	# Add here commands to clean up after the build process.
+	[ ! -f Makefile ] || [ ! -f config.status ] || $(MAKE) clean
+	find . -name '*.o' -o -name '_libs' -o -name '*.lo' -o -name '*.a' -o -name '.deps' | xargs rm -rf
+	# remove unused configure stuff
+	rm -f config.log config.cache config.status
+	dh_clean 
+	-test -r /usr/share/misc/config.sub && \
+	cp -f /usr/share/misc/config.sub config.sub
+	-test -r /usr/share/misc/config.guess && \
+	cp -f /usr/share/misc/config.guess config.guess
+
+install: install-stamp
+install-stamp: build
+	dh_testdir
+	dh_testroot
+	dh_clean
+
+	$(MAKE) prefix=$(CURDIR)/debian/tmp/usr \
+		mandir=$(CURDIR)/debian/tmp/usr/share/man install 
+	touch install-stamp
+
+
+# Build architecture-independent files here.
+binary-indep: 
+# We have nothing to do by default.
+
+# Build architecture-dependent files here.
+binary-arch: build install
+	dh_testdir -a
+	dh_testroot -a
+	dh_install -a
+	dh_installdocs -a
+	dh_installchangelogs -a ChangeLog
+	dh_installexamples -a
+	dh_strip -a
+	dh_compress -a
+	dh_fixperms -a
+	dh_makeshlibs -a
+	dh_shlibdeps -a
+	dh_installdeb -a
+	dh_gencontrol -a
+	dh_md5sums -a
+	dh_builddeb -a
+
+
+binary: binary-indep binary-arch
+.PHONY: build clean binary-indep binary-arch binary install
--- libxbase-2.0.0.orig/debian/libxbase2.0-dev.install
+++ libxbase-2.0.0/debian/libxbase2.0-dev.install
@@ -0,0 +1,8 @@
+debian/tmp/usr/lib/lib*.la usr/lib/
+debian/tmp/usr/lib/lib*.so usr/lib/
+debian/tmp/usr/lib/lib*.a usr/lib/
+debian/tmp/usr/include/* usr/include/
+debian/tmp/usr/bin/xbase-config usr/bin/
+html/*.html usr/share/doc/libxbase2.0-dev/html/
+html/*.jpg usr/share/doc/libxbase2.0-dev/html/
+html/*.gif usr/share/doc/libxbase2.0-dev/html/
--- libxbase-2.0.0.orig/debian/changelog
+++ libxbase-2.0.0/debian/changelog
@@ -0,0 +1,148 @@
+libxbase (2.0.0-8.5) unstable; urgency=low
+
+  * Non-maintainer upload.
+  * Fix build failure with GCC 4.7. Closes: #667260.
+
+ -- Matthias Klose <doko@debian.org>  Mon, 16 Apr 2012 23:00:27 +0200
+
+libxbase (2.0.0-8.4) unstable; urgency=low
+
+  * Non-maintainer upload.
+  * Build with current automake (Closes: #549134)
+
+ -- Moritz Muehlenhoff <jmm@debian.org>  Mon, 30 May 2011 05:12:34 +0200
+
+libxbase (2.0.0-8.3) unstable; urgency=low
+
+  * Non-maintainer upload.
+  * Fix FTBFS on GNU/kFreeBSD by handling kfreebsd* the same way as
+    linux-gnu* in ltconfig, thanks to Petr Salinger (Closes: #493509).
+  * Also add ${shlibs:Depends} to libxbase2.0-bin's Depends, a libc
+    dependency was missing for some binaries in there.
+  * Finally call dh_installdeb after dh_shlibdeps, per lintian.
+
+ -- Cyril Brulebois <kibi@debian.org>  Thu, 20 Aug 2009 01:58:55 +0200
+
+libxbase (2.0.0-8.2) unstable; urgency=low
+
+  * Non-maintainer upload.
+  * Put include files in /usr/include. (Closes: #470260).
+    + The bad copy/paste release.
+
+ -- Barry deFreese <bddebian@comcast.net>  Mon, 10 Mar 2008 15:15:06 -0400
+
+libxbase (2.0.0-8.1) unstable; urgency=low
+
+  * Non-maintainer upload.
+  * Add watch file.
+  * Add Homepage to control.
+  * Add Section to source package and -dev package to libdevel.
+  * Fix up debian/copyright syntax.
+  * Call dh_makeshlibs before dh_shlibdeps. (Closes: #453792).
+  * Make clean not ignore errors.
+  * Version debhelper build-dep.
+  * Move DH_COMPAT to debian/compat and set to 5.
+  * Remove unneeded dirs file.
+  * Replace 'pwd' with $(CURDIR).
+  * Move .files files to .install and adjust debian/rules accordingly.
+  * Build with gcc-4.3. (Closes: #461714).
+    + Include <iostream> not iostream.h. (Closes: #299114).
+  * Make binNMU safe. Replace Source-Version with binary:Version.
+  * Handle nostrip option. (Closes: #437457).
+  * Add info to description that docs are in -dev package. (Closes: #394259).
+  * Bump Standards Version to 3.7.3.
+
+ -- Barry deFreese <bddebian@comcast.net>  Thu, 21 Feb 2008 11:04:08 -0500
+
+libxbase (2.0.0-8) unstable; urgency=low
+
+  * removed "#pragma interface" to make it build with g++ 4.1
+    (thanks to Ben Hutchings and Brian M. Carlson) Closes: #356245
+
+ -- Michael Vogt <mvo@debian.org>  Fri, 12 May 2006 11:16:43 +0200
+
+libxbase (2.0.0-7.1) unstable; urgency=low
+
+  * NMU for C++ transition
+  * Rename libxbase2.0-0c102 to libxbase2.0-0
+
+ -- Jeroen van Wolffelaar <jeroen@wolffelaar.nl>  Sat,  6 Aug 2005 02:54:09 +0200
+
+libxbase (2.0.0-7) unstable; urgency=low
+
+  * applied a patch from  Wesley J Landake to remove a unneed scoper
+    in the source
+    (closes:  #253655)
+  * applied a documentation patch from Wesley J Landake 
+    (closes: #209746)
+  * thanks Wesley!
+ 
+ -- Michael Vogt <mvo@debian.org>  Tue, 14 Sep 2004 10:31:34 +0200
+
+libxbase (2.0.0-6) unstable; urgency=low
+
+  * rebuild for g++-3.2
+
+ -- Michael Vogt <mvo@debian.org>  Sun, 12 Jan 2003 15:06:50 +0100
+
+libxbase (2.0.0-5) unstable; urgency=low
+
+  * split up libxbase into libxbase2.0-dev and libxbase2.0-bin  
+    (closes: #148308)
+  * fixed a bug that prevented the examples from being installed
+
+ -- Michael Vogt <mvo@debian.org>  Wed, 29 May 2002 11:11:23 +0200
+
+libxbase (2.0.0-4) unstable; urgency=low
+
+  * renamed to match soname (closes: #141757)
+  * added doxygen to build-depends (closes: #141947)
+
+ -- Michael Vogt <mvo@debian.org>  Tue,  9 Apr 2002 09:04:15 +0200
+
+libxbase (2.0.0-3) unstable; urgency=low
+
+  * updated config.sub, config.guess (automated via autotools-dev)
+
+ -- Michael Vogt <mvo@debian.org>  Mon,  8 Apr 2002 09:31:05 +0200
+
+libxbase (2.0.0-2) unstable; urgency=low
+
+  * renamed to libxbase to prevent name clash with the old 
+    X11 package "xbase" (closes: #141686)
+
+ -- Michael Vogt <mvo@debian.org>  Mon,  8 Apr 2002 09:02:35 +0200
+
+xbase (2.0.0-1) unstable; urgency=low
+
+  * new upstream release
+
+ -- Michael Vogt <mvo@debian.org>  Sun, 17 Mar 2002 01:00:42 +0100
+
+xdb (1.2.0-4) unstable; urgency=low
+
+  * new version of config.gues (closes: #96607)
+
+ -- Michael Vogt <mvo@debian.org>  Mon,  7 May 2001 10:38:44 +0200
+
+xdb (1.2.0-3) unstable; urgency=low
+
+  * new version for config.sub to make it compile on arm
+    closes: #90222
+
+ -- Michael Vogt <mvo@debian.org>  Mon, 16 Apr 2001 21:54:31 +0200
+
+xdb (1.2.0-2) unstable; urgency=low
+
+  * new debian maintainer, closes: #88240
+  * added build-depends
+
+ -- Michael Vogt <mvo@debian.org>  Thu, 12 Apr 2001 12:09:39 +0200
+
+xdb (1.2.0-1) unstable; urgency=low
+
+  * Initial Release.
+
+ -- Ionutz Borcoman <borco@borco-ei.eng.hokudai.ac.jp>  Thu, 10 Aug 2000 12:08:53 +0900
+
+
--- libxbase-2.0.0.orig/bin/dbfxtrct.cpp
+++ libxbase-2.0.0/bin/dbfxtrct.cpp
@@ -51,14 +51,14 @@
 void Usage();
 void Usage()
 {
-  cout << "\nUsage: dbfxtrct -iDATABASE.DBF -sINDEX.N[TD]X -f -F -dMM/DD/YY\n";
-  cout << "\nWhere DATABASE.DBF is the name of the database file to dump\n";
-  cout << "INDEX.NTX or .NDX is an optional index sort paramater\n";
-  cout << "-f  optional field name list in first record\n";
-  cout << "-F  optional field name and attributes in first record\n";
-  cout << "MM/DD/YY is an optional output date format for any date fields\n";
-  cout << "\nThis program creates output suitable for awk and perl scripts\n";
-  cout << "\nThis program does not support memo fields (yet).\n";
+  std::cout << "\nUsage: dbfxtrct -iDATABASE.DBF -sINDEX.N[TD]X -f -F -dMM/DD/YY\n";
+  std::cout << "\nWhere DATABASE.DBF is the name of the database file to dump\n";
+  std::cout << "INDEX.NTX or .NDX is an optional index sort paramater\n";
+  std::cout << "-f  optional field name list in first record\n";
+  std::cout << "-F  optional field name and attributes in first record\n";
+  std::cout << "MM/DD/YY is an optional output date format for any date fields\n";
+  std::cout << "\nThis program creates output suitable for awk and perl scripts\n";
+  std::cout << "\nThis program does not support memo fields (yet).\n";
 }
 /*************************************************************************/
 int main(int ac,char** av)
@@ -86,7 +86,7 @@
   {
     p = av[i];
     if( *p != '-' ){
-      cout << "Invalid paramater " << *p << endl;
+      std::cout << "Invalid paramater " << *p << std::endl;
       Usage();
       return 1;
     }
@@ -102,7 +102,7 @@
     else if( *p == 'd' )
       x.SetDefaultDateFormat( ++p );
     else{
-      cout << "Invalid paramater " << *p << endl;
+      std::cout << "Invalid paramater " << *p << std::endl;
       Usage();
       return 1;
     }
@@ -119,7 +119,7 @@
 
    if(( rc = d.OpenDatabase( dbfname )) != XB_NO_ERROR )
    {
-      cout << "\nCould not open file " << dbfname << " rc = " << rc << "\n";
+      std::cout << "\nCould not open file " << dbfname << " rc = " << rc << "\n";
       return 2;
    }
 
@@ -137,12 +137,12 @@
        ix = new xbNdx( &d );
 #endif
      if( !ix ){
-       cout << "Unknown index type. .NTX and .NDX index file support only\n";
+       std::cout << "Unknown index type. .NTX and .NDX index file support only\n";
        return 3;
      }
      if(( rc = ix->OpenIndex( ixname )) != XB_NO_ERROR )
      {
-       cout << "\nCould not open index " << ixname << " rc = " << rc << "\n";
+       std::cout << "\nCould not open index " << ixname << " rc = " << rc << "\n";
        return 4;
      }
    }
@@ -151,14 +151,14 @@
 /*  if -f or -F paramater, dump the header information */
   if( FieldOption ){
     for( xbLong l = 0; l < d.FieldCount(); l++ ){
-      if( l ) cout << ",";
-      cout << d.GetFieldName(l);
+      if( l ) std::cout << ",";
+      std::cout << d.GetFieldName(l);
       if( FieldOption == 2 ){
-        cout << "|" << d.GetFieldType(l) << "|" << d.GetFieldLen(l);
-	cout << "|" << d.GetFieldDecimal(l);
+        std::cout << "|" << d.GetFieldType(l) << "|" << d.GetFieldLen(l);
+	std::cout << "|" << d.GetFieldDecimal(l);
       }
     }
-    cout << endl;
+    std::cout << std::endl;
   }
 
 /*  if an index used, then loop thru each record, based on index, else
@@ -170,18 +170,18 @@
     
   while( rc == XB_NO_ERROR ){
     for( xbLong l = 0; l < d.FieldCount(); l++ ){
-      if( l ) cout << ",";
+      if( l ) std::cout << ",";
       strcpy( buf, x.LTRIM( d.GetStringField( l )));
       if( d.GetFieldType( l ) == 'D' )
-        cout << x.DTOC( buf );
+        std::cout << x.DTOC( buf );
       else
-        cout << x.TRIM( buf );
+        std::cout << x.TRIM( buf );
     }
     if( ixname )
       rc = ix->GetNextKey();
     else
       rc = d.GetNextRecord();
-    cout << endl;
+    std::cout << std::endl;
   }
 
 /*  close everything */
--- libxbase-2.0.0.orig/bin/copydbf.cpp
+++ libxbase-2.0.0/bin/copydbf.cpp
@@ -47,7 +47,7 @@
 int main(int ac,char** av)
 {
    if (3 != ac) {
-      cout <<
+      std::cout <<
          "\nUsage: copydbf filename1 filename2\n"
          "This program copies the structure of one dbf file to another\n";
         return 1;
@@ -61,7 +61,7 @@
 
     xbShort rc = MyFile.OpenDatabase( sfilename );
     if( rc != XB_NO_ERROR ) {
-      cout << "Could not open file " << sfilename << " Error = " << rc << "\n";
+      std::cout << "Could not open file " << sfilename << " Error = " << rc << "\n";
         return 2;
    }
 
@@ -70,7 +70,7 @@
 
    if(( rc = MyFile.CopyDbfStructure( tfilename, OverlaySwitch )) != XB_NO_ERROR )
    {
-      cout << "Could not copy file " << tfilename << " Error = " << rc << "\n";
+      std::cout << "Could not copy file " << tfilename << " Error = " << rc << "\n";
       return 3;
    }
 
--- libxbase-2.0.0.orig/bin/dumphdr.cpp
+++ libxbase-2.0.0/bin/dumphdr.cpp
@@ -54,7 +54,7 @@
   xbXBase x;
 
   if( ac <= 1 ) {
-    cout << "\nUsage: dumphdr filename...\n";
+    std::cout << "\nUsage: dumphdr filename...\n";
     return 1;
   }
   for( int i = 1; i < ac; ++i ){
@@ -63,14 +63,14 @@
  
     if(( rc =  MyFile.OpenDatabase( filename )) != 0 )
     {
-     cout << "Could not open file rc = " << rc  << " file = " << filename << "\n";
+     std::cout << "Could not open file rc = " << rc  << " file = " << filename << "\n";
      return 0;
     }
     MyFile.DumpHeader( 3 );
     MyFile.CloseDatabase();
   }
 #else
-  cout << "\nXBASE_DEBUG is not compiled in\n";
+  std::cout << "\nXBASE_DEBUG is not compiled in\n";
 #endif
   return 0;
 }     
--- libxbase-2.0.0.orig/bin/reindex.cpp
+++ libxbase-2.0.0/bin/reindex.cpp
@@ -57,7 +57,7 @@
 int main(int ac,char** av)
 {
     if (3 != ac) {
-        cout << 
+        std::cout << 
             "\nUsage: reindex dbf_file ndx_file\n"
             ;
         return 1;
@@ -71,26 +71,26 @@
    xbNdx MyIndex( &MyFile );
 
     if( MyFile.OpenDatabase( filename )) {
-      cout << "Could not open file " << filename << "\n";
+      std::cout << "Could not open file " << filename << "\n";
       return 0;
    }
     if( MyIndex.OpenIndex( filename2 )) {
-      cout << "Could not open index file " << filename2 << "\n";
+      std::cout << "Could not open index file " << filename2 << "\n";
       return 0;
    }
 
     xbShort rc = MyIndex.ReIndex(showStatus);
     printf("\n");
     if( rc != XB_NO_ERROR ) {
-      cout << "\nError reindexing index ==> " << filename2;
-      cout << " Return Code = " << rc;
+      std::cout << "\nError reindexing index ==> " << filename2;
+      std::cout << " Return Code = " << rc;
    }
 
     /* or
    if(( rc = MyFile.RebuildAllIndicis()) != XB_NO_ERROR ) 
    {
-      cout << "\nError reindexing...";
-      cout << "\nReturn Code = " << rc;
+      std::cout << "\nError reindexing...";
+      std::cout << "\nReturn Code = " << rc;
    }
     */
    MyFile.CloseDatabase();	/* close database */
--- libxbase-2.0.0.orig/bin/dumprecs.cpp
+++ libxbase-2.0.0/bin/dumprecs.cpp
@@ -55,7 +55,7 @@
 int main(int ac,char** av)
 {
     if (ac <= 1) {
-        cout <<
+        std::cout <<
             "\nUsage: dumprecs filename...\n"
             ;
         return 1;
@@ -72,15 +72,15 @@
 #endif
             xbShort rc = MyFile.OpenDatabase(filename);
             if ( rc != XB_NO_ERROR) {
-       cout << "Could not open file " << filename << " Error = " << rc << "\n";
+       std::cout << "Could not open file " << filename << " Error = " << rc << "\n";
        return 0;
      }
 
-     cout << "\nLoop through forwards...\n";
-     int i = 0;
-     while(i<MyFile.NoOfRecords()) {
-       MyFile.DumpRecord(i+1);
-       i++;
+     std::cout << "\nLoop through forwards...\n";
+     int i2 = 0;
+     while(i2<MyFile.NoOfRecords()) {
+       MyFile.DumpRecord(i2+1);
+       i2++;
      }
 
      MyFile.CloseDatabase();	/* close database */
--- libxbase-2.0.0.orig/bin/packdbf.cpp
+++ libxbase-2.0.0/bin/packdbf.cpp
@@ -49,7 +49,7 @@
 int main(int ac,char** av)
 {
     if (ac <= 1) {
-        cout <<
+        std::cout <<
             "\nUsage: packdbf filename...\n"
             "\nThis program does not automatically reindex any NDX indexes."
             "\nUse the reindex program to reindex any indexes associated"
@@ -67,18 +67,18 @@
    xbDbf MyFile( &x );
 
         if( MyFile.OpenDatabase( filename )) {
-      cout << "Could not open file " << filename << "\n";
+      std::cout << "Could not open file " << filename << "\n";
             return 1;
    }
 
         xbShort rc = MyFile.PackDatabase( F_SETLKW );
         if( rc != XB_NO_ERROR ) {
-      cout << "\nError packing database ==> " << filename;
-      cout << " Return Code = " << rc;
+      std::cout << "\nError packing database ==> " << filename;
+      std::cout << " Return Code = " << rc;
    }
    MyFile.CloseDatabase();	/* close database */
 
-   cout << "\nPack Database complete...\n\n";
+   std::cout << "\nPack Database complete...\n\n";
     }
 
     return 0;
--- libxbase-2.0.0.orig/bin/zap.cpp
+++ libxbase-2.0.0/bin/zap.cpp
@@ -48,7 +48,7 @@
 int main(int ac,char** av)
 {
    if (ac <= 1) {
-       cout << 
+       std::cout << 
            "\nUsage: zap filename...\n"
            "\nThis program does not automatically reindex any indices."
            "\nUse the reindex program to reindex any indexes associated"
@@ -66,18 +66,18 @@
    xbDbf MyFile( &x );
 
        if( MyFile.OpenDatabase( filename )) {
-      cout << "Could not open file " << filename << "\n";
+      std::cout << "Could not open file " << filename << "\n";
       return 0;
    }
 
        xbShort rc = MyFile.Zap( F_SETLKW );
        if( rc != XB_NO_ERROR ) {
-      cout << "\nError zapping database ==> " << filename;
-      cout << " Return Code = " << rc;
+      std::cout << "\nError zapping database ==> " << filename;
+      std::cout << " Return Code = " << rc;
    }
    MyFile.CloseDatabase();	/* close database */
 
-   cout << "\nZap Database complete...\n\n";
+   std::cout << "\nZap Database complete...\n\n";
    }
 
    return 0;
--- libxbase-2.0.0.orig/bin/checkndx.cpp
+++ libxbase-2.0.0/bin/checkndx.cpp
@@ -54,32 +54,32 @@
    xbShort rc;
 
    if( 3 != ac ){
-     cout <<
+     std::cout <<
        "\nUsage: checkndx dbf_file index_file\n";
        return 1;
    }
 
    if(( rc = d.OpenDatabase( av[1] )) != XB_NO_ERROR )
    {
-      cout << "\nCould not open file " << av[1] << " rc = " << rc << "\n";
+      std::cout << "\nCould not open file " << av[1] << " rc = " << rc << "\n";
       return 2;
    }
 
    if(( rc = i.OpenIndex( av[2] )) != XB_NO_ERROR )
    {
-      cout << "\nCould not open file " << av[2] << " rc = " << rc << "\n";
+      std::cout << "\nCould not open file " << av[2] << " rc = " << rc << "\n";
       return 3;
    }
 
-   cout << "\nRunning...\n";
+   std::cout << "\nRunning...\n";
    rc = i.CheckIndexIntegrity( 1 );
-   cout << "\nNdx integrity check = " << rc << "\n";
+   std::cout << "\nNdx integrity check = " << rc << "\n";
 
    i.DumpHdrNode();
 
    d.CloseDatabase();
 #else
-   cout << "\nXBASE_DEBUG is not compiled in\n";
+   std::cout << "\nXBASE_DEBUG is not compiled in\n";
 #endif
    return 0;
 }
--- libxbase-2.0.0.orig/bin/Makefile
+++ libxbase-2.0.0/bin/Makefile
@@ -0,0 +1,475 @@
+# Generated automatically from Makefile.in by configure.
+# Makefile.in generated automatically by automake 1.4 from Makefile.am
+
+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+SHELL = /bin/sh
+
+srcdir = .
+top_srcdir = ..
+prefix = /usr
+exec_prefix = ${prefix}
+
+bindir = ${exec_prefix}/bin
+sbindir = ${exec_prefix}/sbin
+libexecdir = ${exec_prefix}/libexec
+datadir = ${prefix}/share
+sysconfdir = ${prefix}/etc
+sharedstatedir = ${prefix}/com
+localstatedir = ${prefix}/var
+libdir = ${exec_prefix}/lib
+infodir = ${prefix}/info
+mandir = ${prefix}/share/man
+includedir = ${prefix}/include
+oldincludedir = /usr/include
+
+DESTDIR =
+
+pkgdatadir = $(datadir)/xbase
+pkglibdir = $(libdir)/xbase
+pkgincludedir = $(includedir)/xbase
+
+top_builddir = ..
+
+ACLOCAL = aclocal
+AUTOCONF = autoconf
+AUTOMAKE = automake
+AUTOHEADER = autoheader
+
+INSTALL = /usr/bin/install -c
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_SCRIPT = ${INSTALL_PROGRAM}
+transform = s,x,x,
+
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_alias = i686-pc-linux-gnu
+build_triplet = i686-pc-linux-gnu
+host_alias = i686-pc-linux-gnu
+host_triplet = i686-pc-linux-gnu
+target_alias = i686-pc-linux-gnu
+target_triplet = i686-pc-linux-gnu
+CC = gcc
+CPP = gcc -E
+CXX = g++
+GLINC = @GLINC@
+GLLIB = @GLLIB@
+LD = /usr/bin/ld
+LIBDL = @LIBDL@
+LIBJPEG = @LIBJPEG@
+LIBNSL = -lnsl
+LIBOBJS = @LIBOBJS@
+LIBSOCKET = 
+LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
+LN_S = ln -s
+MAKEINFO = makeinfo
+NM = /usr/bin/nm -B
+PACKAGE = xbase
+PAMINC = @PAMINC@
+PAMLIBPATHS = @PAMLIBPATHS@
+PAMLIBS = @PAMLIBS@
+RANLIB = ranlib
+TVPROGS = 
+VERSION = 2.0.0
+XPMINC = @XPMINC@
+XPMLIB = @XPMLIB@
+XSUBDIRS = xbase examples bin html libtest tv docs
+X_INCLUDES = @X_INCLUDES@
+X_LDFLAGS = @X_LDFLAGS@
+doxygen = yes
+topdir = /home/bdefreese/debian/libxbase/libxbase-2.0.0
+x_includes = @x_includes@
+x_libraries = @x_libraries@
+
+INCLUDES = -I$(topdir) $(all_includes)
+LDADD = -L$(topdir)/xbase/.libs -lxbase
+
+INSTALL_PROGRAM = /usr/bin/install -c
+
+bin_PROGRAMS = checkndx copydbf dbfxtrct deletall dumphdr dumprecs packdbf                  reindex undelall zap dbfutil1
+
+
+noinst_PROGRAMS = dumpdbt
+
+checkndx_SOURCES = checkndx.cpp 
+copydbf_SOURCES = copydbf.cpp 
+dbfxtrct_SOURCES = dbfxtrct.cpp
+dbfutil1_SOURCES = dbfutil1.cpp
+deletall_SOURCES = deletall.cpp 
+dumpdbt_SOURCES = dumpdbt.cpp 
+dumphdr_SOURCES = dumphdr.cpp 
+dumprecs_SOURCES = dumprecs.cpp 
+packdbf_SOURCES = packdbf.cpp 
+reindex_SOURCES = reindex.cpp 
+undelall_SOURCES = undelall.cpp
+zap_SOURCES = zap.cpp
+
+noinst_HEADERS = 
+
+EXTRA_DIST =  	makefile.g95 	bin.ide
+
+
+MAINTAINERCLEANFILES = Makefile.in
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = ../xbase/xbconfig.h
+CONFIG_CLEAN_FILES = 
+PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)
+
+
+DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../xbase
+CPPFLAGS = 
+LDFLAGS = -s
+LIBS = 
+checkndx_OBJECTS =  checkndx.o
+checkndx_LDADD = $(LDADD)
+checkndx_DEPENDENCIES = 
+checkndx_LDFLAGS = 
+copydbf_OBJECTS =  copydbf.o
+copydbf_LDADD = $(LDADD)
+copydbf_DEPENDENCIES = 
+copydbf_LDFLAGS = 
+dbfxtrct_OBJECTS =  dbfxtrct.o
+dbfxtrct_LDADD = $(LDADD)
+dbfxtrct_DEPENDENCIES = 
+dbfxtrct_LDFLAGS = 
+deletall_OBJECTS =  deletall.o
+deletall_LDADD = $(LDADD)
+deletall_DEPENDENCIES = 
+deletall_LDFLAGS = 
+dumphdr_OBJECTS =  dumphdr.o
+dumphdr_LDADD = $(LDADD)
+dumphdr_DEPENDENCIES = 
+dumphdr_LDFLAGS = 
+dumprecs_OBJECTS =  dumprecs.o
+dumprecs_LDADD = $(LDADD)
+dumprecs_DEPENDENCIES = 
+dumprecs_LDFLAGS = 
+packdbf_OBJECTS =  packdbf.o
+packdbf_LDADD = $(LDADD)
+packdbf_DEPENDENCIES = 
+packdbf_LDFLAGS = 
+reindex_OBJECTS =  reindex.o
+reindex_LDADD = $(LDADD)
+reindex_DEPENDENCIES = 
+reindex_LDFLAGS = 
+undelall_OBJECTS =  undelall.o
+undelall_LDADD = $(LDADD)
+undelall_DEPENDENCIES = 
+undelall_LDFLAGS = 
+zap_OBJECTS =  zap.o
+zap_LDADD = $(LDADD)
+zap_DEPENDENCIES = 
+zap_LDFLAGS = 
+dbfutil1_OBJECTS =  dbfutil1.o
+dbfutil1_LDADD = $(LDADD)
+dbfutil1_DEPENDENCIES = 
+dbfutil1_LDFLAGS = 
+dumpdbt_OBJECTS =  dumpdbt.o
+dumpdbt_LDADD = $(LDADD)
+dumpdbt_DEPENDENCIES = 
+dumpdbt_LDFLAGS = 
+CXXFLAGS = -O2 -Wall
+CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
+HEADERS =  $(noinst_HEADERS)
+
+DIST_COMMON =  Makefile.am Makefile.in
+
+
+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
+
+TAR = gtar
+GZIP_ENV = --best
+SOURCES = $(checkndx_SOURCES) $(copydbf_SOURCES) $(dbfxtrct_SOURCES) $(deletall_SOURCES) $(dumphdr_SOURCES) $(dumprecs_SOURCES) $(packdbf_SOURCES) $(reindex_SOURCES) $(undelall_SOURCES) $(zap_SOURCES) $(dbfutil1_SOURCES) $(dumpdbt_SOURCES)
+OBJECTS = $(checkndx_OBJECTS) $(copydbf_OBJECTS) $(dbfxtrct_OBJECTS) $(deletall_OBJECTS) $(dumphdr_OBJECTS) $(dumprecs_OBJECTS) $(packdbf_OBJECTS) $(reindex_OBJECTS) $(undelall_OBJECTS) $(zap_OBJECTS) $(dbfutil1_OBJECTS) $(dumpdbt_OBJECTS)
+
+all: all-redirect
+.SUFFIXES:
+.SUFFIXES: .S .c .cpp .lo .o .s
+$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
+	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps bin/Makefile
+
+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
+	cd $(top_builddir) \
+	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
+
+
+mostlyclean-binPROGRAMS:
+
+clean-binPROGRAMS:
+	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
+
+distclean-binPROGRAMS:
+
+maintainer-clean-binPROGRAMS:
+
+install-binPROGRAMS: $(bin_PROGRAMS)
+	@$(NORMAL_INSTALL)
+	$(mkinstalldirs) $(DESTDIR)$(bindir)
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  if test -f $$p; then \
+	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
+	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
+	  else :; fi; \
+	done
+
+uninstall-binPROGRAMS:
+	@$(NORMAL_UNINSTALL)
+	list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
+	done
+
+mostlyclean-noinstPROGRAMS:
+
+clean-noinstPROGRAMS:
+	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
+
+distclean-noinstPROGRAMS:
+
+maintainer-clean-noinstPROGRAMS:
+
+.c.o:
+	$(COMPILE) -c $<
+
+.s.o:
+	$(COMPILE) -c $<
+
+.S.o:
+	$(COMPILE) -c $<
+
+mostlyclean-compile:
+	-rm -f *.o core *.core
+
+clean-compile:
+
+distclean-compile:
+	-rm -f *.tab.c
+
+maintainer-clean-compile:
+
+.c.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.s.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+.S.lo:
+	$(LIBTOOL) --mode=compile $(COMPILE) -c $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+
+maintainer-clean-libtool:
+
+checkndx: $(checkndx_OBJECTS) $(checkndx_DEPENDENCIES)
+	@rm -f checkndx
+	$(CXXLINK) $(checkndx_LDFLAGS) $(checkndx_OBJECTS) $(checkndx_LDADD) $(LIBS)
+
+copydbf: $(copydbf_OBJECTS) $(copydbf_DEPENDENCIES)
+	@rm -f copydbf
+	$(CXXLINK) $(copydbf_LDFLAGS) $(copydbf_OBJECTS) $(copydbf_LDADD) $(LIBS)
+
+dbfxtrct: $(dbfxtrct_OBJECTS) $(dbfxtrct_DEPENDENCIES)
+	@rm -f dbfxtrct
+	$(CXXLINK) $(dbfxtrct_LDFLAGS) $(dbfxtrct_OBJECTS) $(dbfxtrct_LDADD) $(LIBS)
+
+deletall: $(deletall_OBJECTS) $(deletall_DEPENDENCIES)
+	@rm -f deletall
+	$(CXXLINK) $(deletall_LDFLAGS) $(deletall_OBJECTS) $(deletall_LDADD) $(LIBS)
+
+dumphdr: $(dumphdr_OBJECTS) $(dumphdr_DEPENDENCIES)
+	@rm -f dumphdr
+	$(CXXLINK) $(dumphdr_LDFLAGS) $(dumphdr_OBJECTS) $(dumphdr_LDADD) $(LIBS)
+
+dumprecs: $(dumprecs_OBJECTS) $(dumprecs_DEPENDENCIES)
+	@rm -f dumprecs
+	$(CXXLINK) $(dumprecs_LDFLAGS) $(dumprecs_OBJECTS) $(dumprecs_LDADD) $(LIBS)
+
+packdbf: $(packdbf_OBJECTS) $(packdbf_DEPENDENCIES)
+	@rm -f packdbf
+	$(CXXLINK) $(packdbf_LDFLAGS) $(packdbf_OBJECTS) $(packdbf_LDADD) $(LIBS)
+
+reindex: $(reindex_OBJECTS) $(reindex_DEPENDENCIES)
+	@rm -f reindex
+	$(CXXLINK) $(reindex_LDFLAGS) $(reindex_OBJECTS) $(reindex_LDADD) $(LIBS)
+
+undelall: $(undelall_OBJECTS) $(undelall_DEPENDENCIES)
+	@rm -f undelall
+	$(CXXLINK) $(undelall_LDFLAGS) $(undelall_OBJECTS) $(undelall_LDADD) $(LIBS)
+
+zap: $(zap_OBJECTS) $(zap_DEPENDENCIES)
+	@rm -f zap
+	$(CXXLINK) $(zap_LDFLAGS) $(zap_OBJECTS) $(zap_LDADD) $(LIBS)
+
+dbfutil1: $(dbfutil1_OBJECTS) $(dbfutil1_DEPENDENCIES)
+	@rm -f dbfutil1
+	$(CXXLINK) $(dbfutil1_LDFLAGS) $(dbfutil1_OBJECTS) $(dbfutil1_LDADD) $(LIBS)
+
+dumpdbt: $(dumpdbt_OBJECTS) $(dumpdbt_DEPENDENCIES)
+	@rm -f dumpdbt
+	$(CXXLINK) $(dumpdbt_LDFLAGS) $(dumpdbt_OBJECTS) $(dumpdbt_LDADD) $(LIBS)
+.cpp.o:
+	$(CXXCOMPILE) -c $<
+.cpp.lo:
+	$(LTCXXCOMPILE) -c $<
+
+tags: TAGS
+
+ID: $(HEADERS) $(SOURCES) $(LISP)
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	here=`pwd` && cd $(srcdir) \
+	  && mkid -f$$here/ID $$unique $(LISP)
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)'; \
+	unique=`for i in $$list; do echo $$i; done | \
+	  awk '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
+	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)
+
+mostlyclean-tags:
+
+clean-tags:
+
+distclean-tags:
+	-rm -f TAGS ID
+
+maintainer-clean-tags:
+
+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
+
+subdir = bin
+
+distdir: $(DISTFILES)
+	@for file in $(DISTFILES); do \
+	  d=$(srcdir); \
+	  if test -d $$d/$$file; then \
+	    cp -pr $$d/$$file $(distdir)/$$file; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || cp -p $$d/$$file $(distdir)/$$file || :; \
+	  fi; \
+	done
+checkndx.o: checkndx.cpp
+copydbf.o: copydbf.cpp
+dbfutil1.o: dbfutil1.cpp
+dbfxtrct.o: dbfxtrct.cpp
+deletall.o: deletall.cpp
+dumpdbt.o: dumpdbt.cpp
+dumphdr.o: dumphdr.cpp
+dumprecs.o: dumprecs.cpp
+packdbf.o: packdbf.cpp
+reindex.o: reindex.cpp
+undelall.o: undelall.cpp
+zap.o: zap.cpp
+
+info-am:
+info: info-am
+dvi-am:
+dvi: dvi-am
+check-am: all-am
+check: check-am
+installcheck-am:
+installcheck: installcheck-am
+install-exec-am: install-binPROGRAMS
+install-exec: install-exec-am
+
+install-data-am:
+install-data: install-data-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+install: install-am
+uninstall-am: uninstall-binPROGRAMS
+uninstall: uninstall-am
+all-am: Makefile $(PROGRAMS) $(HEADERS)
+all-redirect: all-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
+installdirs:
+	$(mkinstalldirs)  $(DESTDIR)$(bindir)
+
+
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-rm -f Makefile $(CONFIG_CLEAN_FILES)
+	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
+
+maintainer-clean-generic:
+	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
+mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \
+		mostlyclean-compile mostlyclean-libtool \
+		mostlyclean-tags mostlyclean-generic
+
+mostlyclean: mostlyclean-am
+
+clean-am:  clean-binPROGRAMS clean-noinstPROGRAMS clean-compile \
+		clean-libtool clean-tags clean-generic mostlyclean-am
+
+clean: clean-am
+
+distclean-am:  distclean-binPROGRAMS distclean-noinstPROGRAMS \
+		distclean-compile distclean-libtool distclean-tags \
+		distclean-generic clean-am
+	-rm -f libtool
+
+distclean: distclean-am
+
+maintainer-clean-am:  maintainer-clean-binPROGRAMS \
+		maintainer-clean-noinstPROGRAMS \
+		maintainer-clean-compile maintainer-clean-libtool \
+		maintainer-clean-tags maintainer-clean-generic \
+		distclean-am
+	@echo "This command is intended for maintainers to use;"
+	@echo "it deletes files that may require special tools to rebuild."
+
+maintainer-clean: maintainer-clean-am
+
+.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
+maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
+mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
+clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
+mostlyclean-compile distclean-compile clean-compile \
+maintainer-clean-compile mostlyclean-libtool distclean-libtool \
+clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
+distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
+dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
+install-exec install-data-am install-data install-am install \
+uninstall-am uninstall all-redirect all-am all installdirs \
+mostlyclean-generic distclean-generic clean-generic \
+maintainer-clean-generic clean mostlyclean distclean maintainer-clean
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
--- libxbase-2.0.0.orig/bin/dumpdbt.cpp
+++ libxbase-2.0.0/bin/dumpdbt.cpp
@@ -53,7 +53,7 @@
    xbXBase x;
 
    if( ac <= 1 ){
-     cout << "\nUsage: dumpdbt filename...\n";
+     std::cout << "\nUsage: dumpdbt filename...\n";
      return 1;
    }
 
@@ -63,16 +63,16 @@
       
 
      if( dbf.OpenDatabase( filename )){
-        cout << "\nCant open input file " << filename;
+        std::cout << "\nCant open input file " << filename;
         return 2;
      }
   
-     cout << "\n\nFree Block Chain....";
+     std::cout << "\n\nFree Block Chain....";
 #ifdef XBASE_DEBUG
      dbf.DumpMemoFreeChain();
-     cout <<"\nEnd of free block chain\n***********************************";
+     std::cout <<"\nEnd of free block chain\n***********************************";
 #else
-     cout << "\nXBASE_DEBUG is not compiled in\n";
+     std::cout << "\nXBASE_DEBUG is not compiled in\n";
 #endif
 
    /* lock the memo file */
@@ -81,19 +81,19 @@
 #  endif /* XB_LOCKING_ON */
 
         if( !dbf.MemoFieldsPresent() ) {
-            cout << "No memo fields exist in " << filename << endl;
+            std::cout << "No memo fields exist in " << filename << std::endl;
         } else {
             xbLong BufSize = 0L;
             char* Buf = NULL;
             for( xbLong l = 1; l <= dbf.NoOfRecords(); l++ )
       {
          dbf.GetRecord( l );
-         cout << "\nRecord # " << dbf.GetCurRecNo();
+         std::cout << "\nRecord # " << dbf.GetCurRecNo();
                 for( int j = 0; j < dbf.FieldCount(); j++ ) {
                     if( dbf.GetFieldType( j ) == 'M' ) {
                         int len = dbf.GetMemoFieldLen( j );
-               cout << "\nMemo field " << dbf.GetFieldName(j) << " length = " << len;
-               cout << " Head Block = " << dbf.GetLongField( j ) << "\n";
+               std::cout << "\nMemo field " << dbf.GetFieldName(j) << " length = " << len;
+               std::cout << " Head Block = " << dbf.GetLongField( j ) << "\n";
                if( len > BufSize )
                {
                   if( BufSize ) free( Buf );
@@ -103,7 +103,7 @@
                }
                dbf.GetMemoField( j, len, Buf, F_SETLKW );
                         for( int i = 0; i < len; i++ )
-                  cout << Buf[i];
+                  std::cout << Buf[i];
             }
       }
    }
@@ -114,11 +114,11 @@
        dbf.LockMemoFile( F_SETLK, F_UNLCK );
 #  endif /* XB_LOCKING_ON */
 
-       cout << "\n";
+       std::cout << "\n";
        dbf.CloseDatabase();
      }
 #else
-     cout << "\nXB_MEMO_FIELDS is not compiled in\n";
+     std::cout << "\nXB_MEMO_FIELDS is not compiled in\n";
 #endif
    }
    return 0;
--- libxbase-2.0.0.orig/bin/undelall.cpp
+++ libxbase-2.0.0/bin/undelall.cpp
@@ -48,7 +48,7 @@
 int main(int ac,char** av)
 {
     if (ac <= 1) {
-        cout << 
+        std::cout << 
             "\nUsage: undelall filename...\n"
             "\nThis program does not automatically reindex any NDX indexes."
             "\nUse the reindex program to reindex any indexes associated"
@@ -66,18 +66,18 @@
    xbDbf MyFile( &x );
 
         if( MyFile.OpenDatabase( filename )) {
-      cout << "Could not open file " << filename << "\n";
+      std::cout << "Could not open file " << filename << "\n";
       return 0;
    }
 
         xbShort rc = MyFile.UndeleteAllRecords();
         if( rc != XB_NO_ERROR ) {
-      cout << "\nError undeleting records - database ==> " << filename;
-      cout << " Return Code = " << rc;
+      std::cout << "\nError undeleting records - database ==> " << filename;
+      std::cout << " Return Code = " << rc;
    }
    MyFile.CloseDatabase();	/* close database */
 
-   cout << "\nUndelete all records complete...\n\n";
+   std::cout << "\nUndelete all records complete...\n\n";
     }
     return 0;
 }     
--- libxbase-2.0.0.orig/bin/deletall.cpp
+++ libxbase-2.0.0/bin/deletall.cpp
@@ -48,7 +48,7 @@
 int main(int ac,char** av)
 {
     if (ac <= 1) {
-        cout <<
+        std::cout <<
             "\nUsage: deletall filename...\n"
             ;
         return 1;
@@ -61,18 +61,18 @@
    xbDbf MyFile( &x );
 
         if( MyFile.OpenDatabase( filename )) {
-      cout << "Could not open file " << filename << "\n";
+      std::cout << "Could not open file " << filename << "\n";
             return 2;
    }
 
         xbShort rc = MyFile.DeleteAllRecords(); 
         if( rc != XB_NO_ERROR ) {
-      cout << "\nError Deleting all records - database ==> " << filename;
-      cout << " Return Code = " << rc;
+      std::cout << "\nError Deleting all records - database ==> " << filename;
+      std::cout << " Return Code = " << rc;
    }
    MyFile.CloseDatabase();	/* close database */
 
-   cout << "\nDone...\n\n";
+   std::cout << "\nDone...\n\n";
     }
     
     return 0;
--- libxbase-2.0.0.orig/bin/dbfutil1.cpp
+++ libxbase-2.0.0/bin/dbfutil1.cpp
@@ -91,8 +91,8 @@
 void MyClass::DumpIndexNodes()
 {
   xbLong NodeCnt = ix->GetTotalNodes();
-  cout << "For NDX indices, output placed in xbase.log" << endl;
-  cout << "total nodes = " << NodeCnt << endl;
+  std::cout << "For NDX indices, output placed in xbase.log" << std::endl;
+  std::cout << "total nodes = " << NodeCnt << std::endl;
   ix->DumpHdrNode();
   if( NodeCnt > 1 )
     for( xbLong l = 1L; l <= NodeCnt-1; l++ )
@@ -103,8 +103,8 @@
 {
   int rc = 0;
   char Filename[51];
-  cout << "Enter index name: ";
-  cin >> Filename;
+  std::cout << "Enter index name: ";
+  std::cin >> Filename;
   if( strstr( Filename, "NDX" ) || strstr( Filename, "ndx" )){
     ix = new xbNdx( &d );
     rc = ix->OpenIndex( Filename );
@@ -115,56 +115,56 @@
   }
   else
   {
-    cout << "Invalid index name. Needs file extension. index.ndx or index.ntx" << endl;
+    std::cout << "Invalid index name. Needs file extension. index.ndx or index.ntx" << std::endl;
     return;
   }
-  cout << "Return code " << rc << endl;
+  std::cout << "Return code " << rc << std::endl;
 }    
 /************************************************************************/
 void MyClass::FindKey()
 {
   char KeyBuf[101];
   memset( KeyBuf, 0x00, 101 );
-  cout << "This function only works for character keys (so far).."<<endl;
-  cout << "Enter search key:" << endl;
-  cin >> KeyBuf;
-  cout <<  "Return code " << ix->FindKey( KeyBuf ) << endl;
+  std::cout << "This function only works for character keys (so far).."<<std::endl;
+  std::cout << "Enter search key:" << std::endl;
+  std::cin >> KeyBuf;
+  std::cout <<  "Return code " << ix->FindKey( KeyBuf ) << std::endl;
 }
 /************************************************************************/
 void MyClass::GetNextKey()
 {
-  cout << "Return code " << ix->GetNextKey() << endl;
+  std::cout << "Return code " << ix->GetNextKey() << std::endl;
 }
 /************************************************************************/
 void MyClass::GetPrevKey()
 {
-  cout << "Return code " << ix->GetPrevKey() << endl;
+  std::cout << "Return code " << ix->GetPrevKey() << std::endl;
 }
 /************************************************************************/
 void MyClass::GetFirstKey()
 {
-  cout << "Return code " << ix->GetFirstKey() << endl;
+  std::cout << "Return code " << ix->GetFirstKey() << std::endl;
 }
 /************************************************************************/
 void MyClass::GetLastKey()
 {
-  cout << "Return code " << ix->GetLastKey() << endl;
+  std::cout << "Return code " << ix->GetLastKey() << std::endl;
 }
 /************************************************************************/
 void MyClass::CloseIndex()
 {
-  cout << "Return code " << ix->CloseIndex() << endl;
+  std::cout << "Return code " << ix->CloseIndex() << std::endl;
 }
 /************************************************************************/
 /* stats */
 void MyClass::FileStats()
 {
-  cout << "Number of records   = " << d.NoOfRecords()       << endl;
-  cout << "Number of fields    = " << d.FieldCount()        << endl;
-  cout << "Database Status     = " << d.GetDbfStatus()      << endl;
-  cout << "Record Length       = " << d.GetRecordLen()      << endl;
-  cout << "Memo Fields Present = " << d.MemoFieldsPresent() << endl;
-  cout << "Current Record No   = " << d.GetCurRecNo()       << endl;
+  std::cout << "Number of records   = " << d.NoOfRecords()       << std::endl;
+  std::cout << "Number of fields    = " << d.FieldCount()        << std::endl;
+  std::cout << "Database Status     = " << d.GetDbfStatus()      << std::endl;
+  std::cout << "Record Length       = " << d.GetRecordLen()      << std::endl;
+  std::cout << "Memo Fields Present = " << d.MemoFieldsPresent() << std::endl;
+  std::cout << "Current Record No   = " << d.GetCurRecNo()       << std::endl;
 }  
 /************************************************************************/
 /* open database */
@@ -172,11 +172,11 @@
 {
   int rc;
   char filename[50];
-  cout << "Enter database file name: ";
-  cin >> filename;
+  std::cout << "Enter database file name: ";
+  std::cin >> filename;
 
   rc = d.OpenDatabase( filename );
-  cout << "Return Code " << rc << endl;
+  std::cout << "Return Code " << rc << std::endl;
 }
 /************************************************************************/
 /* close database */
@@ -184,7 +184,7 @@
 {
   int rc;
   rc = d.CloseDatabase();
-  cout << "Return Code " << rc << endl;
+  std::cout << "Return Code " << rc << std::endl;
 }
 /************************************************************************/
 /* convefrt database */
@@ -197,31 +197,31 @@
   char    *MemoFieldBuf = NULL;
   xbLong  MemoFieldLen = 0L;
 
-  cout << "Warning - check your results!!" << endl << endl;
+  std::cout << "Warning - check your results!!" << std::endl << std::endl;
 
   char filename[50];
-  cout << "Enter database file name to convert to: ";
-  cin >> filename;
+  std::cout << "Enter database file name to convert to: ";
+  std::cin >> filename;
 
   if(( rc = d2.OpenDatabase( filename )) != XB_NO_ERROR ){
-    cout << "Error " << rc << " opening database" << endl;
+    std::cout << "Error " << rc << " opening database" << std::endl;
     return;
   }
 
   rc = d.GetFirstRecord();
   FieldCnt = d.FieldCount();
-  cout << "Database has " << FieldCnt << " fields to convert" << endl;
+  std::cout << "Database has " << FieldCnt << " fields to convert" << std::endl;
   while( rc == XB_NO_ERROR )
   {
     d2.BlankRecord();
     for( xbShort i = 0; i < FieldCnt; i++ )
     {
       if(( FieldNo = d2.GetFieldNo( d.GetFieldName( i ))) == -1 )
-        cout << "Error converting field " << d.GetFieldName( i ) << endl;
+        std::cout << "Error converting field " << d.GetFieldName( i ) << std::endl;
       else 
       {
         if( d.GetFieldType( i ) != d2.GetFieldType( FieldNo ))
-          cout << "Error - different field types " << d.GetFieldName(i);
+          std::cout << "Error - different field types " << d.GetFieldName(i);
         else
         {
           if( d.GetFieldType( i ) == 'M' )
@@ -238,12 +238,12 @@
             d.GetMemoField( i, len, MemoFieldBuf, F_SETLKW );              
             d2.UpdateMemoData( FieldNo, len, MemoFieldBuf, F_SETLKW );
 #else
-           cout << "Memo fields not converted XB_MEMO_FIELDS not compiled in\n";
+           std::cout << "Memo fields not converted XB_MEMO_FIELDS not compiled in\n";
 #endif
           }
           else{
             if( d.GetFieldType(i) == 'N' ){
-                cout << "const code compile prob..." << endl;
+                std::cout << "const code compile prob..." << std::endl;
 
 //                d2.PutField( FieldNo, x.LTRIM( d.GetField( i )));
             }
@@ -263,33 +263,33 @@
 /************************************************************************/
 void MyClass::ShowFieldInfo()
 {
-  cout << "Number   Name        Type  Len  Decs" << endl;
+  std::cout << "Number   Name        Type  Len  Decs" << std::endl;
   for( int i = 0; i < d.FieldCount(); i++ ){
     printf( "%d     %-10s         %c     %5d   %d\n", i,
               d.GetFieldName(i), d.GetFieldType(i), d.GetFieldLen(i),
               d.GetFieldDecimal(i) );
     if(((i+1)%15) == 0 ){
-      cout << "Press a key to continue" << endl;
+      std::cout << "Press a key to continue" << std::endl;
       getchar();
-      cout << "Number   Name        Type  Len  Decs" << endl;
+      std::cout << "Number   Name        Type  Len  Decs" << std::endl;
     }
   } 
-  cout << "Press a key to continue" << endl;
+  std::cout << "Press a key to continue" << std::endl;
   getchar();
 }
 /************************************************************************/
 void MyClass::ShowFieldData()
 {
-  cout << "Name      Data" << endl;
+  std::cout << "Name      Data" << std::endl;
   for( int i = 0; i < d.FieldCount(); i++ ){
     printf( "%-10s = %s\n", d.GetFieldName(i), d.GetStringField(i));
     if(((i+1)%15) == 0 ){
-      cout << "Press a key to continue" << endl;
+      std::cout << "Press a key to continue" << std::endl;
       getchar();
-      cout << "Name      Data" << endl;
+      std::cout << "Name      Data" << std::endl;
     }
   }
-  cout << "Press a key to continue" << endl;
+  std::cout << "Press a key to continue" << std::endl;
   getchar();
    
 }
@@ -299,13 +299,13 @@
   char dbuf[100];
   int rc, fn;
 
-  cout  << "Enter Field Number to update (first field is 0): " << endl;
-  cin   >> fn;
-  cout  << "Enter Field Data" << endl;
-  cin   >> dbuf;
+  std::cout  << "Enter Field Number to update (first field is 0): " << std::endl;
+  std::cin   >> fn;
+  std::cout  << "Enter Field Data" << std::endl;
+  std::cin   >> dbuf;
   rc = d.PutField( fn, dbuf );
   
-  cout << "Return Code " << rc << endl;
+  std::cout << "Return Code " << rc << std::endl;
 }
 /************************************************************************/
 /* open database */
@@ -314,27 +314,27 @@
   xbNdx n(&d);
   int rc;
   char filename[50];
-  cout << "Enter index file name: ";
-  cin >> filename;
+  std::cout << "Enter index file name: ";
+  std::cin >> filename;
 
   if(( rc = n.OpenIndex( filename )) != XB_NO_ERROR ){
-    cout << "Error " << rc << " Opening index" << endl;
+    std::cout << "Error " << rc << " Opening index" << std::endl;
     return;
   }
 
   if(( rc = n.ReIndex()) != XB_NO_ERROR )
-    cout << "Error " << rc << " Reindexing database" << endl;
+    std::cout << "Error " << rc << " Reindexing database" << std::endl;
 }
 /************************************************************************/
 void MyClass::GetRecord()
 {
   int rc;
   xbLong RecNo;
-  cout << "Enter record number: ";
-  cin >> RecNo;
+  std::cout << "Enter record number: ";
+  std::cin >> RecNo;
 
   rc = d.GetRecord( RecNo );
-  cout << "Return Code = " << rc << endl;
+  std::cout << "Return Code = " << rc << std::endl;
 }
 /************************************************************************/
 void MyClass::UpdateMemoField()
@@ -345,31 +345,31 @@
   char bufchar[2];
   char *buf;
 
-  cout << "Enter Field Number: " << endl;
-  cin >> fn;
+  std::cout << "Enter Field Number: " << std::endl;
+  std::cin >> fn;
   if( fn < 0 || fn > d.FieldCount()){
-    cout << "Invalid Field Number" << endl;
+    std::cout << "Invalid Field Number" << std::endl;
     return;
   }
   if( d.GetFieldType( fn ) != 'M' ){
-    cout << "Field " << fn << " is not a memo field" << endl;
-    cout << "Field Name = " << d.GetFieldName( fn ) << " type= ";
-    cout << d.GetFieldType( fn ) << endl;
+    std::cout << "Field " << fn << " is not a memo field" << std::endl;
+    std::cout << "Field Name = " << d.GetFieldName( fn ) << " type= ";
+    std::cout << d.GetFieldType( fn ) << std::endl;
     return;
   }
-  cout << "Enter length of memo data:" << endl;
-  cin >> len;
+  std::cout << "Enter length of memo data:" << std::endl;
+  std::cin >> len;
  
-  cout << "Enter character to populate memo data:" << endl;
-  cin >> bufchar;
+  std::cout << "Enter character to populate memo data:" << std::endl;
+  std::cin >> bufchar;
 
   buf = new char[len];
   memset( buf, bufchar[0], len );
 
   rc = d.UpdateMemoData( fn, len, buf, F_SETLKW );
-  cout << "Return Code = " << rc << endl;
+  std::cout << "Return Code = " << rc << std::endl;
 #else
-  cout << "\nXB_MEMO_FIELDS is not compiled in\n";
+  std::cout << "\nXB_MEMO_FIELDS is not compiled in\n";
 #endif
 }
 /************************************************************************/
@@ -377,22 +377,22 @@
 {
 #ifdef XB_MEMO_FIELDS
   xbShort fn,rc;
-  cout << "Enter Field Number: " << endl;
-  cin >> fn;
+  std::cout << "Enter Field Number: " << std::endl;
+  std::cin >> fn;
   if( fn < 0 || fn > d.FieldCount()){
-    cout << "Invalid Field Number" << endl;
+    std::cout << "Invalid Field Number" << std::endl;
     return;
   }
   if( d.GetFieldType( fn ) != 'M' ){
-    cout << "Field " << fn << " is not a memo field" << endl;
-    cout << "Field Name = " << d.GetFieldName( fn ) << " type= ";
-    cout << d.GetFieldType( fn ) << endl;
+    std::cout << "Field " << fn << " is not a memo field" << std::endl;
+    std::cout << "Field Name = " << d.GetFieldName( fn ) << " type= ";
+    std::cout << d.GetFieldType( fn ) << std::endl;
     return;
   }
   rc = d.UpdateMemoData( fn, 0, 0, F_SETLKW );
-  cout << "Return Code = " << rc << endl;
+  std::cout << "Return Code = " << rc << std::endl;
 #else
-  cout << "\nXB_MEMO_FIELDS is not compiled in\n";
+  std::cout << "\nXB_MEMO_FIELDS is not compiled in\n";
 #endif
 }
 /************************************************************************/
@@ -409,12 +409,12 @@
      probably not to useful for anything else - Gary */
 
   rc = d.DumpMemoFreeChain();
-  cout << "\nFuncion Return Code = " << rc << endl;
+  std::cout << "\nFuncion Return Code = " << rc << std::endl;
 #else
-  cout << "\nXBASE_DEBUG is not compiled in\n";
+  std::cout << "\nXBASE_DEBUG is not compiled in\n";
 #endif
 #else
-  cout << "\nXB_MEMO_FIELDS is not compiled in\n";
+  std::cout << "\nXB_MEMO_FIELDS is not compiled in\n";
 #endif
 }
 /************************************************************************/
@@ -424,16 +424,16 @@
   xbLong BlocksNeeded, Location, PrevNode;
   int rc;
 
-  cout << "Enter number of blocks: " << endl;
-  cin  >> BlocksNeeded;
-  cout << "Enter starting location: " << endl;
-  cin  >> Location;
-  cout << "Enter previous node: " << endl;
-  cin  >> PrevNode;
+  std::cout << "Enter number of blocks: " << std::endl;
+  std::cin  >> BlocksNeeded;
+  std::cout << "Enter starting location: " << std::endl;
+  std::cin  >> Location;
+  std::cout << "Enter previous node: " << std::endl;
+  std::cin  >> PrevNode;
   rc = d.GetBlockSetFromChain( BlocksNeeded, Location, PrevNode );
-  cout << "Return code = " << rc << endl;
+  std::cout << "Return code = " << rc << std::endl;
 #else
-  cout << "\nXB_MEMO_FIELDS is not compiled in\n";
+  std::cout << "\nXB_MEMO_FIELDS is not compiled in\n";
 #endif
 }
 /************************************************************************/
@@ -443,14 +443,14 @@
   xbLong BlocksNeeded, Location, PrevNode;
   int rc;
 
-  cout << "Enter number of blocks: " << endl;
-  cin  >> BlocksNeeded;
+  std::cout << "Enter number of blocks: " << std::endl;
+  std::cin  >> BlocksNeeded;
   rc = d.FindBlockSetInChain( BlocksNeeded, 0, Location, PrevNode );
-  cout << "Return code = " << rc << endl;
-  cout << "Location = " << Location << endl;
-  cout << "Previous Node = " << PrevNode << endl;
+  std::cout << "Return code = " << rc << std::endl;
+  std::cout << "Location = " << Location << std::endl;
+  std::cout << "Previous Node = " << PrevNode << std::endl;
 #else
-  cout << "\nXB_MEMO_FIELDS is not compiled in\n";
+  std::cout << "\nXB_MEMO_FIELDS is not compiled in\n";
 #endif
 }
 #endif   // XBASE_DEBUG
@@ -460,18 +460,18 @@
   int option = 0;
 
   while( option != 99 ) {
-   cout << endl << endl << "NDX and NTX Index Menu" << endl;
-   cout << "This program only supports one index at a time" << endl;
-   cout << "1 - Open Index" << endl;
-   cout << "2 - Find Key" << endl;
-   cout << "3 - Get First Key" << endl;
-   cout << "4 - Get Last Key" << endl;
-   cout << "5 - Get Previous Key" << endl;
-   cout << "6 - Get Next Key" << endl;
-   cout << "7 - Close Index" << endl;
+   std::cout << std::endl << std::endl << "NDX and NTX Index Menu" << std::endl;
+   std::cout << "This program only supports one index at a time" << std::endl;
+   std::cout << "1 - Open Index" << std::endl;
+   std::cout << "2 - Find Key" << std::endl;
+   std::cout << "3 - Get First Key" << std::endl;
+   std::cout << "4 - Get Last Key" << std::endl;
+   std::cout << "5 - Get Previous Key" << std::endl;
+   std::cout << "6 - Get Next Key" << std::endl;
+   std::cout << "7 - Close Index" << std::endl;
    
-   cout << "99 - Exit Menu" << endl;
-   cin >> option;
+   std::cout << "99 - Exit Menu" << std::endl;
+   std::cin >> option;
    switch( option ){
     case 1:  OpenIndex();  break;
     case 2:  FindKey(); break;
@@ -481,7 +481,7 @@
     case 6:  GetNextKey();  break;
     case 7:  CloseIndex();     break;    
     case 99: break;
-    default: cout << "Invalid option" << endl; break;
+    default: std::cout << "Invalid option" << std::endl; break;
    }
   }
 }
@@ -492,20 +492,20 @@
   int option = 0;
 
   while( option != 99 ) {
-   cout << endl << endl << "Debug Menu" << endl;
-   cout << "1 - Dislay DBT Header" << endl;
-   cout << "2 - Find Memo Blocks" << endl;
-   cout << "3 - Get Memo Blocks" << endl;
-   cout << "4 - Dump index node chains to file xbase.dmp" << endl;
-   cout << "99 - Exit Menu" << endl;
-   cin >> option;
+   std::cout << std::endl << std::endl << "Debug Menu" << std::endl;
+   std::cout << "1 - Dislay DBT Header" << std::endl;
+   std::cout << "2 - Find Memo Blocks" << std::endl;
+   std::cout << "3 - Get Memo Blocks" << std::endl;
+   std::cout << "4 - Dump index node chains to file xbase.dmp" << std::endl;
+   std::cout << "99 - Exit Menu" << std::endl;
+   std::cin >> option;
    switch( option ){
     case 1:  DumpDbtHeader();  break;
     case 2:  FindMemoBlocks(); break;
     case 3:  GetMemoBlocks();  break;
     case 4:  DumpIndexNodes(); break;
     case 99: break;
-    default: cout << "Invalid option" << endl; break;
+    default: std::cout << "Invalid option" << std::endl; break;
    }
   }
 }
@@ -514,10 +514,10 @@
 void MyClass::PutRecord()
 {
   xbLong l;
-  cout << "Enter Record number for PutRecord()" << endl;
-  cin >> l;
+  std::cout << "Enter Record number for PutRecord()" << std::endl;
+  std::cin >> l;
   int rc = d.PutRecord( l );
-  cout << "Return Code " << rc << endl;
+  std::cout << "Return Code " << rc << std::endl;
 }
 /************************************************************************/
 void MyClass::FieldMenu()
@@ -525,14 +525,14 @@
   int option = 0;
 
   while( option != 99 ) {
-   cout << endl << endl << "Field Menu" << endl;
-   cout << "1  - Delete Memo Field" << endl;
-   cout << "2  - Update Memo Field" << endl;
-   cout << "3  - Show Field Info"   << endl;
-   cout << "4  - Show Field Data"   << endl;
-   cout << "5  - Update Field Data" << endl;
-   cout << "99 - Exit Menu" << endl;
-   cin >> option;
+   std::cout << std::endl << std::endl << "Field Menu" << std::endl;
+   std::cout << "1  - Delete Memo Field" << std::endl;
+   std::cout << "2  - Update Memo Field" << std::endl;
+   std::cout << "3  - Show Field Info"   << std::endl;
+   std::cout << "4  - Show Field Data"   << std::endl;
+   std::cout << "5  - Update Field Data" << std::endl;
+   std::cout << "99 - Exit Menu" << std::endl;
+   std::cin >> option;
    switch( option ){
     case 1:  DeleteMemoField(); break;
     case 2:  UpdateMemoField(); break;
@@ -540,7 +540,7 @@
     case 4:  ShowFieldData();   break;
     case 5:  UpdateFieldData(); break;
     case 99: break;
-    default: cout << "Function not available" << endl; break;
+    default: std::cout << "Function not available" << std::endl; break;
    }
  }
 }
@@ -548,20 +548,20 @@
 void MyClass::RecordMenu()
 {
   int option = 0;
-  cout << "File Menu" << endl;
+  std::cout << "File Menu" << std::endl;
   while( option != 99 ) {
-   cout << endl << endl << "Record Menu" << endl;
-   cout << "1  - Get Record" << endl;
-   cout << "2  - Blank Record" << endl;
-   cout << "3  - Append Record" << endl;
-   cout << "4  - Put Record" << endl;
-   cout << "99 - Exit Menu" << endl;
-   cin >> option;
+   std::cout << std::endl << std::endl << "Record Menu" << std::endl;
+   std::cout << "1  - Get Record" << std::endl;
+   std::cout << "2  - Blank Record" << std::endl;
+   std::cout << "3  - Append Record" << std::endl;
+   std::cout << "4  - Put Record" << std::endl;
+   std::cout << "99 - Exit Menu" << std::endl;
+   std::cin >> option;
    switch( option ){
     case 1:  GetRecord(); break;
     case 4:  PutRecord(); break;
     case 99: break;
-    default: cout << "Invalid option" << endl; break;
+    default: std::cout << "Invalid option" << std::endl; break;
    }
   }
 }
@@ -571,13 +571,13 @@
   int option = 0;
 
   while( option != 99 ) {
-   cout << endl << endl << "File Menu" << endl;
-   cout << "1  - Open File" << endl;
-   cout << "2  - Close File" << endl;
-   cout << "3  - File Stats" << endl;
-   cout << "4  - Convert Database" << endl; 
-   cout << "99 - Exit Menu" << endl;
-   cin  >> option;
+   std::cout << std::endl << std::endl << "File Menu" << std::endl;
+   std::cout << "1  - Open File" << std::endl;
+   std::cout << "2  - Close File" << std::endl;
+   std::cout << "3  - File Stats" << std::endl;
+   std::cout << "4  - Convert Database" << std::endl; 
+   std::cout << "99 - Exit Menu" << std::endl;
+   std::cin  >> option;
 
    switch( option ){
     case 1:  OpenFile();  break;
@@ -585,7 +585,7 @@
     case 3:  FileStats(); break;
     case 4:  ConvertDatabase(); break;
     case 99: break;
-    default: cout << "Invalid Option" << endl;
+    default: std::cout << "Invalid Option" << std::endl;
    }
  }
 }
@@ -593,18 +593,18 @@
 void MyClass::MainMenu()
 {
   int option = 0;
-  cout << endl<< endl << "XBase Utility Program";
+  std::cout << std::endl<< std::endl << "XBase Utility Program";
   while( option != 99 ) {
-   cout << endl << endl << "Main Menu" << endl;
-   cout << "1  - File Menu" << endl;
-   cout << "2  - Record Menu" << endl; 
-   cout << "3  - Field Menu" << endl;
-   cout << "4  - Index Menu" << endl;
+   std::cout << std::endl << std::endl << "Main Menu" << std::endl;
+   std::cout << "1  - File Menu" << std::endl;
+   std::cout << "2  - Record Menu" << std::endl; 
+   std::cout << "3  - Field Menu" << std::endl;
+   std::cout << "4  - Index Menu" << std::endl;
 #ifdef XBASE_DEBUG
-   cout << "5  - Debug Menu" << endl;
+   std::cout << "5  - Debug Menu" << std::endl;
 #endif
-   cout << "99 - Exit" << endl;
-   cin >> option;
+   std::cout << "99 - Exit" << std::endl;
+   std::cin >> option;
    switch( option ){
      case 1:  FileMenu();   break;
      case 2:  RecordMenu(); break;
@@ -613,8 +613,8 @@
 #ifdef XBASE_DEBUG
      case 5:  DebugMenu();  break;
 #endif
-     case 99: cout << "Bye!! - Thanks for using XBase" << endl; break;
-     default: cout << "Invalid function" << endl; break;
+     case 99: std::cout << "Bye!! - Thanks for using XBase" << std::endl; break;
+     default: std::cout << "Invalid function" << std::endl; break;
    }
   }
 }
