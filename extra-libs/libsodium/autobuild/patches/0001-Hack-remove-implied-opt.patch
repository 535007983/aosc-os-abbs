diff -Naur libsodium-1.0.15/configure.ac libsodium-1.0.15.flags/configure.ac
--- libsodium-1.0.15/configure.ac	2017-10-01 15:13:13.000000000 +0000
+++ libsodium-1.0.15.flags/configure.ac	2017-10-19 20:08:17.561519713 +0000
@@ -161,15 +161,6 @@
   ])
 ])
 
-AC_ARG_ENABLE(opt,
-[AS_HELP_STRING(--enable-opt,Optimize for the native CPU - The resulting library will be faster but not portable)],
-[
-  AS_IF([test "x$enableval" = "xyes"], [
-    AX_CHECK_COMPILE_FLAG([-Ofast], [CFLAGS="$CFLAGS -Ofast"])
-    AX_CHECK_COMPILE_FLAG([-march=native], [CFLAGS="$CFLAGS -march=native"])
-  ])
-])
-
 AC_SUBST([MAINT])
 
 AX_VALGRIND_CHECK
@@ -333,180 +324,6 @@
 
 dnl Checks for headers
 
-AS_IF([test "x$EMSCRIPTEN" = "x" -a "$host_os" != "pnacl"], [
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-mmmx], [CFLAGS="$CFLAGS -mmmx"])
-  AC_MSG_CHECKING(for MMX instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#pragma GCC target("mmx")
-#include <mmintrin.h>
-]], [[ __m64 x = _mm_setzero_si64(); ]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_MMINTRIN_H], [1], [mmx is available])
-     AX_CHECK_COMPILE_FLAG([-mmmx], [CFLAGS_MMX="-mmmx"])],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-msse2], [CFLAGS="$CFLAGS -msse2"])
-  AC_MSG_CHECKING(for SSE2 instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#pragma GCC target("sse2")
-#ifndef __SSE2__
-# define __SSE2__
-#endif
-#include <emmintrin.h>
-]], [[ __m128d x = _mm_setzero_pd();
-       __m128i z = _mm_srli_epi64(_mm_setzero_si128(), 26); ]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_EMMINTRIN_H], [1], [sse2 is available])
-     AX_CHECK_COMPILE_FLAG([-msse2], [CFLAGS_SSE2="-msse2"])],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-msse3], [CFLAGS="$CFLAGS -msse3"])
-  AC_MSG_CHECKING(for SSE3 instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#pragma GCC target("sse3")
-#include <pmmintrin.h>
-]], [[ __m128 x = _mm_addsub_ps(_mm_cvtpd_ps(_mm_setzero_pd()),
-                                _mm_cvtpd_ps(_mm_setzero_pd())); ]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_PMMINTRIN_H], [1], [sse3 is available])
-     AX_CHECK_COMPILE_FLAG([-msse3], [CFLAGS_SSE3="-msse3"])],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-mssse3], [CFLAGS="$CFLAGS -mssse3"])
-  AC_MSG_CHECKING(for SSSE3 instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#pragma GCC target("ssse3")
-#include <tmmintrin.h>
-]], [[ __m64 x = _mm_abs_pi32(_m_from_int(0)); ]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_TMMINTRIN_H], [1], [ssse3 is available])
-     AX_CHECK_COMPILE_FLAG([-mssse3], [CFLAGS_SSSE3="-mssse3"])],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-msse4.1], [CFLAGS="$CFLAGS -msse4.1"])
-  AC_MSG_CHECKING(for SSE4.1 instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#pragma GCC target("sse4.1")
-#include <smmintrin.h>
-]], [[ __m128i x = _mm_minpos_epu16(_mm_setzero_si128()); ]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_SMMINTRIN_H], [1], [sse4.1 is available])
-     AX_CHECK_COMPILE_FLAG([-msse4.1], [CFLAGS_SSE41="-msse4.1"])],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-mavx], [CFLAGS="$CFLAGS -mavx"])
-  AC_MSG_CHECKING(for AVX instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#ifdef __native_client__
-# error NativeClient detected - Avoiding AVX opcodes
-#endif
-#pragma GCC target("avx")
-#include <immintrin.h>
-]], [[ _mm256_zeroall(); ]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_AVXINTRIN_H], [1], [AVX is available])
-     AX_CHECK_COMPILE_FLAG([-mavx], [CFLAGS_AVX="-mavx"])],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-mavx2], [CFLAGS="$CFLAGS -mavx2"])
-  AC_MSG_CHECKING(for AVX2 instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#ifdef __native_client__
-# error NativeClient detected - Avoiding AVX2 opcodes
-#endif
-#pragma GCC target("avx2")
-#include <immintrin.h>
-]], [[
-__m256 x = _mm256_set1_ps(3.14);
-__m256 y = _mm256_permutevar8x32_ps(x, _mm256_set1_epi32(42));
-return _mm256_movemask_ps(_mm256_cmp_ps(x, y, _CMP_NEQ_OQ));
-]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_AVX2INTRIN_H], [1], [AVX2 is available])
-     AX_CHECK_COMPILE_FLAG([-mavx2], [CFLAGS_AVX2="-mavx2"])
-     AC_MSG_CHECKING(if _mm256_broadcastsi128_si256 is correctly defined)
-     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#ifdef __native_client__
-# error NativeClient detected - Avoiding AVX2 opcodes
-#endif
-#pragma GCC target("avx2")
-#include <immintrin.h>
-     ]], [[ __m256i y = _mm256_broadcastsi128_si256(_mm_setzero_si128()); ]])],
-       [AC_MSG_RESULT(yes)],
-       [AC_MSG_RESULT(no)
-        AC_DEFINE([_mm256_broadcastsi128_si256], [_mm_broadcastsi128_si256],
-                  [Define to the local name of _mm256_broadcastsi128_si256])])
-     ],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-mavx512f], [CFLAGS="$CFLAGS -mavx512f"])
-  AC_MSG_CHECKING(for AVX512F instructions set)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#ifdef __native_client__
-# error NativeClient detected - Avoiding AVX512F opcodes
-#endif
-#pragma GCC target("avx512f")
-#include <immintrin.h>
-]], [[
-__m512i x = _mm512_setzero_epi32();
-__m512i y = _mm512_permutexvar_epi64(_mm512_setr_epi64(0, 1, 4, 5, 2, 3, 6, 7), x);
-]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_AVX512FINTRIN_H], [1], [AVX512F is available])
-     AX_CHECK_COMPILE_FLAG([-mavx512f], [CFLAGS_AVX512F="-mavx512f"])],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  AX_CHECK_COMPILE_FLAG([-maes], [CFLAGS="$CFLAGS -maes"])
-  AX_CHECK_COMPILE_FLAG([-mpclmul], [CFLAGS="$CFLAGS -mpclmul"])
-  AC_MSG_CHECKING(for AESNI instructions set and PCLMULQDQ)
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#ifdef __native_client__
-# error NativeClient detected - Avoiding AESNI opcodes
-#endif
-#pragma GCC target("aes")
-#pragma GCC target("pclmul")
-#include <wmmintrin.h>
-]], [[ __m128i x = _mm_aesimc_si128(_mm_setzero_si128());
-       __m128i y = _mm_clmulepi64_si128(_mm_setzero_si128(), _mm_setzero_si128(), 0);]])],
-    [AC_MSG_RESULT(yes)
-     AC_DEFINE([HAVE_WMMINTRIN_H], [1], [aesni is available])
-     AX_CHECK_COMPILE_FLAG([-maes], [CFLAGS_AESNI="-maes"])
-     AX_CHECK_COMPILE_FLAG([-mpclmul], [CFLAGS_PCLMUL="-mpclmul"])
-     ],
-    [AC_MSG_RESULT(no)])
-  CFLAGS="$oldcflags"
-
-])
-
-AC_SUBST(CFLAGS_MMX)
-AC_SUBST(CFLAGS_SSE2)
-AC_SUBST(CFLAGS_SSE3)
-AC_SUBST(CFLAGS_SSSE3)
-AC_SUBST(CFLAGS_SSE41)
-AC_SUBST(CFLAGS_AVX)
-AC_SUBST(CFLAGS_AVX2)
-AC_SUBST(CFLAGS_AVX512F)
-AC_SUBST(CFLAGS_AESNI)
-AC_SUBST(CFLAGS_PCLMUL)
-
 AC_CHECK_HEADERS([sys/mman.h intrin.h])
 
 AC_MSG_CHECKING([if _xgetbv() is available])
diff -Naur libsodium-1.0.15/src/libsodium/Makefile.am libsodium-1.0.15.flags/src/libsodium/Makefile.am
--- libsodium-1.0.15/src/libsodium/Makefile.am	2017-10-01 15:13:13.000000000 +0000
+++ libsodium-1.0.15.flags/src/libsodium/Makefile.am	2017-10-19 20:09:27.594140723 +0000
@@ -202,14 +202,12 @@
 noinst_LTLIBRARIES =  libaesni.la libsse2.la libssse3.la libsse41.la libavx2.la libavx512f.la
 
 libaesni_la_LDFLAGS = $(libsodium_la_LDFLAGS)
-libaesni_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_AESNI@ @CFLAGS_PCLMUL@
+libaesni_la_CPPFLAGS = $(libsodium_la_CPPFLAGS)
 libaesni_la_SOURCES = \
 	crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c
 
 libsse2_la_LDFLAGS = $(libsodium_la_LDFLAGS)
-libsse2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSE2@
+libsse2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS)
 libsse2_la_SOURCES = \
 	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c \
 	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h
@@ -228,8 +226,7 @@
 endif
 
 libssse3_la_LDFLAGS = $(libsodium_la_LDFLAGS)
-libssse3_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSE2@ @CFLAGS_SSSE3@
+libssse3_la_CPPFLAGS = $(libsodium_la_CPPFLAGS)
 libssse3_la_SOURCES = \
 	crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c \
 	crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h \
@@ -242,15 +239,13 @@
 	crypto_stream/chacha20/dolbeau/u4.h
 
 libsse41_la_LDFLAGS = $(libsodium_la_LDFLAGS)
-libsse41_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@
+libsse41_la_CPPFLAGS = $(libsodium_la_CPPFLAGS)
 libsse41_la_SOURCES = \
 	crypto_generichash/blake2b/ref/blake2b-compress-sse41.c \
 	crypto_generichash/blake2b/ref/blake2b-compress-sse41.h
 
 libavx2_la_LDFLAGS = $(libsodium_la_LDFLAGS)
-libavx2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@ @CFLAGS_AVX@ @CFLAGS_AVX2@
+libavx2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS)
 libavx2_la_SOURCES = \
 	crypto_generichash/blake2b/ref/blake2b-compress-avx2.c \
 	crypto_generichash/blake2b/ref/blake2b-compress-avx2.h \
@@ -267,8 +262,7 @@
 	crypto_stream/salsa20/xmm6int/u8.h
 
 libavx512f_la_LDFLAGS = $(libsodium_la_LDFLAGS)
-libavx512f_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@ @CFLAGS_AVX@ @CFLAGS_AVX2@ @CFLAGS_AVX512F@
+libavx512f_la_CPPFLAGS = $(libsodium_la_CPPFLAGS)
 libavx512f_la_SOURCES = \
 	crypto_pwhash/argon2/argon2-fill-block-avx512f.c \
 	crypto_pwhash/argon2/blamka-round-avx512f.h
