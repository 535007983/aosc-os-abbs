From dfb7d2ba3db8131cd348800c8d91df11bf930324 Mon Sep 17 00:00:00 2001
From: Nikolaus Rath <Nikolaus@rath.org>
Date: Mon, 2 Jul 2018 17:03:27 +0100
Subject: [PATCH] Drop all -Werror from release flags.

In the past, all resulting errors have been lack of explicit casts
in Cython generated code. As long as we continue to enable -Werror
when compiling in developer mode, the likelihood of finding bugs in
python-llfuse itself that only manifest on other people's systems
seems small.

In contrast, newer GCC versions and (in case of e.g. Debian) newer
Cython versions often break compilation without good reason.
---
 setup.py | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/setup.py b/setup.py
index 0d5fe88..f2a825a 100755
--- a/setup.py
+++ b/setup.py
@@ -87,14 +87,6 @@ def main():
     # Due to platform specific conditions, these are unavoidable
     compile_args.append('-Wno-unused-parameter')
 
-    # Value-changing conversions should always be explicit.
-    compile_args.append('-Werror=conversion')
-
-    # Note that (i > -1) is false if i is unsigned (-1 will be converted to
-    # a large positive value). We certainly don't want to do this by
-    # accident.
-    compile_args.append('-Werror=sign-compare')
-
     # Enable all fatal warnings only when compiling from Mercurial tip.
     # (otherwise we break forward compatibility because compilation with newer
     # compiler may fail if additional warnings are added)
@@ -106,6 +98,14 @@ def main():
         # platforms and architectures.
         compile_args.append('-Wno-error=unreachable-code')
 
+        # Value-changing conversions should always be explicit.
+        compile_args.append('-Werror=conversion')
+
+        # Note that (i > -1) is false if i is unsigned (-1 will be converted to
+        # a large positive value). We certainly don't want to do this by
+        # accident.
+        compile_args.append('-Werror=sign-compare')
+
     # http://bugs.python.org/issue7576
     if sys.version_info[0] == 3 and sys.version_info[1] < 2:
         compile_args.append('-Wno-error=missing-field-initializers')

