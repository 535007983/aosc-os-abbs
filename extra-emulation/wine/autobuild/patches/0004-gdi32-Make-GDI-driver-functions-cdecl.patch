From 4a902de213d3f4137948f5b9938b7fb001b78de1 Mon Sep 17 00:00:00 2001
From: Alexandre Julliard <julliard@winehq.org>
Date: Sat, 6 Jul 2019 20:45:50 +0200
Subject: [PATCH 4/5] gdi32: Make GDI driver functions cdecl.

Signed-off-by: Alexandre Julliard <julliard@winehq.org>
---
 dlls/gdi32/bitblt.c                  |  18 +-
 dlls/gdi32/clipping.c                |   8 +-
 dlls/gdi32/dc.c                      |   4 +-
 dlls/gdi32/dib.c                     |  12 +-
 dlls/gdi32/dibdrv/bitblt.c           |  26 +--
 dlls/gdi32/dibdrv/dc.c               | 110 ++++++------
 dlls/gdi32/dibdrv/dibdrv.h           |  96 +++++-----
 dlls/gdi32/dibdrv/graphics.c         |  58 +++---
 dlls/gdi32/dibdrv/objects.c          |   8 +-
 dlls/gdi32/dibdrv/opengl.c           |   4 +-
 dlls/gdi32/driver.c                  | 186 +++++++++----------
 dlls/gdi32/enhmfdrv/bitblt.c         |  18 +-
 dlls/gdi32/enhmfdrv/dc.c             | 136 +++++++-------
 dlls/gdi32/enhmfdrv/enhmetafiledrv.h | 188 +++++++++----------
 dlls/gdi32/enhmfdrv/graphics.c       |  72 ++++----
 dlls/gdi32/enhmfdrv/init.c           |   4 +-
 dlls/gdi32/enhmfdrv/objects.c        |  18 +-
 dlls/gdi32/font.c                    |   6 +-
 dlls/gdi32/freetype.c                |  46 ++---
 dlls/gdi32/gdi_private.h             | 114 ++++++------
 dlls/gdi32/mapping.c                 |  22 +--
 dlls/gdi32/mfdrv/bitblt.c            |  20 +--
 dlls/gdi32/mfdrv/dc.c                |  74 ++++----
 dlls/gdi32/mfdrv/graphics.c          |  48 ++---
 dlls/gdi32/mfdrv/init.c              |  18 +-
 dlls/gdi32/mfdrv/metafiledrv.h       | 160 ++++++++---------
 dlls/gdi32/mfdrv/objects.c           |  14 +-
 dlls/gdi32/mfdrv/text.c              |   4 +-
 dlls/gdi32/painting.c                |  20 +--
 dlls/gdi32/palette.c                 |   6 +-
 dlls/gdi32/path.c                    |  82 ++++-----
 dlls/wineandroid.drv/init.c          |  10 +-
 dlls/winemac.drv/display.c           |   4 +-
 dlls/winemac.drv/gdi.c               |  10 +-
 dlls/winemac.drv/macdrv.h            |   8 +-
 dlls/winemac.drv/opengl.c            |   2 +-
 dlls/winemac.drv/vulkan.c            |   2 +-
 dlls/wineps.drv/bitblt.c             |   2 +-
 dlls/wineps.drv/bitmap.c             |   6 +-
 dlls/wineps.drv/brush.c              |   4 +-
 dlls/wineps.drv/builtin.c            |   8 +-
 dlls/wineps.drv/color.c              |   4 +-
 dlls/wineps.drv/driver.c             |  10 +-
 dlls/wineps.drv/escape.c             |  12 +-
 dlls/wineps.drv/font.c               |   2 +-
 dlls/wineps.drv/graphics.c           |  40 ++---
 dlls/wineps.drv/init.c               |  12 +-
 dlls/wineps.drv/pen.c                |   4 +-
 dlls/wineps.drv/psdrv.h              |  94 +++++-----
 dlls/wineps.drv/text.c               |   4 +-
 dlls/winex11.drv/bitblt.c            |  16 +-
 dlls/winex11.drv/brush.c             |   4 +-
 dlls/winex11.drv/graphics.c          |  50 +++---
 dlls/winex11.drv/init.c              |  22 +--
 dlls/winex11.drv/palette.c           |  10 +-
 dlls/winex11.drv/pen.c               |   4 +-
 dlls/winex11.drv/x11drv.h            |  88 ++++-----
 dlls/winex11.drv/xrender.c           |  46 ++---
 dlls/winex11.drv/xvidmode.c          |   4 +-
 include/wine/gdi_driver.h            | 260 +++++++++++++--------------
 60 files changed, 1171 insertions(+), 1171 deletions(-)

diff --git a/dlls/gdi32/bitblt.c b/dlls/gdi32/bitblt.c
index abca82245a..d46d7bada4 100644
--- a/dlls/gdi32/bitblt.c
+++ b/dlls/gdi32/bitblt.c
@@ -274,8 +274,8 @@ void get_mono_dc_colors( DC *dc, int color_table_size, BITMAPINFO *info, int cou
  *           null driver fallback implementations
  */
 
-BOOL nulldrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                         PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
+BOOL CDECL nulldrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                               PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
 {
     DC *dc_src = get_physdev_dc( src_dev ), *dc_dst = get_nulldrv_dc( dst_dev );
     char src_buffer[FIELD_OFFSET( BITMAPINFO, bmiColors[256] )];
@@ -326,8 +326,8 @@ BOOL nulldrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
 }
 
 
-BOOL nulldrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                         PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION func )
+BOOL CDECL nulldrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                               PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION func )
 {
     DC *dc_src = get_physdev_dc( src_dev ), *dc_dst = get_nulldrv_dc( dst_dev );
     char src_buffer[FIELD_OFFSET( BITMAPINFO, bmiColors[256] )];
@@ -365,8 +365,8 @@ done:
 }
 
 
-DWORD nulldrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
-                          struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION blend )
+DWORD CDECL nulldrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
+                                struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION blend )
 {
     char buffer[FIELD_OFFSET( BITMAPINFO, bmiColors[256] )];
     BITMAPINFO *dst_info = (BITMAPINFO *)buffer;
@@ -414,8 +414,8 @@ update_format:
     return ERROR_BAD_FORMAT;
 }
 
-BOOL nulldrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                           void * grad_array, ULONG ngrad, ULONG mode )
+BOOL CDECL nulldrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                 void * grad_array, ULONG ngrad, ULONG mode )
 {
     DC *dc = get_nulldrv_dc( dev );
     char buffer[FIELD_OFFSET( BITMAPINFO, bmiColors[256] )];
@@ -499,7 +499,7 @@ done:
     return ret;
 }
 
-COLORREF nulldrv_GetPixel( PHYSDEV dev, INT x, INT y )
+COLORREF CDECL nulldrv_GetPixel( PHYSDEV dev, INT x, INT y )
 {
     DC *dc = get_nulldrv_dc( dev );
     char buffer[FIELD_OFFSET( BITMAPINFO, bmiColors[256] )];
diff --git a/dlls/gdi32/clipping.c b/dlls/gdi32/clipping.c
index d5553eeba0..7ff77a60db 100644
--- a/dlls/gdi32/clipping.c
+++ b/dlls/gdi32/clipping.c
@@ -141,7 +141,7 @@ static inline void create_default_clip_region( DC * dc )
  *           null driver fallback implementations
  */
 
-INT nulldrv_ExtSelectClipRgn( PHYSDEV dev, HRGN rgn, INT mode )
+INT CDECL nulldrv_ExtSelectClipRgn( PHYSDEV dev, HRGN rgn, INT mode )
 {
     DC *dc = get_nulldrv_dc( dev );
     INT ret;
@@ -189,7 +189,7 @@ INT nulldrv_ExtSelectClipRgn( PHYSDEV dev, HRGN rgn, INT mode )
     return ret;
 }
 
-INT nulldrv_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+INT CDECL nulldrv_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     DC *dc = get_nulldrv_dc( dev );
     RECT rect = get_clip_rect( dc, left, top, right, bottom );
@@ -204,7 +204,7 @@ INT nulldrv_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bott
     return ret;
 }
 
-INT nulldrv_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+INT CDECL nulldrv_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     DC *dc = get_nulldrv_dc( dev );
     RECT rect = get_clip_rect( dc, left, top, right, bottom );
@@ -226,7 +226,7 @@ INT nulldrv_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bo
     return ret;
 }
 
-INT nulldrv_OffsetClipRgn( PHYSDEV dev, INT x, INT y )
+INT CDECL nulldrv_OffsetClipRgn( PHYSDEV dev, INT x, INT y )
 {
     DC *dc = get_nulldrv_dc( dev );
     INT ret = NULLREGION;
diff --git a/dlls/gdi32/dc.c b/dlls/gdi32/dc.c
index 8ee8a52d94..c24b96e275 100644
--- a/dlls/gdi32/dc.c
+++ b/dlls/gdi32/dc.c
@@ -380,7 +380,7 @@ void DC_UpdateXforms( DC *dc )
 /***********************************************************************
  *           nulldrv_SaveDC
  */
-INT nulldrv_SaveDC( PHYSDEV dev )
+INT CDECL nulldrv_SaveDC( PHYSDEV dev )
 {
     DC *newdc, *dc = get_nulldrv_dc( dev );
 
@@ -450,7 +450,7 @@ INT nulldrv_SaveDC( PHYSDEV dev )
 /***********************************************************************
  *           nulldrv_RestoreDC
  */
-BOOL nulldrv_RestoreDC( PHYSDEV dev, INT level )
+BOOL CDECL nulldrv_RestoreDC( PHYSDEV dev, INT level )
 {
     DC *dcs, *first_dcs, *dc = get_nulldrv_dc( dev );
     INT save_level;
diff --git a/dlls/gdi32/dib.c b/dlls/gdi32/dib.c
index d95653c24c..3d267ba89c 100644
--- a/dlls/gdi32/dib.c
+++ b/dlls/gdi32/dib.c
@@ -462,9 +462,9 @@ fail:
 
 
 
-INT nulldrv_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
-                           INT xSrc, INT ySrc, INT widthSrc, INT heightSrc, const void *bits,
-                           BITMAPINFO *src_info, UINT coloruse, DWORD rop )
+INT CDECL nulldrv_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
+                                 INT xSrc, INT ySrc, INT widthSrc, INT heightSrc, const void *bits,
+                                 BITMAPINFO *src_info, UINT coloruse, DWORD rop )
 {
     DC *dc = get_nulldrv_dc( dev );
     char dst_buffer[FIELD_OFFSET( BITMAPINFO, bmiColors[256] )];
@@ -766,9 +766,9 @@ done:
 }
 
 
-INT nulldrv_SetDIBitsToDevice( PHYSDEV dev, INT x_dst, INT y_dst, DWORD cx, DWORD cy,
-                               INT x_src, INT y_src, UINT startscan, UINT lines,
-                               const void *bits, BITMAPINFO *src_info, UINT coloruse )
+INT CDECL nulldrv_SetDIBitsToDevice( PHYSDEV dev, INT x_dst, INT y_dst, DWORD cx, DWORD cy,
+                                     INT x_src, INT y_src, UINT startscan, UINT lines,
+                                     const void *bits, BITMAPINFO *src_info, UINT coloruse )
 {
     DC *dc = get_nulldrv_dc( dev );
     char dst_buffer[FIELD_OFFSET( BITMAPINFO, bmiColors[256] )];
diff --git a/dlls/gdi32/dibdrv/bitblt.c b/dlls/gdi32/dibdrv/bitblt.c
index a84be8236e..8f67535471 100644
--- a/dlls/gdi32/dibdrv/bitblt.c
+++ b/dlls/gdi32/dibdrv/bitblt.c
@@ -883,8 +883,8 @@ DWORD get_image_from_bitmap( BITMAPOBJ *bmp, BITMAPINFO *info,
 /***********************************************************************
  *           dibdrv_GetImage
  */
-DWORD dibdrv_GetImage( PHYSDEV dev, BITMAPINFO *info, struct gdi_image_bits *bits,
-                       struct bitblt_coords *src )
+DWORD CDECL dibdrv_GetImage( PHYSDEV dev, BITMAPINFO *info, struct gdi_image_bits *bits,
+                             struct bitblt_coords *src )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
 
@@ -986,9 +986,9 @@ static inline BOOL rop_uses_pat(DWORD rop)
 /***********************************************************************
  *           dibdrv_PutImage
  */
-DWORD dibdrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                       const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                       struct bitblt_coords *dst, DWORD rop )
+DWORD CDECL dibdrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                             const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                             struct bitblt_coords *dst, DWORD rop )
 {
     DC *dc = get_physdev_dc( dev );
     struct clipped_rects clipped_rects;
@@ -1049,8 +1049,8 @@ update_format:
 /***********************************************************************
  *           dibdrv_BlendImage
  */
-DWORD dibdrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
-                         struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION blend )
+DWORD CDECL dibdrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
+                               struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION blend )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
     dib_info src_dib;
@@ -1395,8 +1395,8 @@ COLORREF get_pixel_bitmapinfo( const BITMAPINFO *info, void *bits, struct bitblt
 /***********************************************************************
  *           dibdrv_StretchBlt
  */
-BOOL dibdrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                        PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
+BOOL CDECL dibdrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                              PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
 {
     DC *dc_dst = get_physdev_dc( dst_dev );
 
@@ -1409,8 +1409,8 @@ BOOL dibdrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
 /***********************************************************************
  *           dibdrv_AlphaBlend
  */
-BOOL dibdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                        PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION blend )
+BOOL CDECL dibdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                              PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION blend )
 {
     DC *dc_dst = get_physdev_dc( dst_dev );
 
@@ -1420,8 +1420,8 @@ BOOL dibdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
 /***********************************************************************
  *           dibdrv_GradientFill
  */
-BOOL dibdrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                          void *grad_array, ULONG ngrad, ULONG mode )
+BOOL CDECL dibdrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                void *grad_array, ULONG ngrad, ULONG mode )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
     DC *dc = get_physdev_dc( dev );
diff --git a/dlls/gdi32/dibdrv/dc.c b/dlls/gdi32/dibdrv/dc.c
index a3f84bd688..fb1683e8f1 100644
--- a/dlls/gdi32/dibdrv/dc.c
+++ b/dlls/gdi32/dibdrv/dc.c
@@ -317,8 +317,8 @@ void add_clipped_bounds( dibdrv_physdev *dev, const RECT *rect, HRGN clip )
 /**********************************************************************
  *	     dibdrv_CreateDC
  */
-static BOOL dibdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
-                             LPCWSTR output, const DEVMODEW *data )
+static BOOL CDECL dibdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
+                                   LPCWSTR output, const DEVMODEW *data )
 {
     dibdrv_physdev *pdev = HeapAlloc( GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*pdev) );
 
@@ -333,7 +333,7 @@ static BOOL dibdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
 /***********************************************************************
  *           dibdrv_DeleteDC
  */
-static BOOL dibdrv_DeleteDC( PHYSDEV dev )
+static BOOL CDECL dibdrv_DeleteDC( PHYSDEV dev )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     TRACE("(%p)\n", dev);
@@ -347,7 +347,7 @@ static BOOL dibdrv_DeleteDC( PHYSDEV dev )
 /***********************************************************************
  *           dibdrv_SelectBitmap
  */
-static HBITMAP dibdrv_SelectBitmap( PHYSDEV dev, HBITMAP bitmap )
+static HBITMAP CDECL dibdrv_SelectBitmap( PHYSDEV dev, HBITMAP bitmap )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     BITMAPOBJ *bmp = GDI_GetObjPtr( bitmap, OBJ_BITMAP );
@@ -371,7 +371,7 @@ static HBITMAP dibdrv_SelectBitmap( PHYSDEV dev, HBITMAP bitmap )
 /***********************************************************************
  *           dibdrv_SetDeviceClipping
  */
-static void dibdrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
+static void CDECL dibdrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     TRACE("(%p, %p)\n", dev, rgn);
@@ -382,7 +382,7 @@ static void dibdrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
 /***********************************************************************
  *           dibdrv_SetBoundsRect
  */
-static UINT dibdrv_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
+static UINT CDECL dibdrv_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
 
@@ -612,8 +612,8 @@ void dibdrv_set_window_surface( DC *dc, struct window_surface *surface )
     }
 }
 
-static BOOL windrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                               PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION func )
+static BOOL CDECL windrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                     PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION func )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dst_dev );
     BOOL ret;
@@ -625,8 +625,8 @@ static BOOL windrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
     return ret;
 }
 
-static BOOL windrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                        INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL windrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                              INT xstart, INT ystart, INT xend, INT yend )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -638,8 +638,8 @@ static BOOL windrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
     return ret;
 }
 
-static BOOL windrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                          INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL windrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                INT xstart, INT ystart, INT xend, INT yend )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -651,8 +651,8 @@ static BOOL windrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
     return ret;
 }
 
-static DWORD windrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
-                                struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION blend )
+static DWORD CDECL windrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
+                                      struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION blend )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     DWORD ret;
@@ -664,8 +664,8 @@ static DWORD windrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_
     return ret;
 }
 
-static BOOL windrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                          INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL windrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                INT xstart, INT ystart, INT xend, INT yend )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -677,8 +677,8 @@ static BOOL windrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
     return ret;
 }
 
-static BOOL windrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
-                             LPCWSTR output, const DEVMODEW *devmode )
+static BOOL CDECL windrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
+                                   LPCWSTR output, const DEVMODEW *devmode )
 {
     struct windrv_physdev *physdev = HeapAlloc( GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*physdev) );
 
@@ -694,7 +694,7 @@ static BOOL windrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
     return TRUE;
 }
 
-static BOOL windrv_DeleteDC( PHYSDEV dev )
+static BOOL CDECL windrv_DeleteDC( PHYSDEV dev )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
 
@@ -703,7 +703,7 @@ static BOOL windrv_DeleteDC( PHYSDEV dev )
     return TRUE;
 }
 
-static BOOL windrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+static BOOL CDECL windrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -715,7 +715,7 @@ static BOOL windrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT botto
     return ret;
 }
 
-static BOOL windrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type )
+static BOOL CDECL windrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -727,8 +727,8 @@ static BOOL windrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT
     return ret;
 }
 
-static BOOL windrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
-                               LPCWSTR str, UINT count, const INT *dx )
+static BOOL CDECL windrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
+                                     LPCWSTR str, UINT count, const INT *dx )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -740,8 +740,8 @@ static BOOL windrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT
     return ret;
 }
 
-static DWORD windrv_GetImage( PHYSDEV dev, BITMAPINFO *info,
-                              struct gdi_image_bits *bits, struct bitblt_coords *src )
+static DWORD CDECL windrv_GetImage( PHYSDEV dev, BITMAPINFO *info,
+                                    struct gdi_image_bits *bits, struct bitblt_coords *src )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     DWORD ret;
@@ -773,7 +773,7 @@ static DWORD windrv_GetImage( PHYSDEV dev, BITMAPINFO *info,
     return ret;
 }
 
-static COLORREF windrv_GetPixel( PHYSDEV dev, INT x, INT y )
+static COLORREF CDECL windrv_GetPixel( PHYSDEV dev, INT x, INT y )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     COLORREF ret;
@@ -785,8 +785,8 @@ static COLORREF windrv_GetPixel( PHYSDEV dev, INT x, INT y )
     return ret;
 }
 
-static BOOL windrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                                 void * grad_array, ULONG ngrad, ULONG mode )
+static BOOL CDECL windrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                       void * grad_array, ULONG ngrad, ULONG mode )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -798,7 +798,7 @@ static BOOL windrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert
     return ret;
 }
 
-static BOOL windrv_LineTo( PHYSDEV dev, INT x, INT y )
+static BOOL CDECL windrv_LineTo( PHYSDEV dev, INT x, INT y )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -810,7 +810,7 @@ static BOOL windrv_LineTo( PHYSDEV dev, INT x, INT y )
     return ret;
 }
 
-static BOOL windrv_PaintRgn( PHYSDEV dev, HRGN rgn )
+static BOOL CDECL windrv_PaintRgn( PHYSDEV dev, HRGN rgn )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -822,7 +822,7 @@ static BOOL windrv_PaintRgn( PHYSDEV dev, HRGN rgn )
     return ret;
 }
 
-static BOOL windrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
+static BOOL CDECL windrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -834,8 +834,8 @@ static BOOL windrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
     return ret;
 }
 
-static BOOL windrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                        INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL windrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                              INT xstart, INT ystart, INT xend, INT yend )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -847,7 +847,7 @@ static BOOL windrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
     return ret;
 }
 
-static BOOL windrv_PolyPolygon( PHYSDEV dev, const POINT *points, const INT *counts, UINT polygons )
+static BOOL CDECL windrv_PolyPolygon( PHYSDEV dev, const POINT *points, const INT *counts, UINT polygons )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -859,7 +859,7 @@ static BOOL windrv_PolyPolygon( PHYSDEV dev, const POINT *points, const INT *cou
     return ret;
 }
 
-static BOOL windrv_PolyPolyline( PHYSDEV dev, const POINT *points, const DWORD *counts, DWORD lines )
+static BOOL CDECL windrv_PolyPolyline( PHYSDEV dev, const POINT *points, const DWORD *counts, DWORD lines )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -871,7 +871,7 @@ static BOOL windrv_PolyPolyline( PHYSDEV dev, const POINT *points, const DWORD *
     return ret;
 }
 
-static BOOL windrv_Polygon( PHYSDEV dev, const POINT *points, INT count )
+static BOOL CDECL windrv_Polygon( PHYSDEV dev, const POINT *points, INT count )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -883,7 +883,7 @@ static BOOL windrv_Polygon( PHYSDEV dev, const POINT *points, INT count )
     return ret;
 }
 
-static BOOL windrv_Polyline( PHYSDEV dev, const POINT *points, INT count )
+static BOOL CDECL windrv_Polyline( PHYSDEV dev, const POINT *points, INT count )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -895,9 +895,9 @@ static BOOL windrv_Polyline( PHYSDEV dev, const POINT *points, INT count )
     return ret;
 }
 
-static DWORD windrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                              const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                              struct bitblt_coords *dst, DWORD rop )
+static DWORD CDECL windrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                                    const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                                    struct bitblt_coords *dst, DWORD rop )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     DWORD ret;
@@ -909,7 +909,7 @@ static DWORD windrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
     return ret;
 }
 
-static BOOL windrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+static BOOL CDECL windrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -921,8 +921,8 @@ static BOOL windrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bot
     return ret;
 }
 
-static BOOL windrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                               INT ell_width, INT ell_height )
+static BOOL CDECL windrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                    INT ell_width, INT ell_height )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     BOOL ret;
@@ -934,15 +934,15 @@ static BOOL windrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bot
     return ret;
 }
 
-static UINT windrv_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
+static UINT CDECL windrv_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 {
     /* do nothing, we use the dibdrv bounds tracking for our own purpose */
     return DCB_RESET;
 }
 
-static INT windrv_SetDIBitsToDevice( PHYSDEV dev, INT x_dst, INT y_dst, DWORD cx, DWORD cy,
-                                     INT x_src, INT y_src, UINT startscan, UINT lines,
-                                     const void *bits, BITMAPINFO *src_info, UINT coloruse )
+static INT CDECL windrv_SetDIBitsToDevice( PHYSDEV dev, INT x_dst, INT y_dst, DWORD cx, DWORD cy,
+                                           INT x_src, INT y_src, UINT startscan, UINT lines,
+                                           const void *bits, BITMAPINFO *src_info, UINT coloruse )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     INT ret;
@@ -955,7 +955,7 @@ static INT windrv_SetDIBitsToDevice( PHYSDEV dev, INT x_dst, INT y_dst, DWORD cx
     return ret;
 }
 
-static void windrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
+static void CDECL windrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
 {
     dev = GET_NEXT_PHYSDEV( dev, pSetDeviceClipping );
     dev->funcs->pSetDeviceClipping( dev, rgn );
@@ -967,7 +967,7 @@ static void windrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
     }
 }
 
-static COLORREF windrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
+static COLORREF CDECL windrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     COLORREF ret;
@@ -979,8 +979,8 @@ static COLORREF windrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
     return ret;
 }
 
-static BOOL windrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                               PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
+static BOOL CDECL windrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                     PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dst_dev );
     BOOL ret;
@@ -992,9 +992,9 @@ static BOOL windrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
     return ret;
 }
 
-static INT windrv_StretchDIBits( PHYSDEV dev, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
-                                 INT x_src, INT y_src, INT width_src, INT height_src, const void *bits,
-                                 BITMAPINFO *src_info, UINT coloruse, DWORD rop )
+static INT CDECL windrv_StretchDIBits( PHYSDEV dev, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
+                                       INT x_src, INT y_src, INT width_src, INT height_src, const void *bits,
+                                       BITMAPINFO *src_info, UINT coloruse, DWORD rop )
 {
     struct windrv_physdev *physdev = get_windrv_physdev( dev );
     INT ret;
@@ -1007,7 +1007,7 @@ static INT windrv_StretchDIBits( PHYSDEV dev, INT x_dst, INT y_dst, INT width_ds
     return ret;
 }
 
-static struct opengl_funcs *windrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
+static struct opengl_funcs * CDECL windrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
 {
     dev = GET_NEXT_PHYSDEV( dev, wine_get_wgl_driver );
     if (dev->funcs == &dib_driver) dev = GET_NEXT_PHYSDEV( dev, wine_get_wgl_driver );
diff --git a/dlls/gdi32/dibdrv/dibdrv.h b/dlls/gdi32/dibdrv/dibdrv.h
index 02164c9692..98e1b0fba9 100644
--- a/dlls/gdi32/dibdrv/dibdrv.h
+++ b/dlls/gdi32/dibdrv/dibdrv.h
@@ -112,54 +112,54 @@ typedef struct dibdrv_physdev
     BOOL   (* pen_lines)(struct dibdrv_physdev *pdev, int num, POINT *pts, BOOL close, HRGN region);
 } dibdrv_physdev;
 
-extern BOOL     dibdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                                   PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION blend ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                            INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                              INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
-extern DWORD    dibdrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
-                                   struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION func ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                              INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
-                                   const RECT *rect, LPCWSTR str, UINT count, const INT *dx ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern DWORD    dibdrv_GetImage( PHYSDEV dev, BITMAPINFO *info, struct gdi_image_bits *bits,
-                                 struct bitblt_coords *src ) DECLSPEC_HIDDEN;
-extern COLORREF dibdrv_GetNearestColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF dibdrv_GetPixel( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                                     void *grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_LineTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                            INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_PolyPolygon( PHYSDEV dev, const POINT *pt, const INT *counts, DWORD polygons ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts,
-                                     DWORD polylines ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_Polygon( PHYSDEV dev, const POINT *pt, INT count ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_Polyline( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
-extern DWORD    dibdrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                                 const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                                 struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                                  INT ellipse_width, INT ellipse_height ) DECLSPEC_HIDDEN;
-extern HBRUSH   dibdrv_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern HFONT    dibdrv_SelectFont( PHYSDEV dev, HFONT font, UINT *aa_flags ) DECLSPEC_HIDDEN;
-extern HPEN     dibdrv_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern COLORREF dibdrv_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF dibdrv_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF dibdrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                                   PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     dibdrv_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern struct opengl_funcs *dibdrv_wine_get_wgl_driver( PHYSDEV dev, UINT version ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                         PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION blend ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                  INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                    INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
+extern DWORD    CDECL dibdrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
+                                         struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION func ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                    INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
+                                         const RECT *rect, LPCWSTR str, UINT count, const INT *dx ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern DWORD    CDECL dibdrv_GetImage( PHYSDEV dev, BITMAPINFO *info, struct gdi_image_bits *bits,
+                                       struct bitblt_coords *src ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL dibdrv_GetNearestColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL dibdrv_GetPixel( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                           void *grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_LineTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                  INT start_x, INT start_y, INT end_x, INT end_y ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_PolyPolygon( PHYSDEV dev, const POINT *pt, const INT *counts, DWORD polygons ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts,
+                                           DWORD polylines ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_Polygon( PHYSDEV dev, const POINT *pt, INT count ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_Polyline( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
+extern DWORD    CDECL dibdrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                                       const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                                       struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                        INT ellipse_width, INT ellipse_height ) DECLSPEC_HIDDEN;
+extern HBRUSH   CDECL dibdrv_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern HFONT    CDECL dibdrv_SelectFont( PHYSDEV dev, HFONT font, UINT *aa_flags ) DECLSPEC_HIDDEN;
+extern HPEN     CDECL dibdrv_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL dibdrv_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL dibdrv_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL dibdrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                         PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL dibdrv_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern struct opengl_funcs * CDECL dibdrv_wine_get_wgl_driver( PHYSDEV dev, UINT version ) DECLSPEC_HIDDEN;
 
 static inline dibdrv_physdev *get_dibdrv_pdev( PHYSDEV dev )
 {
diff --git a/dlls/gdi32/dibdrv/graphics.c b/dlls/gdi32/dibdrv/graphics.c
index 7d71fbb12a..ad2b01d23c 100644
--- a/dlls/gdi32/dibdrv/graphics.c
+++ b/dlls/gdi32/dibdrv/graphics.c
@@ -895,8 +895,8 @@ BOOL render_aa_text_bitmapinfo( DC *dc, BITMAPINFO *info, struct gdi_image_bits
 /***********************************************************************
  *           dibdrv_ExtTextOut
  */
-BOOL dibdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
-                        const RECT *rect, LPCWSTR str, UINT count, const INT *dx )
+BOOL CDECL dibdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
+                              const RECT *rect, LPCWSTR str, UINT count, const INT *dx )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -944,7 +944,7 @@ done:
 /***********************************************************************
  *           dibdrv_SelectFont
  */
-HFONT dibdrv_SelectFont( PHYSDEV dev, HFONT font, UINT *aa_flags )
+HFONT CDECL dibdrv_SelectFont( PHYSDEV dev, HFONT font, UINT *aa_flags )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -966,8 +966,8 @@ HFONT dibdrv_SelectFont( PHYSDEV dev, HFONT font, UINT *aa_flags )
 /***********************************************************************
  *           dibdrv_Arc
  */
-BOOL dibdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                 INT start_x, INT start_y, INT end_x, INT end_y )
+BOOL CDECL dibdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                       INT start_x, INT start_y, INT end_x, INT end_y )
 {
     return draw_arc( dev, left, top, right, bottom, start_x, start_y, end_x, end_y, 0 );
 }
@@ -975,8 +975,8 @@ BOOL dibdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           dibdrv_ArcTo
  */
-BOOL dibdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                   INT start_x, INT start_y, INT end_x, INT end_y )
+BOOL CDECL dibdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                         INT start_x, INT start_y, INT end_x, INT end_y )
 {
     return draw_arc( dev, left, top, right, bottom, start_x, start_y, end_x, end_y, -1 );
 }
@@ -984,8 +984,8 @@ BOOL dibdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           dibdrv_Chord
  */
-BOOL dibdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                   INT start_x, INT start_y, INT end_x, INT end_y )
+BOOL CDECL dibdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                         INT start_x, INT start_y, INT end_x, INT end_y )
 {
     return draw_arc( dev, left, top, right, bottom, start_x, start_y, end_x, end_y, 1 );
 }
@@ -993,7 +993,7 @@ BOOL dibdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           dibdrv_Ellipse
  */
-BOOL dibdrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+BOOL CDECL dibdrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     return dibdrv_RoundRect( dev, left, top, right, bottom, right - left, bottom - top );
 }
@@ -1049,7 +1049,7 @@ static void fill_row( dib_info *dib, HRGN clip, RECT *row, DWORD pixel, UINT typ
 /***********************************************************************
  *           dibdrv_ExtFloodFill
  */
-BOOL dibdrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type )
+BOOL CDECL dibdrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1082,7 +1082,7 @@ BOOL dibdrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type )
 /***********************************************************************
  *           dibdrv_FillPath
  */
-BOOL dibdrv_FillPath( PHYSDEV dev )
+BOOL CDECL dibdrv_FillPath( PHYSDEV dev )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
 
@@ -1092,7 +1092,7 @@ BOOL dibdrv_FillPath( PHYSDEV dev )
 /***********************************************************************
  *           dibdrv_GetNearestColor
  */
-COLORREF dibdrv_GetNearestColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL dibdrv_GetNearestColor( PHYSDEV dev, COLORREF color )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1107,7 +1107,7 @@ COLORREF dibdrv_GetNearestColor( PHYSDEV dev, COLORREF color )
 /***********************************************************************
  *           dibdrv_GetPixel
  */
-COLORREF dibdrv_GetPixel( PHYSDEV dev, INT x, INT y )
+COLORREF CDECL dibdrv_GetPixel( PHYSDEV dev, INT x, INT y )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1133,7 +1133,7 @@ COLORREF dibdrv_GetPixel( PHYSDEV dev, INT x, INT y )
 /***********************************************************************
  *           dibdrv_LineTo
  */
-BOOL dibdrv_LineTo( PHYSDEV dev, INT x, INT y )
+BOOL CDECL dibdrv_LineTo( PHYSDEV dev, INT x, INT y )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -1176,7 +1176,7 @@ static inline INT get_rop2_from_rop(INT rop)
 /***********************************************************************
  *           dibdrv_PatBlt
  */
-BOOL dibdrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
+BOOL CDECL dibdrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     dib_brush *brush = &pdev->brush;
@@ -1214,7 +1214,7 @@ BOOL dibdrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 /***********************************************************************
  *           dibdrv_PaintRgn
  */
-BOOL dibdrv_PaintRgn( PHYSDEV dev, HRGN rgn )
+BOOL CDECL dibdrv_PaintRgn( PHYSDEV dev, HRGN rgn )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     const WINEREGION *region;
@@ -1245,7 +1245,7 @@ BOOL dibdrv_PaintRgn( PHYSDEV dev, HRGN rgn )
 /***********************************************************************
  *           dibdrv_PolyPolygon
  */
-BOOL dibdrv_PolyPolygon( PHYSDEV dev, const POINT *pt, const INT *counts, DWORD polygons )
+BOOL CDECL dibdrv_PolyPolygon( PHYSDEV dev, const POINT *pt, const INT *counts, DWORD polygons )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -1316,7 +1316,7 @@ done:
 /***********************************************************************
  *           dibdrv_PolyPolyline
  */
-BOOL dibdrv_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polylines )
+BOOL CDECL dibdrv_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polylines )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -1368,7 +1368,7 @@ done:
 /***********************************************************************
  *           dibdrv_Polygon
  */
-BOOL dibdrv_Polygon( PHYSDEV dev, const POINT *pt, INT count )
+BOOL CDECL dibdrv_Polygon( PHYSDEV dev, const POINT *pt, INT count )
 {
     INT counts[1] = { count };
 
@@ -1378,7 +1378,7 @@ BOOL dibdrv_Polygon( PHYSDEV dev, const POINT *pt, INT count )
 /***********************************************************************
  *           dibdrv_Polyline
  */
-BOOL dibdrv_Polyline( PHYSDEV dev, const POINT* pt, INT count )
+BOOL CDECL dibdrv_Polyline( PHYSDEV dev, const POINT* pt, INT count )
 {
     DWORD counts[1] = { count };
 
@@ -1389,7 +1389,7 @@ BOOL dibdrv_Polyline( PHYSDEV dev, const POINT* pt, INT count )
 /***********************************************************************
  *           dibdrv_Rectangle
  */
-BOOL dibdrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+BOOL CDECL dibdrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -1464,8 +1464,8 @@ BOOL dibdrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 /***********************************************************************
  *           dibdrv_RoundRect
  */
-BOOL dibdrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                       INT ellipse_width, INT ellipse_height )
+BOOL CDECL dibdrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                             INT ellipse_width, INT ellipse_height )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1577,8 +1577,8 @@ BOOL dibdrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           dibdrv_Pie
  */
-BOOL dibdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                 INT start_x, INT start_y, INT end_x, INT end_y )
+BOOL CDECL dibdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                       INT start_x, INT start_y, INT end_x, INT end_y )
 {
     return draw_arc( dev, left, top, right, bottom, start_x, start_y, end_x, end_y, 2 );
 }
@@ -1586,7 +1586,7 @@ BOOL dibdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           dibdrv_SetPixel
  */
-COLORREF dibdrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
+COLORREF CDECL dibdrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1619,7 +1619,7 @@ COLORREF dibdrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 /***********************************************************************
  *           dibdrv_StrokeAndFillPath
  */
-BOOL dibdrv_StrokeAndFillPath( PHYSDEV dev )
+BOOL CDECL dibdrv_StrokeAndFillPath( PHYSDEV dev )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
 
@@ -1629,7 +1629,7 @@ BOOL dibdrv_StrokeAndFillPath( PHYSDEV dev )
 /***********************************************************************
  *           dibdrv_StrokePath
  */
-BOOL dibdrv_StrokePath( PHYSDEV dev )
+BOOL CDECL dibdrv_StrokePath( PHYSDEV dev )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev( dev );
 
diff --git a/dlls/gdi32/dibdrv/objects.c b/dlls/gdi32/dibdrv/objects.c
index 26710dd1aa..92b4f53967 100644
--- a/dlls/gdi32/dibdrv/objects.c
+++ b/dlls/gdi32/dibdrv/objects.c
@@ -1765,7 +1765,7 @@ static inline int get_pen_device_width( DC *dc, int width )
 /***********************************************************************
  *           dibdrv_SetDCPenColor
  */
-COLORREF dibdrv_SetDCPenColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL dibdrv_SetDCPenColor( PHYSDEV dev, COLORREF color )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -2126,7 +2126,7 @@ static void select_brush( dibdrv_physdev *pdev, dib_brush *brush,
 /***********************************************************************
  *           dibdrv_SelectBrush
  */
-HBRUSH dibdrv_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
+HBRUSH CDECL dibdrv_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -2146,7 +2146,7 @@ HBRUSH dibdrv_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_patter
 /***********************************************************************
  *           dibdrv_SelectPen
  */
-HPEN dibdrv_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
+HPEN CDECL dibdrv_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
@@ -2251,7 +2251,7 @@ HPEN dibdrv_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *patte
 /***********************************************************************
  *           dibdrv_SetDCBrushColor
  */
-COLORREF dibdrv_SetDCBrushColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL dibdrv_SetDCBrushColor( PHYSDEV dev, COLORREF color )
 {
     dibdrv_physdev *pdev = get_dibdrv_pdev(dev);
     DC *dc = get_physdev_dc( dev );
diff --git a/dlls/gdi32/dibdrv/opengl.c b/dlls/gdi32/dibdrv/opengl.c
index be9ff4b1a1..09bb43448d 100644
--- a/dlls/gdi32/dibdrv/opengl.c
+++ b/dlls/gdi32/dibdrv/opengl.c
@@ -345,7 +345,7 @@ static struct opengl_funcs opengl_funcs =
 /**********************************************************************
  *	     dibdrv_wine_get_wgl_driver
  */
-struct opengl_funcs *dibdrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
+struct opengl_funcs * CDECL dibdrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
 {
     if (version != WINE_WGL_DRIVER_VERSION)
     {
@@ -363,7 +363,7 @@ struct opengl_funcs *dibdrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
 /**********************************************************************
  *	     dibdrv_wine_get_wgl_driver
  */
-struct opengl_funcs *dibdrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
+struct opengl_funcs * CDECL dibdrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
 {
     static int warned;
     if (!warned++) ERR( "OSMesa not compiled in, no OpenGL bitmap support\n" );
diff --git a/dlls/gdi32/driver.c b/dlls/gdi32/driver.c
index dcbc480376..90f9656085 100644
--- a/dlls/gdi32/driver.c
+++ b/dlls/gdi32/driver.c
@@ -233,131 +233,131 @@ void CDECL __wine_set_display_driver( HMODULE module )
 }
 
 
-static INT nulldrv_AbortDoc( PHYSDEV dev )
+static INT CDECL nulldrv_AbortDoc( PHYSDEV dev )
 {
     return 0;
 }
 
-static BOOL nulldrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                         INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL nulldrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                               INT xstart, INT ystart, INT xend, INT yend )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                           INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL nulldrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                 INT xstart, INT ystart, INT xend, INT yend )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
+static BOOL CDECL nulldrv_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 {
     if (!display_driver || !display_driver->funcs->pCreateCompatibleDC) return TRUE;
     return display_driver->funcs->pCreateCompatibleDC( NULL, pdev );
 }
 
-static BOOL nulldrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
-                              LPCWSTR output, const DEVMODEW *devmode )
+static BOOL CDECL nulldrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
+                                    LPCWSTR output, const DEVMODEW *devmode )
 {
     assert(0);  /* should never be called */
     return FALSE;
 }
 
-static BOOL nulldrv_DeleteDC( PHYSDEV dev )
+static BOOL CDECL nulldrv_DeleteDC( PHYSDEV dev )
 {
     assert(0);  /* should never be called */
     return TRUE;
 }
 
-static BOOL nulldrv_DeleteObject( PHYSDEV dev, HGDIOBJ obj )
+static BOOL CDECL nulldrv_DeleteObject( PHYSDEV dev, HGDIOBJ obj )
 {
     return TRUE;
 }
 
-static DWORD nulldrv_DeviceCapabilities( LPSTR buffer, LPCSTR device, LPCSTR port,
-                                         WORD cap, LPSTR output, DEVMODEA *devmode )
+static DWORD CDECL nulldrv_DeviceCapabilities( LPSTR buffer, LPCSTR device, LPCSTR port,
+                                               WORD cap, LPSTR output, DEVMODEA *devmode )
 {
     return -1;
 }
 
-static BOOL nulldrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+static BOOL CDECL nulldrv_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     return TRUE;
 }
 
-static INT nulldrv_EndDoc( PHYSDEV dev )
+static INT CDECL nulldrv_EndDoc( PHYSDEV dev )
 {
     return 0;
 }
 
-static INT nulldrv_EndPage( PHYSDEV dev )
+static INT CDECL nulldrv_EndPage( PHYSDEV dev )
 {
     return 0;
 }
 
-static BOOL nulldrv_EnumFonts( PHYSDEV dev, LOGFONTW *logfont, FONTENUMPROCW proc, LPARAM lParam )
+static BOOL CDECL nulldrv_EnumFonts( PHYSDEV dev, LOGFONTW *logfont, FONTENUMPROCW proc, LPARAM lParam )
 {
     return TRUE;
 }
 
-static INT nulldrv_EnumICMProfiles( PHYSDEV dev, ICMENUMPROCW func, LPARAM lparam )
+static INT CDECL nulldrv_EnumICMProfiles( PHYSDEV dev, ICMENUMPROCW func, LPARAM lparam )
 {
     return -1;
 }
 
-static INT nulldrv_ExtDeviceMode( LPSTR buffer, HWND hwnd, DEVMODEA *output, LPSTR device,
-                                  LPSTR port, DEVMODEA *input, LPSTR profile, DWORD mode )
+static INT CDECL nulldrv_ExtDeviceMode( LPSTR buffer, HWND hwnd, DEVMODEA *output, LPSTR device,
+                                        LPSTR port, DEVMODEA *input, LPSTR profile, DWORD mode )
 {
     return -1;
 }
 
-static INT nulldrv_ExtEscape( PHYSDEV dev, INT escape, INT in_size, const void *in_data,
+static INT CDECL nulldrv_ExtEscape( PHYSDEV dev, INT escape, INT in_size, const void *in_data,
                                     INT out_size, void *out_data )
 {
     return 0;
 }
 
-static BOOL nulldrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type )
+static BOOL CDECL nulldrv_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT type )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_FontIsLinked( PHYSDEV dev )
+static BOOL CDECL nulldrv_FontIsLinked( PHYSDEV dev )
 {
     return FALSE;
 }
 
-static BOOL nulldrv_GdiComment( PHYSDEV dev, UINT size, const BYTE *data )
+static BOOL CDECL nulldrv_GdiComment( PHYSDEV dev, UINT size, const BYTE *data )
 {
     return FALSE;
 }
 
-static UINT nulldrv_GetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
+static UINT CDECL nulldrv_GetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 {
     return DCB_RESET;
 }
 
-static BOOL nulldrv_GetCharABCWidths( PHYSDEV dev, UINT first, UINT last, LPABC abc )
+static BOOL CDECL nulldrv_GetCharABCWidths( PHYSDEV dev, UINT first, UINT last, LPABC abc )
 {
     return FALSE;
 }
 
-static BOOL nulldrv_GetCharABCWidthsI( PHYSDEV dev, UINT first, UINT count, WORD *indices, LPABC abc )
+static BOOL CDECL nulldrv_GetCharABCWidthsI( PHYSDEV dev, UINT first, UINT count, WORD *indices, LPABC abc )
 {
     return FALSE;
 }
 
-static BOOL nulldrv_GetCharWidth( PHYSDEV dev, UINT first, UINT last, INT *buffer )
+static BOOL CDECL nulldrv_GetCharWidth( PHYSDEV dev, UINT first, UINT last, INT *buffer )
 {
     return FALSE;
 }
 
-static BOOL nulldrv_GetCharWidthInfo( PHYSDEV dev, void *info )
+static BOOL CDECL nulldrv_GetCharWidthInfo( PHYSDEV dev, void *info )
 {
     return FALSE;
 }
 
-static INT nulldrv_GetDeviceCaps( PHYSDEV dev, INT cap )
+static INT CDECL nulldrv_GetDeviceCaps( PHYSDEV dev, INT cap )
 {
     int bpp;
 
@@ -449,75 +449,75 @@ static INT nulldrv_GetDeviceCaps( PHYSDEV dev, INT cap )
     }
 }
 
-static BOOL nulldrv_GetDeviceGammaRamp( PHYSDEV dev, void *ramp )
+static BOOL CDECL nulldrv_GetDeviceGammaRamp( PHYSDEV dev, void *ramp )
 {
     SetLastError( ERROR_INVALID_PARAMETER );
     return FALSE;
 }
 
-static DWORD nulldrv_GetFontData( PHYSDEV dev, DWORD table, DWORD offset, LPVOID buffer, DWORD length )
+static DWORD CDECL nulldrv_GetFontData( PHYSDEV dev, DWORD table, DWORD offset, LPVOID buffer, DWORD length )
 {
     return FALSE;
 }
 
-static BOOL nulldrv_GetFontRealizationInfo( PHYSDEV dev, void *info )
+static BOOL CDECL nulldrv_GetFontRealizationInfo( PHYSDEV dev, void *info )
 {
     return FALSE;
 }
 
-static DWORD nulldrv_GetFontUnicodeRanges( PHYSDEV dev, LPGLYPHSET glyphs )
+static DWORD CDECL nulldrv_GetFontUnicodeRanges( PHYSDEV dev, LPGLYPHSET glyphs )
 {
     return 0;
 }
 
-static DWORD nulldrv_GetGlyphIndices( PHYSDEV dev, LPCWSTR str, INT count, LPWORD indices, DWORD flags )
+static DWORD CDECL nulldrv_GetGlyphIndices( PHYSDEV dev, LPCWSTR str, INT count, LPWORD indices, DWORD flags )
 {
     return GDI_ERROR;
 }
 
-static DWORD nulldrv_GetGlyphOutline( PHYSDEV dev, UINT ch, UINT format, LPGLYPHMETRICS metrics,
-                                      DWORD size, LPVOID buffer, const MAT2 *mat )
+static DWORD CDECL nulldrv_GetGlyphOutline( PHYSDEV dev, UINT ch, UINT format, LPGLYPHMETRICS metrics,
+                                            DWORD size, LPVOID buffer, const MAT2 *mat )
 {
     return GDI_ERROR;
 }
 
-static BOOL nulldrv_GetICMProfile( PHYSDEV dev, LPDWORD size, LPWSTR filename )
+static BOOL CDECL nulldrv_GetICMProfile( PHYSDEV dev, LPDWORD size, LPWSTR filename )
 {
     return FALSE;
 }
 
-static DWORD nulldrv_GetImage( PHYSDEV dev, BITMAPINFO *info, struct gdi_image_bits *bits,
-                               struct bitblt_coords *src )
+static DWORD CDECL nulldrv_GetImage( PHYSDEV dev, BITMAPINFO *info, struct gdi_image_bits *bits,
+                                     struct bitblt_coords *src )
 {
     return ERROR_NOT_SUPPORTED;
 }
 
-static DWORD nulldrv_GetKerningPairs( PHYSDEV dev, DWORD count, LPKERNINGPAIR pairs )
+static DWORD CDECL nulldrv_GetKerningPairs( PHYSDEV dev, DWORD count, LPKERNINGPAIR pairs )
 {
     return 0;
 }
 
-static UINT nulldrv_GetOutlineTextMetrics( PHYSDEV dev, UINT size, LPOUTLINETEXTMETRICW otm )
+static UINT CDECL nulldrv_GetOutlineTextMetrics( PHYSDEV dev, UINT size, LPOUTLINETEXTMETRICW otm )
 {
     return 0;
 }
 
-static UINT nulldrv_GetTextCharsetInfo( PHYSDEV dev, LPFONTSIGNATURE fs, DWORD flags )
+static UINT CDECL nulldrv_GetTextCharsetInfo( PHYSDEV dev, LPFONTSIGNATURE fs, DWORD flags )
 {
     return DEFAULT_CHARSET;
 }
 
-static BOOL nulldrv_GetTextExtentExPoint( PHYSDEV dev, LPCWSTR str, INT count, INT *dx )
+static BOOL CDECL nulldrv_GetTextExtentExPoint( PHYSDEV dev, LPCWSTR str, INT count, INT *dx )
 {
     return FALSE;
 }
 
-static BOOL nulldrv_GetTextExtentExPointI( PHYSDEV dev, const WORD *indices, INT count, INT *dx )
+static BOOL CDECL nulldrv_GetTextExtentExPointI( PHYSDEV dev, const WORD *indices, INT count, INT *dx )
 {
     return FALSE;
 }
 
-static INT nulldrv_GetTextFace( PHYSDEV dev, INT size, LPWSTR name )
+static INT CDECL nulldrv_GetTextFace( PHYSDEV dev, INT size, LPWSTR name )
 {
     INT ret = 0;
     LOGFONTW font;
@@ -535,55 +535,55 @@ static INT nulldrv_GetTextFace( PHYSDEV dev, INT size, LPWSTR name )
     return ret;
 }
 
-static BOOL nulldrv_GetTextMetrics( PHYSDEV dev, TEXTMETRICW *metrics )
+static BOOL CDECL nulldrv_GetTextMetrics( PHYSDEV dev, TEXTMETRICW *metrics )
 {
     return FALSE;
 }
 
-static BOOL nulldrv_LineTo( PHYSDEV dev, INT x, INT y )
+static BOOL CDECL nulldrv_LineTo( PHYSDEV dev, INT x, INT y )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_MoveTo( PHYSDEV dev, INT x, INT y )
+static BOOL CDECL nulldrv_MoveTo( PHYSDEV dev, INT x, INT y )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_PaintRgn( PHYSDEV dev, HRGN rgn )
+static BOOL CDECL nulldrv_PaintRgn( PHYSDEV dev, HRGN rgn )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
+static BOOL CDECL nulldrv_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                         INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL nulldrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                               INT xstart, INT ystart, INT xend, INT yend )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_PolyPolygon( PHYSDEV dev, const POINT *points, const INT *counts, UINT polygons )
+static BOOL CDECL nulldrv_PolyPolygon( PHYSDEV dev, const POINT *points, const INT *counts, UINT polygons )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_PolyPolyline( PHYSDEV dev, const POINT *points, const DWORD *counts, DWORD lines )
+static BOOL CDECL nulldrv_PolyPolyline( PHYSDEV dev, const POINT *points, const DWORD *counts, DWORD lines )
 {
     return TRUE;
 }
 
-static BOOL nulldrv_Polygon( PHYSDEV dev, const POINT *points, INT count )
+static BOOL CDECL nulldrv_Polygon( PHYSDEV dev, const POINT *points, INT count )
 {
     INT counts[1] = { count };
 
     return PolyPolygon( dev->hdc, points, counts, 1 );
 }
 
-static BOOL nulldrv_Polyline( PHYSDEV dev, const POINT *points, INT count )
+static BOOL CDECL nulldrv_Polyline( PHYSDEV dev, const POINT *points, INT count )
 {
     DWORD counts[1] = { count };
 
@@ -591,175 +591,175 @@ static BOOL nulldrv_Polyline( PHYSDEV dev, const POINT *points, INT count )
     return PolyPolyline( dev->hdc, points, counts, 1 );
 }
 
-static DWORD nulldrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                               const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                               struct bitblt_coords *dst, DWORD rop )
+static DWORD CDECL nulldrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                                     const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                                     struct bitblt_coords *dst, DWORD rop )
 {
     return ERROR_SUCCESS;
 }
 
-static UINT nulldrv_RealizeDefaultPalette( PHYSDEV dev )
+static UINT CDECL nulldrv_RealizeDefaultPalette( PHYSDEV dev )
 {
     return 0;
 }
 
-static UINT nulldrv_RealizePalette( PHYSDEV dev, HPALETTE palette, BOOL primary )
+static UINT CDECL nulldrv_RealizePalette( PHYSDEV dev, HPALETTE palette, BOOL primary )
 {
     return 0;
 }
 
-static BOOL nulldrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+static BOOL CDECL nulldrv_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     return TRUE;
 }
 
-static HDC nulldrv_ResetDC( PHYSDEV dev, const DEVMODEW *devmode )
+static HDC CDECL nulldrv_ResetDC( PHYSDEV dev, const DEVMODEW *devmode )
 {
     return 0;
 }
 
-static BOOL nulldrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                               INT ell_width, INT ell_height )
+static BOOL CDECL nulldrv_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                     INT ell_width, INT ell_height )
 {
     return TRUE;
 }
 
-static HBITMAP nulldrv_SelectBitmap( PHYSDEV dev, HBITMAP bitmap )
+static HBITMAP CDECL nulldrv_SelectBitmap( PHYSDEV dev, HBITMAP bitmap )
 {
     return bitmap;
 }
 
-static HBRUSH nulldrv_SelectBrush( PHYSDEV dev, HBRUSH brush, const struct brush_pattern *pattern )
+static HBRUSH CDECL nulldrv_SelectBrush( PHYSDEV dev, HBRUSH brush, const struct brush_pattern *pattern )
 {
     return brush;
 }
 
-static HPALETTE nulldrv_SelectPalette( PHYSDEV dev, HPALETTE palette, BOOL bkgnd )
+static HPALETTE CDECL nulldrv_SelectPalette( PHYSDEV dev, HPALETTE palette, BOOL bkgnd )
 {
     return palette;
 }
 
-static HPEN nulldrv_SelectPen( PHYSDEV dev, HPEN pen, const struct brush_pattern *pattern )
+static HPEN CDECL nulldrv_SelectPen( PHYSDEV dev, HPEN pen, const struct brush_pattern *pattern )
 {
     return pen;
 }
 
-static INT nulldrv_SetArcDirection( PHYSDEV dev, INT dir )
+static INT CDECL nulldrv_SetArcDirection( PHYSDEV dev, INT dir )
 {
     return dir;
 }
 
-static COLORREF nulldrv_SetBkColor( PHYSDEV dev, COLORREF color )
+static COLORREF CDECL nulldrv_SetBkColor( PHYSDEV dev, COLORREF color )
 {
     return color;
 }
 
-static INT nulldrv_SetBkMode( PHYSDEV dev, INT mode )
+static INT CDECL nulldrv_SetBkMode( PHYSDEV dev, INT mode )
 {
     return mode;
 }
 
-static UINT nulldrv_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
+static UINT CDECL nulldrv_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 {
     return DCB_RESET;
 }
 
-static COLORREF nulldrv_SetDCBrushColor( PHYSDEV dev, COLORREF color )
+static COLORREF CDECL nulldrv_SetDCBrushColor( PHYSDEV dev, COLORREF color )
 {
     return color;
 }
 
-static COLORREF nulldrv_SetDCPenColor( PHYSDEV dev, COLORREF color )
+static COLORREF CDECL nulldrv_SetDCPenColor( PHYSDEV dev, COLORREF color )
 {
     return color;
 }
 
-static void nulldrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
+static void CDECL nulldrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
 {
 }
 
-static DWORD nulldrv_SetLayout( PHYSDEV dev, DWORD layout )
+static DWORD CDECL nulldrv_SetLayout( PHYSDEV dev, DWORD layout )
 {
     return layout;
 }
 
-static BOOL nulldrv_SetDeviceGammaRamp( PHYSDEV dev, void *ramp )
+static BOOL CDECL nulldrv_SetDeviceGammaRamp( PHYSDEV dev, void *ramp )
 {
     SetLastError( ERROR_INVALID_PARAMETER );
     return FALSE;
 }
 
-static DWORD nulldrv_SetMapperFlags( PHYSDEV dev, DWORD flags )
+static DWORD CDECL nulldrv_SetMapperFlags( PHYSDEV dev, DWORD flags )
 {
     return flags;
 }
 
-static COLORREF nulldrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
+static COLORREF CDECL nulldrv_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 {
     return color;
 }
 
-static INT nulldrv_SetPolyFillMode( PHYSDEV dev, INT mode )
+static INT CDECL nulldrv_SetPolyFillMode( PHYSDEV dev, INT mode )
 {
     return mode;
 }
 
-static INT nulldrv_SetROP2( PHYSDEV dev, INT rop )
+static INT CDECL nulldrv_SetROP2( PHYSDEV dev, INT rop )
 {
     return rop;
 }
 
-static INT nulldrv_SetRelAbs( PHYSDEV dev, INT mode )
+static INT CDECL nulldrv_SetRelAbs( PHYSDEV dev, INT mode )
 {
     return mode;
 }
 
-static INT nulldrv_SetStretchBltMode( PHYSDEV dev, INT mode )
+static INT CDECL nulldrv_SetStretchBltMode( PHYSDEV dev, INT mode )
 {
     return mode;
 }
 
-static UINT nulldrv_SetTextAlign( PHYSDEV dev, UINT align )
+static UINT CDECL nulldrv_SetTextAlign( PHYSDEV dev, UINT align )
 {
     return align;
 }
 
-static INT nulldrv_SetTextCharacterExtra( PHYSDEV dev, INT extra )
+static INT CDECL nulldrv_SetTextCharacterExtra( PHYSDEV dev, INT extra )
 {
     return extra;
 }
 
-static COLORREF nulldrv_SetTextColor( PHYSDEV dev, COLORREF color )
+static COLORREF CDECL nulldrv_SetTextColor( PHYSDEV dev, COLORREF color )
 {
     return color;
 }
 
-static BOOL nulldrv_SetTextJustification( PHYSDEV dev, INT extra, INT breaks )
+static BOOL CDECL nulldrv_SetTextJustification( PHYSDEV dev, INT extra, INT breaks )
 {
     return TRUE;
 }
 
-static INT nulldrv_StartDoc( PHYSDEV dev, const DOCINFOW *info )
+static INT CDECL nulldrv_StartDoc( PHYSDEV dev, const DOCINFOW *info )
 {
     return 0;
 }
 
-static INT nulldrv_StartPage( PHYSDEV dev )
+static INT CDECL nulldrv_StartPage( PHYSDEV dev )
 {
     return 1;
 }
 
-static BOOL nulldrv_UnrealizePalette( HPALETTE palette )
+static BOOL CDECL nulldrv_UnrealizePalette( HPALETTE palette )
 {
     return FALSE;
 }
 
-static struct opengl_funcs *nulldrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
+static struct opengl_funcs * CDECL nulldrv_wine_get_wgl_driver( PHYSDEV dev, UINT version )
 {
     return (void *)-1;
 }
 
-static const struct vulkan_funcs *nulldrv_wine_get_vulkan_driver( PHYSDEV dev, UINT version )
+static const struct vulkan_funcs * CDECL nulldrv_wine_get_vulkan_driver( PHYSDEV dev, UINT version )
 {
     return NULL;
 }
diff --git a/dlls/gdi32/enhmfdrv/bitblt.c b/dlls/gdi32/enhmfdrv/bitblt.c
index ed03c1f09b..1fc5c0b104 100644
--- a/dlls/gdi32/enhmfdrv/bitblt.c
+++ b/dlls/gdi32/enhmfdrv/bitblt.c
@@ -27,7 +27,7 @@
 #include "enhmetafiledrv.h"
 #include "wine/debug.h"
 
-BOOL EMFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
+BOOL CDECL EMFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 {
     EMRBITBLT emr;
     BOOL ret;
@@ -64,8 +64,8 @@ BOOL EMFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
     return ret;
 }
 
-BOOL EMFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
-                        PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop )
+BOOL CDECL EMFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
+                              PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop )
 {
     BOOL ret;
     PEMRBITBLT pEMR;
@@ -169,9 +169,9 @@ BOOL EMFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
     return ret;
 }
 
-INT EMFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
-                          INT xSrc, INT ySrc, INT widthSrc, INT heightSrc, const void *bits,
-                          BITMAPINFO *info, UINT wUsage, DWORD dwRop )
+INT CDECL EMFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
+                                INT xSrc, INT ySrc, INT widthSrc, INT heightSrc, const void *bits,
+                                BITMAPINFO *info, UINT wUsage, DWORD dwRop )
 {
     EMRSTRETCHDIBITS *emr;
     BOOL ret;
@@ -226,9 +226,9 @@ INT EMFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT hei
     return ret ? heightSrc : GDI_ERROR;
 }
 
-INT EMFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDst, INT yDst, DWORD width, DWORD height,
-                              INT xSrc, INT ySrc, UINT startscan, UINT lines,
-                              LPCVOID bits, BITMAPINFO *info, UINT wUsage )
+INT CDECL EMFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDst, INT yDst, DWORD width, DWORD height,
+                                    INT xSrc, INT ySrc, UINT startscan, UINT lines,
+                                    LPCVOID bits, BITMAPINFO *info, UINT wUsage )
 {
     EMRSETDIBITSTODEVICE* pEMR;
     DWORD bmiSize = get_dib_info_size(info, wUsage);
diff --git a/dlls/gdi32/enhmfdrv/dc.c b/dlls/gdi32/enhmfdrv/dc.c
index 960d1b295c..18047b399c 100644
--- a/dlls/gdi32/enhmfdrv/dc.c
+++ b/dlls/gdi32/enhmfdrv/dc.c
@@ -30,7 +30,7 @@ static inline PHYSDEV get_emfdev( PHYSDEV path )
 
 static const struct gdi_dc_funcs emfpath_driver;
 
-INT EMFDRV_SaveDC( PHYSDEV dev )
+INT CDECL EMFDRV_SaveDC( PHYSDEV dev )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSaveDC );
     INT ret = next->funcs->pSaveDC( next );
@@ -45,7 +45,7 @@ INT EMFDRV_SaveDC( PHYSDEV dev )
     return ret;
 }
 
-BOOL EMFDRV_RestoreDC( PHYSDEV dev, INT level )
+BOOL CDECL EMFDRV_RestoreDC( PHYSDEV dev, INT level )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pRestoreDC );
     EMFDRV_PDEVICE* physDev = get_emf_physdev( dev );
@@ -69,7 +69,7 @@ BOOL EMFDRV_RestoreDC( PHYSDEV dev, INT level )
     return ret;
 }
 
-UINT EMFDRV_SetTextAlign( PHYSDEV dev, UINT align )
+UINT CDECL EMFDRV_SetTextAlign( PHYSDEV dev, UINT align )
 {
     EMRSETTEXTALIGN emr;
     emr.emr.iType = EMR_SETTEXTALIGN;
@@ -78,7 +78,7 @@ UINT EMFDRV_SetTextAlign( PHYSDEV dev, UINT align )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? align : GDI_ERROR;
 }
 
-BOOL EMFDRV_SetTextJustification(PHYSDEV dev, INT nBreakExtra, INT nBreakCount)
+BOOL CDECL EMFDRV_SetTextJustification(PHYSDEV dev, INT nBreakExtra, INT nBreakCount)
 {
     EMRSETTEXTJUSTIFICATION emr;
     emr.emr.iType = EMR_SETTEXTJUSTIFICATION;
@@ -88,7 +88,7 @@ BOOL EMFDRV_SetTextJustification(PHYSDEV dev, INT nBreakExtra, INT nBreakCount)
     return EMFDRV_WriteRecord(dev, &emr.emr);
 }
 
-INT EMFDRV_SetBkMode( PHYSDEV dev, INT mode )
+INT CDECL EMFDRV_SetBkMode( PHYSDEV dev, INT mode )
 {
     EMRSETBKMODE emr;
     emr.emr.iType = EMR_SETBKMODE;
@@ -97,7 +97,7 @@ INT EMFDRV_SetBkMode( PHYSDEV dev, INT mode )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? mode : 0;
 }
 
-COLORREF EMFDRV_SetBkColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL EMFDRV_SetBkColor( PHYSDEV dev, COLORREF color )
 {
     EMRSETBKCOLOR emr;
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
@@ -111,7 +111,7 @@ COLORREF EMFDRV_SetBkColor( PHYSDEV dev, COLORREF color )
 }
 
 
-COLORREF EMFDRV_SetTextColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL EMFDRV_SetTextColor( PHYSDEV dev, COLORREF color )
 {
     EMRSETTEXTCOLOR emr;
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
@@ -124,7 +124,7 @@ COLORREF EMFDRV_SetTextColor( PHYSDEV dev, COLORREF color )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? color : CLR_INVALID;
 }
 
-INT EMFDRV_SetROP2( PHYSDEV dev, INT rop )
+INT CDECL EMFDRV_SetROP2( PHYSDEV dev, INT rop )
 {
     EMRSETROP2 emr;
     emr.emr.iType = EMR_SETROP2;
@@ -133,7 +133,7 @@ INT EMFDRV_SetROP2( PHYSDEV dev, INT rop )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? rop : 0;
 }
 
-INT EMFDRV_SetPolyFillMode( PHYSDEV dev, INT mode )
+INT CDECL EMFDRV_SetPolyFillMode( PHYSDEV dev, INT mode )
 {
     EMRSETPOLYFILLMODE emr;
     emr.emr.iType = EMR_SETPOLYFILLMODE;
@@ -142,7 +142,7 @@ INT EMFDRV_SetPolyFillMode( PHYSDEV dev, INT mode )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? mode : 0;
 }
 
-INT EMFDRV_SetStretchBltMode( PHYSDEV dev, INT mode )
+INT CDECL EMFDRV_SetStretchBltMode( PHYSDEV dev, INT mode )
 {
     EMRSETSTRETCHBLTMODE emr;
     emr.emr.iType = EMR_SETSTRETCHBLTMODE;
@@ -151,7 +151,7 @@ INT EMFDRV_SetStretchBltMode( PHYSDEV dev, INT mode )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? mode : 0;
 }
 
-INT EMFDRV_SetArcDirection(PHYSDEV dev, INT arcDirection)
+INT CDECL EMFDRV_SetArcDirection(PHYSDEV dev, INT arcDirection)
 {
     EMRSETARCDIRECTION emr;
 
@@ -161,7 +161,7 @@ INT EMFDRV_SetArcDirection(PHYSDEV dev, INT arcDirection)
     return EMFDRV_WriteRecord(dev, &emr.emr) ? arcDirection : 0;
 }
 
-INT EMFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+INT CDECL EMFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pExcludeClipRect );
     EMREXCLUDECLIPRECT emr;
@@ -176,7 +176,7 @@ INT EMFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT botto
     return next->funcs->pExcludeClipRect( next, left, top, right, bottom );
 }
 
-INT EMFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom)
+INT CDECL EMFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pIntersectClipRect );
     EMRINTERSECTCLIPRECT emr;
@@ -191,7 +191,7 @@ INT EMFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bot
     return next->funcs->pIntersectClipRect( next, left, top, right, bottom );
 }
 
-INT EMFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y )
+INT CDECL EMFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pOffsetClipRgn );
     EMROFFSETCLIPRGN emr;
@@ -204,7 +204,7 @@ INT EMFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y )
     return next->funcs->pOffsetClipRgn( next, x, y );
 }
 
-INT EMFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode )
+INT CDECL EMFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pExtSelectClipRgn );
     EMREXTSELECTCLIPRGN *emr;
@@ -232,7 +232,7 @@ INT EMFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode )
     return ret ? next->funcs->pExtSelectClipRgn( next, hrgn, mode ) : ERROR;
 }
 
-INT EMFDRV_SetMapMode( PHYSDEV dev, INT mode )
+INT CDECL EMFDRV_SetMapMode( PHYSDEV dev, INT mode )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSetMapMode );
     EMRSETMAPMODE emr;
@@ -244,7 +244,7 @@ INT EMFDRV_SetMapMode( PHYSDEV dev, INT mode )
     return next->funcs->pSetMapMode( next, mode );
 }
 
-BOOL EMFDRV_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
+BOOL CDECL EMFDRV_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSetViewportExtEx );
     EMRSETVIEWPORTEXTEX emr;
@@ -258,7 +258,7 @@ BOOL EMFDRV_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
     return next->funcs->pSetViewportExtEx( next, cx, cy, size );
 }
 
-BOOL EMFDRV_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
+BOOL CDECL EMFDRV_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSetWindowExtEx );
     EMRSETWINDOWEXTEX emr;
@@ -272,7 +272,7 @@ BOOL EMFDRV_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
     return next->funcs->pSetWindowExtEx( next, cx, cy, size );
 }
 
-BOOL EMFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL EMFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSetViewportOrgEx );
     EMRSETVIEWPORTORGEX emr;
@@ -286,7 +286,7 @@ BOOL EMFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return next->funcs->pSetViewportOrgEx( next, x, y, pt );
 }
 
-BOOL EMFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL EMFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSetWindowOrgEx );
     EMRSETWINDOWORGEX emr;
@@ -300,7 +300,7 @@ BOOL EMFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return next->funcs->pSetWindowOrgEx( next, x, y, pt );
 }
 
-BOOL EMFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
+BOOL CDECL EMFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pScaleViewportExtEx );
     EMRSCALEVIEWPORTEXTEX emr;
@@ -316,7 +316,7 @@ BOOL EMFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT
     return next->funcs->pScaleViewportExtEx( next, xNum, xDenom, yNum, yDenom, size );
 }
 
-BOOL EMFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
+BOOL CDECL EMFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pScaleWindowExtEx );
     EMRSCALEWINDOWEXTEX emr;
@@ -332,7 +332,7 @@ BOOL EMFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT y
     return next->funcs->pScaleWindowExtEx( next, xNum, xDenom, yNum, yDenom, size );
 }
 
-DWORD EMFDRV_SetLayout( PHYSDEV dev, DWORD layout )
+DWORD CDECL EMFDRV_SetLayout( PHYSDEV dev, DWORD layout )
 {
     EMRSETLAYOUT emr;
 
@@ -342,7 +342,7 @@ DWORD EMFDRV_SetLayout( PHYSDEV dev, DWORD layout )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? layout : GDI_ERROR;
 }
 
-BOOL EMFDRV_SetWorldTransform( PHYSDEV dev, const XFORM *xform)
+BOOL CDECL EMFDRV_SetWorldTransform( PHYSDEV dev, const XFORM *xform)
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSetWorldTransform );
     EMRSETWORLDTRANSFORM emr;
@@ -355,7 +355,7 @@ BOOL EMFDRV_SetWorldTransform( PHYSDEV dev, const XFORM *xform)
     return next->funcs->pSetWorldTransform( next, xform );
 }
 
-BOOL EMFDRV_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode)
+BOOL CDECL EMFDRV_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode)
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pModifyWorldTransform );
     EMRMODIFYWORLDTRANSFORM emr;
@@ -369,7 +369,7 @@ BOOL EMFDRV_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode)
     return next->funcs->pModifyWorldTransform( next, xform, mode );
 }
 
-BOOL EMFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL EMFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pOffsetViewportOrgEx );
     EMRSETVIEWPORTORGEX emr;
@@ -386,7 +386,7 @@ BOOL EMFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return next->funcs->pOffsetViewportOrgEx( next, x, y, pt );
 }
 
-BOOL EMFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL EMFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pOffsetWindowOrgEx );
     EMRSETWINDOWORGEX emr;
@@ -403,7 +403,7 @@ BOOL EMFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return next->funcs->pOffsetWindowOrgEx( next, x, y, pt );
 }
 
-DWORD EMFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags )
+DWORD CDECL EMFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags )
 {
     EMRSETMAPPERFLAGS emr;
 
@@ -414,7 +414,7 @@ DWORD EMFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags )
     return EMFDRV_WriteRecord( dev, &emr.emr ) ? flags : GDI_ERROR;
 }
 
-BOOL EMFDRV_AbortPath( PHYSDEV dev )
+BOOL CDECL EMFDRV_AbortPath( PHYSDEV dev )
 {
     EMRABORTPATH emr;
 
@@ -424,7 +424,7 @@ BOOL EMFDRV_AbortPath( PHYSDEV dev )
     return EMFDRV_WriteRecord( dev, &emr.emr );
 }
 
-BOOL EMFDRV_BeginPath( PHYSDEV dev )
+BOOL CDECL EMFDRV_BeginPath( PHYSDEV dev )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pBeginPath );
@@ -443,7 +443,7 @@ BOOL EMFDRV_BeginPath( PHYSDEV dev )
     return TRUE;
 }
 
-BOOL EMFDRV_CloseFigure( PHYSDEV dev )
+BOOL CDECL EMFDRV_CloseFigure( PHYSDEV dev )
 {
     EMRCLOSEFIGURE emr;
 
@@ -454,7 +454,7 @@ BOOL EMFDRV_CloseFigure( PHYSDEV dev )
     return FALSE;  /* always fails without a path */
 }
 
-BOOL EMFDRV_EndPath( PHYSDEV dev )
+BOOL CDECL EMFDRV_EndPath( PHYSDEV dev )
 {
     EMRENDPATH emr;
 
@@ -465,7 +465,7 @@ BOOL EMFDRV_EndPath( PHYSDEV dev )
     return FALSE;  /* always fails without a path */
 }
 
-BOOL EMFDRV_FlattenPath( PHYSDEV dev )
+BOOL CDECL EMFDRV_FlattenPath( PHYSDEV dev )
 {
     EMRFLATTENPATH emr;
 
@@ -475,7 +475,7 @@ BOOL EMFDRV_FlattenPath( PHYSDEV dev )
     return EMFDRV_WriteRecord( dev, &emr.emr );
 }
 
-BOOL EMFDRV_SelectClipPath( PHYSDEV dev, INT iMode )
+BOOL CDECL EMFDRV_SelectClipPath( PHYSDEV dev, INT iMode )
 {
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSelectClipPath );
     EMRSELECTCLIPPATH emr;
@@ -496,7 +496,7 @@ BOOL EMFDRV_SelectClipPath( PHYSDEV dev, INT iMode )
     return ret;
 }
 
-BOOL EMFDRV_WidenPath( PHYSDEV dev )
+BOOL CDECL EMFDRV_WidenPath( PHYSDEV dev )
 {
     EMRWIDENPATH emr;
 
@@ -506,7 +506,7 @@ BOOL EMFDRV_WidenPath( PHYSDEV dev )
     return EMFDRV_WriteRecord( dev, &emr.emr );
 }
 
-INT EMFDRV_GetDeviceCaps(PHYSDEV dev, INT cap)
+INT CDECL EMFDRV_GetDeviceCaps(PHYSDEV dev, INT cap)
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
 
@@ -519,7 +519,7 @@ INT EMFDRV_GetDeviceCaps(PHYSDEV dev, INT cap)
 /***********************************************************************
  *           emfpathdrv_AbortPath
  */
-static BOOL emfpathdrv_AbortPath( PHYSDEV dev )
+static BOOL CDECL emfpathdrv_AbortPath( PHYSDEV dev )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pAbortPath );
@@ -533,7 +533,7 @@ static BOOL emfpathdrv_AbortPath( PHYSDEV dev )
 /***********************************************************************
  *           emfpathdrv_AngleArc
  */
-static BOOL emfpathdrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep )
+static BOOL CDECL emfpathdrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pAngleArc );
@@ -545,8 +545,8 @@ static BOOL emfpathdrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT
 /***********************************************************************
  *           emfpathdrv_Arc
  */
-static BOOL emfpathdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                            INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL emfpathdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                  INT xstart, INT ystart, INT xend, INT yend )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pArc );
@@ -558,8 +558,8 @@ static BOOL emfpathdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT botto
 /***********************************************************************
  *           emfpathdrv_ArcTo
  */
-static BOOL emfpathdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                              INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL emfpathdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                    INT xstart, INT ystart, INT xend, INT yend )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pArcTo );
@@ -571,7 +571,7 @@ static BOOL emfpathdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bot
 /***********************************************************************
  *           emfpathdrv_BeginPath
  */
-static BOOL emfpathdrv_BeginPath( PHYSDEV dev )
+static BOOL CDECL emfpathdrv_BeginPath( PHYSDEV dev )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pBeginPath );
@@ -582,8 +582,8 @@ static BOOL emfpathdrv_BeginPath( PHYSDEV dev )
 /***********************************************************************
  *           emfpathdrv_Chord
  */
-static BOOL emfpathdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                              INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL emfpathdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                    INT xstart, INT ystart, INT xend, INT yend )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pChord );
@@ -595,7 +595,7 @@ static BOOL emfpathdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bot
 /***********************************************************************
  *           emfpathdrv_CloseFigure
  */
-static BOOL emfpathdrv_CloseFigure( PHYSDEV dev )
+static BOOL CDECL emfpathdrv_CloseFigure( PHYSDEV dev )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pCloseFigure );
@@ -607,8 +607,8 @@ static BOOL emfpathdrv_CloseFigure( PHYSDEV dev )
 /***********************************************************************
  *           emfpathdrv_CreateDC
  */
-static BOOL emfpathdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
-                                 LPCWSTR output, const DEVMODEW *devmode )
+static BOOL CDECL emfpathdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
+                                       LPCWSTR output, const DEVMODEW *devmode )
 {
     assert( 0 );  /* should never be called */
     return TRUE;
@@ -617,7 +617,7 @@ static BOOL emfpathdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
 /*************************************************************
  *           emfpathdrv_DeleteDC
  */
-static BOOL emfpathdrv_DeleteDC( PHYSDEV dev )
+static BOOL CDECL emfpathdrv_DeleteDC( PHYSDEV dev )
 {
     EMFDRV_PDEVICE *physdev = (EMFDRV_PDEVICE *)get_emfdev( dev );
 
@@ -628,7 +628,7 @@ static BOOL emfpathdrv_DeleteDC( PHYSDEV dev )
 /***********************************************************************
  *           emfpathdrv_Ellipse
  */
-static BOOL emfpathdrv_Ellipse( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
+static BOOL CDECL emfpathdrv_Ellipse( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pEllipse );
@@ -640,7 +640,7 @@ static BOOL emfpathdrv_Ellipse( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
 /***********************************************************************
  *           emfpathdrv_EndPath
  */
-static BOOL emfpathdrv_EndPath( PHYSDEV dev )
+static BOOL CDECL emfpathdrv_EndPath( PHYSDEV dev )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pEndPath );
@@ -654,8 +654,8 @@ static BOOL emfpathdrv_EndPath( PHYSDEV dev )
 /***********************************************************************
  *           emfpathdrv_ExtTextOut
  */
-static BOOL emfpathdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
-                                   LPCWSTR str, UINT count, const INT *dx )
+static BOOL CDECL emfpathdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
+                                         LPCWSTR str, UINT count, const INT *dx )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pExtTextOut );
@@ -667,7 +667,7 @@ static BOOL emfpathdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const
 /***********************************************************************
  *           emfpathdrv_LineTo
  */
-static BOOL emfpathdrv_LineTo( PHYSDEV dev, INT x, INT y )
+static BOOL CDECL emfpathdrv_LineTo( PHYSDEV dev, INT x, INT y )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pLineTo );
@@ -678,7 +678,7 @@ static BOOL emfpathdrv_LineTo( PHYSDEV dev, INT x, INT y )
 /***********************************************************************
  *           emfpathdrv_MoveTo
  */
-static BOOL emfpathdrv_MoveTo( PHYSDEV dev, INT x, INT y )
+static BOOL CDECL emfpathdrv_MoveTo( PHYSDEV dev, INT x, INT y )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pMoveTo );
@@ -689,8 +689,8 @@ static BOOL emfpathdrv_MoveTo( PHYSDEV dev, INT x, INT y )
 /***********************************************************************
  *           emfpathdrv_Pie
  */
-static BOOL emfpathdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                            INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL emfpathdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                  INT xstart, INT ystart, INT xend, INT yend )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPie );
@@ -702,7 +702,7 @@ static BOOL emfpathdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT botto
 /***********************************************************************
  *           emfpathdrv_PolyBezier
  */
-static BOOL emfpathdrv_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
+static BOOL CDECL emfpathdrv_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolyBezier );
@@ -714,7 +714,7 @@ static BOOL emfpathdrv_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
 /***********************************************************************
  *           emfpathdrv_PolyBezierTo
  */
-static BOOL emfpathdrv_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
+static BOOL CDECL emfpathdrv_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolyBezierTo );
@@ -726,7 +726,7 @@ static BOOL emfpathdrv_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count
 /***********************************************************************
  *           emfpathdrv_PolyDraw
  */
-static BOOL emfpathdrv_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD count )
+static BOOL CDECL emfpathdrv_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD count )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolyDraw );
@@ -738,7 +738,7 @@ static BOOL emfpathdrv_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *type
 /***********************************************************************
  *           emfpathdrv_PolyPolygon
  */
-static BOOL emfpathdrv_PolyPolygon( PHYSDEV dev, const POINT *pts, const INT *counts, UINT polygons )
+static BOOL CDECL emfpathdrv_PolyPolygon( PHYSDEV dev, const POINT *pts, const INT *counts, UINT polygons )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolyPolygon );
@@ -750,7 +750,7 @@ static BOOL emfpathdrv_PolyPolygon( PHYSDEV dev, const POINT *pts, const INT *co
 /***********************************************************************
  *           emfpathdrv_PolyPolyline
  */
-static BOOL emfpathdrv_PolyPolyline( PHYSDEV dev, const POINT *pts, const DWORD *counts, DWORD polylines )
+static BOOL CDECL emfpathdrv_PolyPolyline( PHYSDEV dev, const POINT *pts, const DWORD *counts, DWORD polylines )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolyPolyline );
@@ -762,7 +762,7 @@ static BOOL emfpathdrv_PolyPolyline( PHYSDEV dev, const POINT *pts, const DWORD
 /***********************************************************************
  *           emfpathdrv_Polygon
  */
-static BOOL emfpathdrv_Polygon( PHYSDEV dev, const POINT *pts, INT count )
+static BOOL CDECL emfpathdrv_Polygon( PHYSDEV dev, const POINT *pts, INT count )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolygon );
@@ -774,7 +774,7 @@ static BOOL emfpathdrv_Polygon( PHYSDEV dev, const POINT *pts, INT count )
 /***********************************************************************
  *           emfpathdrv_Polyline
  */
-static BOOL emfpathdrv_Polyline( PHYSDEV dev, const POINT *pts, INT count )
+static BOOL CDECL emfpathdrv_Polyline( PHYSDEV dev, const POINT *pts, INT count )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolyline );
@@ -786,7 +786,7 @@ static BOOL emfpathdrv_Polyline( PHYSDEV dev, const POINT *pts, INT count )
 /***********************************************************************
  *           emfpathdrv_PolylineTo
  */
-static BOOL emfpathdrv_PolylineTo( PHYSDEV dev, const POINT *pts, INT count )
+static BOOL CDECL emfpathdrv_PolylineTo( PHYSDEV dev, const POINT *pts, INT count )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pPolylineTo );
@@ -798,7 +798,7 @@ static BOOL emfpathdrv_PolylineTo( PHYSDEV dev, const POINT *pts, INT count )
 /***********************************************************************
  *           emfpathdrv_Rectangle
  */
-static BOOL emfpathdrv_Rectangle( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
+static BOOL CDECL emfpathdrv_Rectangle( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pRectangle );
@@ -810,8 +810,8 @@ static BOOL emfpathdrv_Rectangle( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
 /***********************************************************************
  *           emfpathdrv_RoundRect
  */
-static BOOL emfpathdrv_RoundRect( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2,
-                                  INT ell_width, INT ell_height )
+static BOOL CDECL emfpathdrv_RoundRect( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2,
+                                        INT ell_width, INT ell_height )
 {
     PHYSDEV emfdev = get_emfdev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pRoundRect );
diff --git a/dlls/gdi32/enhmfdrv/enhmetafiledrv.h b/dlls/gdi32/enhmfdrv/enhmetafiledrv.h
index 1763781d39..ec83d29c73 100644
--- a/dlls/gdi32/enhmfdrv/enhmetafiledrv.h
+++ b/dlls/gdi32/enhmfdrv/enhmetafiledrv.h
@@ -57,100 +57,100 @@ extern DWORD EMFDRV_CreateBrushIndirect( PHYSDEV dev, HBRUSH hBrush ) DECLSPEC_H
 #define HANDLE_LIST_INC 20
 
 /* Metafile driver functions */
-extern BOOL     EMFDRV_AbortPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right,
-                            INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_ArcTo( PHYSDEV dev, INT left, INT top, INT right,
-                              INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_BeginPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_BitBlt( PHYSDEV devDst, INT xDst, INT yDst, INT width, INT height,
-                               PHYSDEV devSrc, INT xSrc, INT ySrc, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                              INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_CloseFigure( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_EndPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect, LPCWSTR str,
-                                   UINT count, const INT *lpDx ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_FlattenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT width, INT height ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_GdiComment( PHYSDEV dev, UINT bytes, const BYTE *buffer ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_GetDeviceCaps( PHYSDEV dev, INT cap ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                                     void *grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_LineTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_MoveTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                            INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polys) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polys) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_Polyline( PHYSDEV dev, const POINT* pt,INT count) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_PolylineTo( PHYSDEV dev, const POINT* pt,INT count) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_RestoreDC( PHYSDEV dev, INT level ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                                  INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SaveDC( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom,
-                                           INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom,
-                                         INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
-extern HBITMAP  EMFDRV_SelectBitmap( PHYSDEV dev, HBITMAP handle ) DECLSPEC_HIDDEN;
-extern HBRUSH   EMFDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_SelectClipPath( PHYSDEV dev, INT iMode ) DECLSPEC_HIDDEN;
-extern HFONT    EMFDRV_SelectFont( PHYSDEV dev, HFONT handle, UINT *aa_flags ) DECLSPEC_HIDDEN;
-extern HPEN     EMFDRV_SelectPen( PHYSDEV dev, HPEN handle, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern HPALETTE EMFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPal, BOOL force ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SetArcDirection( PHYSDEV dev, INT arcDirection ) DECLSPEC_HIDDEN;
-extern COLORREF EMFDRV_SetBkColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SetBkMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern COLORREF EMFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF EMFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDest, INT yDest, DWORD cx, DWORD cy, INT xSrc,
-                                          INT ySrc, UINT startscan, UINT lines, LPCVOID bits,
-                                          BITMAPINFO *info, UINT coloruse ) DECLSPEC_HIDDEN;
-extern DWORD    EMFDRV_SetLayout( PHYSDEV dev, DWORD layout ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SetMapMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern DWORD    EMFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags ) DECLSPEC_HIDDEN;
-extern COLORREF EMFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SetPolyFillMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SetROP2( PHYSDEV dev, INT rop ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_SetStretchBltMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern UINT     EMFDRV_SetTextAlign( PHYSDEV dev, UINT align ) DECLSPEC_HIDDEN;
-extern COLORREF EMFDRV_SetTextColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_SetTextJustification( PHYSDEV dev, INT nBreakExtra, INT nBreakCount ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_SetViewportExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_SetWindowExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_SetWorldTransform( PHYSDEV dev, const XFORM *xform ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
-                                   PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
-extern INT      EMFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
-                                      INT xSrc, INT ySrc, INT widthSrc, INT heightSrc,
-                                      const void *bits, BITMAPINFO *info, UINT wUsage, DWORD dwRop ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL     EMFDRV_WidenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_AbortPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right,
+                                  INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_ArcTo( PHYSDEV dev, INT left, INT top, INT right,
+                                    INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_BeginPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_BitBlt( PHYSDEV devDst, INT xDst, INT yDst, INT width, INT height,
+                                     PHYSDEV devSrc, INT xSrc, INT ySrc, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                    INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_CloseFigure( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_EndPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect, LPCWSTR str,
+                                         UINT count, const INT *lpDx ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_FlattenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT width, INT height ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_GdiComment( PHYSDEV dev, UINT bytes, const BYTE *buffer ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_GetDeviceCaps( PHYSDEV dev, INT cap ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                           void *grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_LineTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_MoveTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                  INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polys) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polys) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_Polyline( PHYSDEV dev, const POINT* pt,INT count) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_PolylineTo( PHYSDEV dev, const POINT* pt,INT count) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_RestoreDC( PHYSDEV dev, INT level ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                        INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SaveDC( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom,
+                                                 INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom,
+                                               INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
+extern HBITMAP  CDECL EMFDRV_SelectBitmap( PHYSDEV dev, HBITMAP handle ) DECLSPEC_HIDDEN;
+extern HBRUSH   CDECL EMFDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_SelectClipPath( PHYSDEV dev, INT iMode ) DECLSPEC_HIDDEN;
+extern HFONT    CDECL EMFDRV_SelectFont( PHYSDEV dev, HFONT handle, UINT *aa_flags ) DECLSPEC_HIDDEN;
+extern HPEN     CDECL EMFDRV_SelectPen( PHYSDEV dev, HPEN handle, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern HPALETTE CDECL EMFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPal, BOOL force ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SetArcDirection( PHYSDEV dev, INT arcDirection ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL EMFDRV_SetBkColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SetBkMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL EMFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL EMFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDest, INT yDest, DWORD cx, DWORD cy, INT xSrc,
+                                                INT ySrc, UINT startscan, UINT lines, LPCVOID bits,
+                                                BITMAPINFO *info, UINT coloruse ) DECLSPEC_HIDDEN;
+extern DWORD    CDECL EMFDRV_SetLayout( PHYSDEV dev, DWORD layout ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SetMapMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern DWORD    CDECL EMFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL EMFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SetPolyFillMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SetROP2( PHYSDEV dev, INT rop ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_SetStretchBltMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern UINT     CDECL EMFDRV_SetTextAlign( PHYSDEV dev, UINT align ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL EMFDRV_SetTextColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_SetTextJustification( PHYSDEV dev, INT nBreakExtra, INT nBreakCount ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_SetViewportExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_SetWindowExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_SetWorldTransform( PHYSDEV dev, const XFORM *xform ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
+                                         PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
+extern INT      CDECL EMFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
+                                            INT xSrc, INT ySrc, INT widthSrc, INT heightSrc,
+                                            const void *bits, BITMAPINFO *info, UINT wUsage, DWORD dwRop ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL     CDECL EMFDRV_WidenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
 
 
 #endif  /* __WINE_METAFILEDRV_H */
diff --git a/dlls/gdi32/enhmfdrv/graphics.c b/dlls/gdi32/enhmfdrv/graphics.c
index 68bf4d29d4..ed4254096a 100644
--- a/dlls/gdi32/enhmfdrv/graphics.c
+++ b/dlls/gdi32/enhmfdrv/graphics.c
@@ -123,7 +123,7 @@ static BOOL emfdrv_stroke_and_fill_path( PHYSDEV dev, INT type )
 /**********************************************************************
  *	     EMFDRV_MoveTo
  */
-BOOL EMFDRV_MoveTo(PHYSDEV dev, INT x, INT y)
+BOOL CDECL EMFDRV_MoveTo(PHYSDEV dev, INT x, INT y)
 {
     EMRMOVETOEX emr;
 
@@ -138,7 +138,7 @@ BOOL EMFDRV_MoveTo(PHYSDEV dev, INT x, INT y)
 /***********************************************************************
  *           EMFDRV_LineTo
  */
-BOOL EMFDRV_LineTo( PHYSDEV dev, INT x, INT y )
+BOOL CDECL EMFDRV_LineTo( PHYSDEV dev, INT x, INT y )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -286,8 +286,8 @@ EMFDRV_ArcChordPie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           EMFDRV_Arc
  */
-BOOL EMFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                 INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL EMFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                       INT xstart, INT ystart, INT xend, INT yend )
 {
     return EMFDRV_ArcChordPie( dev, left, top, right, bottom, xstart, ystart,
 			       xend, yend, EMR_ARC );
@@ -296,8 +296,8 @@ BOOL EMFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           EMFDRV_ArcTo
  */
-BOOL EMFDRV_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                   INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL EMFDRV_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                         INT xstart, INT ystart, INT xend, INT yend )
 {
     return EMFDRV_ArcChordPie( dev, left, top, right, bottom, xstart, ystart,
 			       xend, yend, EMR_ARCTO );
@@ -306,8 +306,8 @@ BOOL EMFDRV_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           EMFDRV_Pie
  */
-BOOL EMFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                 INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL EMFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                       INT xstart, INT ystart, INT xend, INT yend )
 {
     return EMFDRV_ArcChordPie( dev, left, top, right, bottom, xstart, ystart,
 			       xend, yend, EMR_PIE );
@@ -317,8 +317,8 @@ BOOL EMFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           EMFDRV_Chord
  */
-BOOL EMFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                   INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL EMFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                         INT xstart, INT ystart, INT xend, INT yend )
 {
     return EMFDRV_ArcChordPie( dev, left, top, right, bottom, xstart, ystart,
 			       xend, yend, EMR_CHORD );
@@ -327,7 +327,7 @@ BOOL EMFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           EMFDRV_AngleArc
  */
-BOOL EMFDRV_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep )
+BOOL CDECL EMFDRV_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep )
 {
     EMRANGLEARC emr;
 
@@ -345,7 +345,7 @@ BOOL EMFDRV_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOA
 /***********************************************************************
  *           EMFDRV_Ellipse
  */
-BOOL EMFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+BOOL CDECL EMFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -379,7 +379,7 @@ BOOL EMFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 /***********************************************************************
  *           EMFDRV_Rectangle
  */
-BOOL EMFDRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
+BOOL CDECL EMFDRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -413,8 +413,8 @@ BOOL EMFDRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 /***********************************************************************
  *           EMFDRV_RoundRect
  */
-BOOL EMFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
-		  INT bottom, INT ell_width, INT ell_height )
+BOOL CDECL EMFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
+                             INT bottom, INT ell_width, INT ell_height )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -448,7 +448,7 @@ BOOL EMFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
 /***********************************************************************
  *           EMFDRV_SetPixel
  */
-COLORREF EMFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
+COLORREF CDECL EMFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 {
     EMRSETPIXELV emr;
 
@@ -508,7 +508,7 @@ EMFDRV_Polylinegon( PHYSDEV dev, const POINT* pt, INT count, DWORD iType )
 /**********************************************************************
  *          EMFDRV_Polyline
  */
-BOOL EMFDRV_Polyline( PHYSDEV dev, const POINT* pt, INT count )
+BOOL CDECL EMFDRV_Polyline( PHYSDEV dev, const POINT* pt, INT count )
 {
     return EMFDRV_Polylinegon( dev, pt, count, EMR_POLYLINE );
 }
@@ -516,7 +516,7 @@ BOOL EMFDRV_Polyline( PHYSDEV dev, const POINT* pt, INT count )
 /**********************************************************************
  *          EMFDRV_PolylineTo
  */
-BOOL EMFDRV_PolylineTo( PHYSDEV dev, const POINT* pt, INT count )
+BOOL CDECL EMFDRV_PolylineTo( PHYSDEV dev, const POINT* pt, INT count )
 {
     return EMFDRV_Polylinegon( dev, pt, count, EMR_POLYLINETO );
 }
@@ -524,7 +524,7 @@ BOOL EMFDRV_PolylineTo( PHYSDEV dev, const POINT* pt, INT count )
 /**********************************************************************
  *          EMFDRV_Polygon
  */
-BOOL EMFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
+BOOL CDECL EMFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
 {
     if(count < 2) return FALSE;
     return EMFDRV_Polylinegon( dev, pt, count, EMR_POLYGON );
@@ -533,7 +533,7 @@ BOOL EMFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
 /**********************************************************************
  *          EMFDRV_PolyBezier
  */
-BOOL EMFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
+BOOL CDECL EMFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     return EMFDRV_Polylinegon( dev, pts, count, EMR_POLYBEZIER );
 }
@@ -541,7 +541,7 @@ BOOL EMFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
 /**********************************************************************
  *          EMFDRV_PolyBezierTo
  */
-BOOL EMFDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
+BOOL CDECL EMFDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     return EMFDRV_Polylinegon( dev, pts, count, EMR_POLYBEZIERTO );
 }
@@ -608,7 +608,7 @@ EMFDRV_PolyPolylinegon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT po
 /**********************************************************************
  *          EMFDRV_PolyPolyline
  */
-BOOL EMFDRV_PolyPolyline(PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polys)
+BOOL CDECL EMFDRV_PolyPolyline(PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polys)
 {
     return EMFDRV_PolyPolylinegon( dev, pt, (const INT *)counts, polys,
 				   EMR_POLYPOLYLINE );
@@ -617,7 +617,7 @@ BOOL EMFDRV_PolyPolyline(PHYSDEV dev, const POINT* pt, const DWORD* counts, DWOR
 /**********************************************************************
  *          EMFDRV_PolyPolygon
  */
-BOOL EMFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polys )
+BOOL CDECL EMFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polys )
 {
     return EMFDRV_PolyPolylinegon( dev, pt, counts, polys, EMR_POLYPOLYGON );
 }
@@ -626,7 +626,7 @@ BOOL EMFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT p
 /**********************************************************************
  *          EMFDRV_PolyDraw
  */
-BOOL EMFDRV_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD count )
+BOOL CDECL EMFDRV_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD count )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     EMRPOLYDRAW *emr;
@@ -663,7 +663,7 @@ BOOL EMFDRV_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD co
 /**********************************************************************
  *          EMFDRV_ExtFloodFill
  */
-BOOL EMFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType )
+BOOL CDECL EMFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType )
 {
     EMREXTFLOODFILL emr;
 
@@ -681,7 +681,7 @@ BOOL EMFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillTy
 /*********************************************************************
  *          EMFDRV_FillRgn
  */
-BOOL EMFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush )
+BOOL CDECL EMFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush )
 {
     EMRFILLRGN *emr;
     DWORD size, rgnsize, index;
@@ -714,7 +714,7 @@ BOOL EMFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush )
 /*********************************************************************
  *          EMFDRV_FrameRgn
  */
-BOOL EMFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT width, INT height )
+BOOL CDECL EMFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT width, INT height )
 {
     EMRFRAMERGN *emr;
     DWORD size, rgnsize, index;
@@ -783,7 +783,7 @@ static BOOL EMFDRV_PaintInvertRgn( PHYSDEV dev, HRGN hrgn, DWORD iType )
 /**********************************************************************
  *          EMFDRV_PaintRgn
  */
-BOOL EMFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
+BOOL CDECL EMFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
 {
     return EMFDRV_PaintInvertRgn( dev, hrgn, EMR_PAINTRGN );
 }
@@ -791,7 +791,7 @@ BOOL EMFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
 /**********************************************************************
  *          EMFDRV_InvertRgn
  */
-BOOL EMFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn )
+BOOL CDECL EMFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn )
 {
     return EMFDRV_PaintInvertRgn( dev, hrgn, EMR_INVERTRGN );
 }
@@ -799,8 +799,8 @@ BOOL EMFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn )
 /**********************************************************************
  *          EMFDRV_ExtTextOut
  */
-BOOL EMFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect,
-                        LPCWSTR str, UINT count, const INT *lpDx )
+BOOL CDECL EMFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect,
+                              LPCWSTR str, UINT count, const INT *lpDx )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -942,8 +942,8 @@ no_bounds:
 /**********************************************************************
  *          EMFDRV_GradientFill
  */
-BOOL EMFDRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                          void *grad_array, ULONG ngrad, ULONG mode )
+BOOL CDECL EMFDRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                void *grad_array, ULONG ngrad, ULONG mode )
 {
     EMRGRADIENTFILL *emr;
     ULONG i, pt, size, num_pts = ngrad * (mode == GRADIENT_FILL_TRIANGLE ? 3 : 2);
@@ -996,7 +996,7 @@ BOOL EMFDRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
 /**********************************************************************
  *	     EMFDRV_FillPath
  */
-BOOL EMFDRV_FillPath( PHYSDEV dev )
+BOOL CDECL EMFDRV_FillPath( PHYSDEV dev )
 {
     return emfdrv_stroke_and_fill_path( dev, EMR_FILLPATH );
 }
@@ -1004,7 +1004,7 @@ BOOL EMFDRV_FillPath( PHYSDEV dev )
 /**********************************************************************
  *	     EMFDRV_StrokeAndFillPath
  */
-BOOL EMFDRV_StrokeAndFillPath( PHYSDEV dev )
+BOOL CDECL EMFDRV_StrokeAndFillPath( PHYSDEV dev )
 {
     return emfdrv_stroke_and_fill_path( dev, EMR_STROKEANDFILLPATH );
 }
@@ -1012,7 +1012,7 @@ BOOL EMFDRV_StrokeAndFillPath( PHYSDEV dev )
 /**********************************************************************
  *           EMFDRV_StrokePath
  */
-BOOL EMFDRV_StrokePath( PHYSDEV dev )
+BOOL CDECL EMFDRV_StrokePath( PHYSDEV dev )
 {
     return emfdrv_stroke_and_fill_path( dev, EMR_STROKEPATH );
 }
diff --git a/dlls/gdi32/enhmfdrv/init.c b/dlls/gdi32/enhmfdrv/init.c
index 1cd838ab8e..177b186057 100644
--- a/dlls/gdi32/enhmfdrv/init.c
+++ b/dlls/gdi32/enhmfdrv/init.c
@@ -32,7 +32,7 @@
 
 WINE_DEFAULT_DEBUG_CHANNEL(enhmetafile);
 
-static BOOL EMFDRV_DeleteDC( PHYSDEV dev );
+static BOOL CDECL EMFDRV_DeleteDC( PHYSDEV dev );
 
 static const struct gdi_dc_funcs emfdrv_driver =
 {
@@ -172,7 +172,7 @@ static const struct gdi_dc_funcs emfdrv_driver =
 /**********************************************************************
  *	     EMFDRV_DeleteDC
  */
-static BOOL EMFDRV_DeleteDC( PHYSDEV dev )
+static BOOL CDECL EMFDRV_DeleteDC( PHYSDEV dev )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     UINT index;
diff --git a/dlls/gdi32/enhmfdrv/objects.c b/dlls/gdi32/enhmfdrv/objects.c
index c5b96824b7..e21dfe2a47 100644
--- a/dlls/gdi32/enhmfdrv/objects.c
+++ b/dlls/gdi32/enhmfdrv/objects.c
@@ -74,7 +74,7 @@ static UINT EMFDRV_FindObject( PHYSDEV dev, HGDIOBJ obj )
 /******************************************************************
  *         EMFDRV_DeleteObject
  */
-BOOL EMFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj )
+BOOL CDECL EMFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj )
 {
     EMRDELETEOBJECT emr;
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
@@ -99,7 +99,7 @@ BOOL EMFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj )
 /***********************************************************************
  *           EMFDRV_SelectBitmap
  */
-HBITMAP EMFDRV_SelectBitmap( PHYSDEV dev, HBITMAP hbitmap )
+HBITMAP CDECL EMFDRV_SelectBitmap( PHYSDEV dev, HBITMAP hbitmap )
 {
     return 0;
 }
@@ -198,7 +198,7 @@ DWORD EMFDRV_CreateBrushIndirect( PHYSDEV dev, HBRUSH hBrush )
 /***********************************************************************
  *           EMFDRV_SelectBrush
  */
-HBRUSH EMFDRV_SelectBrush( PHYSDEV dev, HBRUSH hBrush, const struct brush_pattern *pattern )
+HBRUSH CDECL EMFDRV_SelectBrush( PHYSDEV dev, HBRUSH hBrush, const struct brush_pattern *pattern )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     EMRSELECTOBJECT emr;
@@ -277,7 +277,7 @@ static BOOL EMFDRV_CreateFontIndirect(PHYSDEV dev, HFONT hFont )
 /***********************************************************************
  *           EMFDRV_SelectFont
  */
-HFONT EMFDRV_SelectFont( PHYSDEV dev, HFONT hFont, UINT *aa_flags )
+HFONT CDECL EMFDRV_SelectFont( PHYSDEV dev, HFONT hFont, UINT *aa_flags )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     EMRSELECTOBJECT emr;
@@ -362,7 +362,7 @@ static DWORD EMFDRV_CreatePenIndirect(PHYSDEV dev, HPEN hPen)
 /******************************************************************
  *         EMFDRV_SelectPen
  */
-HPEN EMFDRV_SelectPen(PHYSDEV dev, HPEN hPen, const struct brush_pattern *pattern )
+HPEN CDECL EMFDRV_SelectPen(PHYSDEV dev, HPEN hPen, const struct brush_pattern *pattern )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     EMRSELECTOBJECT emr;
@@ -430,7 +430,7 @@ static DWORD EMFDRV_CreatePalette(PHYSDEV dev, HPALETTE hPal)
 /******************************************************************
  *         EMFDRV_SelectPalette
  */
-HPALETTE EMFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPal, BOOL force )
+HPALETTE CDECL EMFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPal, BOOL force )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     EMRSELECTPALETTE emr;
@@ -460,7 +460,7 @@ found:
 /******************************************************************
  *         EMFDRV_SetDCBrushColor
  */
-COLORREF EMFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL EMFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -482,7 +482,7 @@ COLORREF EMFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color )
 /******************************************************************
  *         EMFDRV_SetDCPenColor
  */
-COLORREF EMFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL EMFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color )
 {
     EMFDRV_PDEVICE *physDev = get_emf_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -505,7 +505,7 @@ COLORREF EMFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color )
 /******************************************************************
  *         EMFDRV_GdiComment
  */
-BOOL EMFDRV_GdiComment(PHYSDEV dev, UINT bytes, const BYTE *buffer)
+BOOL CDECL EMFDRV_GdiComment(PHYSDEV dev, UINT bytes, const BYTE *buffer)
 {
     EMRGDICOMMENT *emr;
     UINT total, rounded_size;
diff --git a/dlls/gdi32/font.c b/dlls/gdi32/font.c
index 633fb10116..b06ff6d354 100644
--- a/dlls/gdi32/font.c
+++ b/dlls/gdi32/font.c
@@ -861,7 +861,7 @@ static BOOL FONT_DeleteObject( HGDIOBJ handle )
 /***********************************************************************
  *           nulldrv_SelectFont
  */
-HFONT nulldrv_SelectFont( PHYSDEV dev, HFONT font, UINT *aa_flags )
+HFONT CDECL nulldrv_SelectFont( PHYSDEV dev, HFONT font, UINT *aa_flags )
 {
     static const WCHAR desktopW[] = { 'C','o','n','t','r','o','l',' ','P','a','n','e','l','\\',
                                       'D','e','s','k','t','o','p',0 };
@@ -1992,8 +1992,8 @@ static void draw_glyph( DC *dc, INT origin_x, INT origin_y, const GLYPHMETRICS *
 /***********************************************************************
  *           nulldrv_ExtTextOut
  */
-BOOL nulldrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
-                         LPCWSTR str, UINT count, const INT *dx )
+BOOL CDECL nulldrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
+                               LPCWSTR str, UINT count, const INT *dx )
 {
     DC *dc = get_nulldrv_dc( dev );
     UINT i;
diff --git a/dlls/gdi32/freetype.c b/dlls/gdi32/freetype.c
index 703dc3a997..1162ea790d 100644
--- a/dlls/gdi32/freetype.c
+++ b/dlls/gdi32/freetype.c
@@ -5174,8 +5174,8 @@ static BOOL select_charmap(FT_Face ft_face, FT_Encoding encoding)
 /*************************************************************
  * freetype_CreateDC
  */
-static BOOL freetype_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
-                               LPCWSTR output, const DEVMODEW *devmode )
+static BOOL CDECL freetype_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
+                                     LPCWSTR output, const DEVMODEW *devmode )
 {
     struct freetype_physdev *physdev = HeapAlloc( GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*physdev) );
 
@@ -5188,7 +5188,7 @@ static BOOL freetype_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
 /*************************************************************
  * freetype_DeleteDC
  */
-static BOOL freetype_DeleteDC( PHYSDEV dev )
+static BOOL CDECL freetype_DeleteDC( PHYSDEV dev )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     release_font( physdev->font );
@@ -5496,7 +5496,7 @@ static void fill_fileinfo_from_face( GdiFont *font, Face *face )
 /*************************************************************
  * freetype_SelectFont
  */
-static HFONT freetype_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
+static HFONT CDECL freetype_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     GdiFont *ret;
@@ -6256,7 +6256,7 @@ static BOOL enum_face_charsets(const Family *family, Face *face, struct enum_cha
 /*************************************************************
  * freetype_EnumFonts
  */
-static BOOL freetype_EnumFonts( PHYSDEV dev, LPLOGFONTW plf, FONTENUMPROCW proc, LPARAM lparam )
+static BOOL CDECL freetype_EnumFonts( PHYSDEV dev, LPLOGFONTW plf, FONTENUMPROCW proc, LPARAM lparam )
 {
     Family *family;
     Face *face;
@@ -6574,7 +6574,7 @@ static FT_UInt get_default_char_index(GdiFont *font)
 /*************************************************************
  * freetype_GetGlyphIndices
  */
-static DWORD freetype_GetGlyphIndices( PHYSDEV dev, LPCWSTR lpstr, INT count, LPWORD pgi, DWORD flags )
+static DWORD CDECL freetype_GetGlyphIndices( PHYSDEV dev, LPCWSTR lpstr, INT count, LPWORD pgi, DWORD flags )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     int i;
@@ -8223,8 +8223,8 @@ end:
 /*************************************************************
  * freetype_GetGlyphOutline
  */
-static DWORD freetype_GetGlyphOutline( PHYSDEV dev, UINT glyph, UINT format,
-                                       LPGLYPHMETRICS lpgm, DWORD buflen, LPVOID buf, const MAT2 *lpmat )
+static DWORD CDECL freetype_GetGlyphOutline( PHYSDEV dev, UINT glyph, UINT format,
+                                             LPGLYPHMETRICS lpgm, DWORD buflen, LPVOID buf, const MAT2 *lpmat )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     DWORD ret;
@@ -8246,7 +8246,7 @@ static DWORD freetype_GetGlyphOutline( PHYSDEV dev, UINT glyph, UINT format,
 /*************************************************************
  * freetype_GetTextMetrics
  */
-static BOOL freetype_GetTextMetrics( PHYSDEV dev, TEXTMETRICW *metrics )
+static BOOL CDECL freetype_GetTextMetrics( PHYSDEV dev, TEXTMETRICW *metrics )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     BOOL ret;
@@ -8267,7 +8267,7 @@ static BOOL freetype_GetTextMetrics( PHYSDEV dev, TEXTMETRICW *metrics )
 /*************************************************************
  * freetype_GetOutlineTextMetrics
  */
-static UINT freetype_GetOutlineTextMetrics( PHYSDEV dev, UINT cbSize, OUTLINETEXTMETRICW *potm )
+static UINT CDECL freetype_GetOutlineTextMetrics( PHYSDEV dev, UINT cbSize, OUTLINETEXTMETRICW *potm )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     UINT ret = 0;
@@ -8391,7 +8391,7 @@ done:
 /*************************************************************
  * freetype_GetCharWidth
  */
-static BOOL freetype_GetCharWidth( PHYSDEV dev, UINT firstChar, UINT lastChar, LPINT buffer )
+static BOOL CDECL freetype_GetCharWidth( PHYSDEV dev, UINT firstChar, UINT lastChar, LPINT buffer )
 {
     static const MAT2 identity = { {0,1},{0,0},{0,0},{0,1} };
     UINT c;
@@ -8420,7 +8420,7 @@ static BOOL freetype_GetCharWidth( PHYSDEV dev, UINT firstChar, UINT lastChar, L
 /*************************************************************
  * freetype_GetCharWidthInfo
  */
-static BOOL freetype_GetCharWidthInfo( PHYSDEV dev, void* ptr )
+static BOOL CDECL freetype_GetCharWidthInfo( PHYSDEV dev, void* ptr )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     struct char_width_info *info = ptr;
@@ -8454,7 +8454,7 @@ static BOOL freetype_GetCharWidthInfo( PHYSDEV dev, void* ptr )
 /*************************************************************
  * freetype_GetCharABCWidths
  */
-static BOOL freetype_GetCharABCWidths( PHYSDEV dev, UINT firstChar, UINT lastChar, LPABC buffer )
+static BOOL CDECL freetype_GetCharABCWidths( PHYSDEV dev, UINT firstChar, UINT lastChar, LPABC buffer )
 {
     static const MAT2 identity = { {0,1},{0,0},{0,0},{0,1} };
     UINT c;
@@ -8482,7 +8482,7 @@ static BOOL freetype_GetCharABCWidths( PHYSDEV dev, UINT firstChar, UINT lastCha
 /*************************************************************
  * freetype_GetCharABCWidthsI
  */
-static BOOL freetype_GetCharABCWidthsI( PHYSDEV dev, UINT firstChar, UINT count, LPWORD pgi, LPABC buffer )
+static BOOL CDECL freetype_GetCharABCWidthsI( PHYSDEV dev, UINT firstChar, UINT count, LPWORD pgi, LPABC buffer )
 {
     static const MAT2 identity = { {0,1},{0,0},{0,0},{0,1} };
     UINT c;
@@ -8512,7 +8512,7 @@ static BOOL freetype_GetCharABCWidthsI( PHYSDEV dev, UINT firstChar, UINT count,
 /*************************************************************
  * freetype_GetTextExtentExPoint
  */
-static BOOL freetype_GetTextExtentExPoint( PHYSDEV dev, LPCWSTR wstr, INT count, LPINT dxs )
+static BOOL CDECL freetype_GetTextExtentExPoint( PHYSDEV dev, LPCWSTR wstr, INT count, LPINT dxs )
 {
     static const MAT2 identity = { {0,1},{0,0},{0,0},{0,1} };
     INT idx, pos;
@@ -8545,7 +8545,7 @@ static BOOL freetype_GetTextExtentExPoint( PHYSDEV dev, LPCWSTR wstr, INT count,
 /*************************************************************
  * freetype_GetTextExtentExPointI
  */
-static BOOL freetype_GetTextExtentExPointI( PHYSDEV dev, const WORD *indices, INT count, LPINT dxs )
+static BOOL CDECL freetype_GetTextExtentExPointI( PHYSDEV dev, const WORD *indices, INT count, LPINT dxs )
 {
     static const MAT2 identity = { {0,1},{0,0},{0,0},{0,1} };
     INT idx, pos;
@@ -8579,7 +8579,7 @@ static BOOL freetype_GetTextExtentExPointI( PHYSDEV dev, const WORD *indices, IN
 /*************************************************************
  * freetype_GetFontData
  */
-static DWORD freetype_GetFontData( PHYSDEV dev, DWORD table, DWORD offset, LPVOID buf, DWORD cbData )
+static DWORD CDECL freetype_GetFontData( PHYSDEV dev, DWORD table, DWORD offset, LPVOID buf, DWORD cbData )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
 
@@ -8598,7 +8598,7 @@ static DWORD freetype_GetFontData( PHYSDEV dev, DWORD table, DWORD offset, LPVOI
 /*************************************************************
  * freetype_GetTextFace
  */
-static INT freetype_GetTextFace( PHYSDEV dev, INT count, LPWSTR str )
+static INT CDECL freetype_GetTextFace( PHYSDEV dev, INT count, LPWSTR str )
 {
     INT n;
     struct freetype_physdev *physdev = get_freetype_dev( dev );
@@ -8621,7 +8621,7 @@ static INT freetype_GetTextFace( PHYSDEV dev, INT count, LPWSTR str )
 /*************************************************************
  * freetype_GetTextCharsetInfo
  */
-static UINT freetype_GetTextCharsetInfo( PHYSDEV dev, LPFONTSIGNATURE fs, DWORD flags )
+static UINT CDECL freetype_GetTextCharsetInfo( PHYSDEV dev, LPFONTSIGNATURE fs, DWORD flags )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
 
@@ -8701,7 +8701,7 @@ static DWORD get_font_unicode_ranges(FT_Face face, GLYPHSET *gs)
 /*************************************************************
  * freetype_GetFontUnicodeRanges
  */
-static DWORD freetype_GetFontUnicodeRanges( PHYSDEV dev, LPGLYPHSET glyphset )
+static DWORD CDECL freetype_GetFontUnicodeRanges( PHYSDEV dev, LPGLYPHSET glyphset )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     DWORD size, num_ranges;
@@ -8726,7 +8726,7 @@ static DWORD freetype_GetFontUnicodeRanges( PHYSDEV dev, LPGLYPHSET glyphset )
 /*************************************************************
  * freetype_FontIsLinked
  */
-static BOOL freetype_FontIsLinked( PHYSDEV dev )
+static BOOL CDECL freetype_FontIsLinked( PHYSDEV dev )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     BOOL ret;
@@ -8758,7 +8758,7 @@ BOOL WINAPI GetRasterizerCaps( LPRASTERIZER_STATUS lprs, UINT cbNumBytes)
 /*************************************************************
  * freetype_GetFontRealizationInfo
  */
-static BOOL freetype_GetFontRealizationInfo( PHYSDEV dev, void *ptr )
+static BOOL CDECL freetype_GetFontRealizationInfo( PHYSDEV dev, void *ptr )
 {
     struct freetype_physdev *physdev = get_freetype_dev( dev );
     struct font_realization_info *info = ptr;
@@ -8949,7 +8949,7 @@ static DWORD parse_format0_kern_subtable(GdiFont *font,
 /*************************************************************
  * freetype_GetKerningPairs
  */
-static DWORD freetype_GetKerningPairs( PHYSDEV dev, DWORD cPairs, KERNINGPAIR *kern_pair )
+static DWORD CDECL freetype_GetKerningPairs( PHYSDEV dev, DWORD cPairs, KERNINGPAIR *kern_pair )
 {
     DWORD length;
     void *buf;
diff --git a/dlls/gdi32/gdi_private.h b/dlls/gdi32/gdi_private.h
index fc3961bd70..6b2502c458 100644
--- a/dlls/gdi32/gdi_private.h
+++ b/dlls/gdi32/gdi_private.h
@@ -430,63 +430,63 @@ static inline int region_find_pt( const WINEREGION *rgn, int x, int y, BOOL *hit
 }
 
 /* null driver entry points */
-extern BOOL nulldrv_AbortPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                                PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION func) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_BeginPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern DWORD nulldrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
-                                 struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION func ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_CloseFigure( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_EndPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern INT  nulldrv_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern INT  nulldrv_ExtSelectClipRgn( PHYSDEV dev, HRGN rgn, INT mode ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
-                                LPCWSTR str, UINT count, const INT *dx ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_FillRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_FlattenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_FrameRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush, INT width, INT height ) DECLSPEC_HIDDEN;
-extern LONG nulldrv_GetBitmapBits( HBITMAP bitmap, void *bits, LONG size ) DECLSPEC_HIDDEN;
-extern COLORREF nulldrv_GetNearestColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF nulldrv_GetPixel( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern UINT nulldrv_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, PALETTEENTRY *entries ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                                  void * grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
-extern INT  nulldrv_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_InvertRgn( PHYSDEV dev, HRGN rgn ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode ) DECLSPEC_HIDDEN;
-extern INT  nulldrv_OffsetClipRgn( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_PolyBezier( PHYSDEV dev, const POINT *points, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_PolyBezierTo( PHYSDEV dev, const POINT *points, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_PolyDraw( PHYSDEV dev, const POINT *points, const BYTE *types, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_PolylineTo( PHYSDEV dev, const POINT *points, INT count ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_RestoreDC( PHYSDEV dev, INT level ) DECLSPEC_HIDDEN;
-extern INT  nulldrv_SaveDC( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_ScaleViewportExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_ScaleWindowExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_SelectClipPath( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern HFONT nulldrv_SelectFont( PHYSDEV dev, HFONT font, UINT *ggo_flags ) DECLSPEC_HIDDEN;
-extern INT nulldrv_SetDIBitsToDevice( PHYSDEV dev, INT x_dst, INT y_dst, DWORD width, DWORD height,
-                                      INT x_src, INT y_src, UINT start, UINT lines,
-                                      const void *bits, BITMAPINFO *info, UINT coloruse ) DECLSPEC_HIDDEN;
-extern INT  nulldrv_SetMapMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_SetWorldTransform( PHYSDEV dev, const XFORM *xform ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                                PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
-extern INT  nulldrv_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
-                                   INT xSrc, INT ySrc, INT widthSrc, INT heightSrc, const void *bits,
-                                   BITMAPINFO *info, UINT coloruse, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL nulldrv_WidenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_AbortPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                      PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION func) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_BeginPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern DWORD CDECL nulldrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
+                                       struct bitblt_coords *src, struct bitblt_coords *dst, BLENDFUNCTION func ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_CloseFigure( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_EndPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern INT  CDECL nulldrv_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern INT  CDECL nulldrv_ExtSelectClipRgn( PHYSDEV dev, HRGN rgn, INT mode ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *rect,
+                                      LPCWSTR str, UINT count, const INT *dx ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_FillRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_FlattenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_FrameRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush, INT width, INT height ) DECLSPEC_HIDDEN;
+extern LONG CDECL nulldrv_GetBitmapBits( HBITMAP bitmap, void *bits, LONG size ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL nulldrv_GetNearestColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL nulldrv_GetPixel( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern UINT CDECL nulldrv_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, PALETTEENTRY *entries ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                        void * grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
+extern INT  CDECL nulldrv_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_InvertRgn( PHYSDEV dev, HRGN rgn ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode ) DECLSPEC_HIDDEN;
+extern INT  CDECL nulldrv_OffsetClipRgn( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_PolyBezier( PHYSDEV dev, const POINT *points, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_PolyBezierTo( PHYSDEV dev, const POINT *points, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_PolyDraw( PHYSDEV dev, const POINT *points, const BYTE *types, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_PolylineTo( PHYSDEV dev, const POINT *points, INT count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_RestoreDC( PHYSDEV dev, INT level ) DECLSPEC_HIDDEN;
+extern INT  CDECL nulldrv_SaveDC( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_ScaleViewportExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_ScaleWindowExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_SelectClipPath( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern HFONT CDECL nulldrv_SelectFont( PHYSDEV dev, HFONT font, UINT *ggo_flags ) DECLSPEC_HIDDEN;
+extern INT CDECL nulldrv_SetDIBitsToDevice( PHYSDEV dev, INT x_dst, INT y_dst, DWORD width, DWORD height,
+                                            INT x_src, INT y_src, UINT start, UINT lines,
+                                            const void *bits, BITMAPINFO *info, UINT coloruse ) DECLSPEC_HIDDEN;
+extern INT  CDECL nulldrv_SetMapMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_SetWorldTransform( PHYSDEV dev, const XFORM *xform ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                      PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
+extern INT  CDECL nulldrv_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst, INT heightDst,
+                                         INT xSrc, INT ySrc, INT widthSrc, INT heightSrc, const void *bits,
+                                         BITMAPINFO *info, UINT coloruse, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL nulldrv_WidenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
 
 static inline DC *get_nulldrv_dc( PHYSDEV dev )
 {
diff --git a/dlls/gdi32/mapping.c b/dlls/gdi32/mapping.c
index 28b12bc48c..8358284648 100644
--- a/dlls/gdi32/mapping.c
+++ b/dlls/gdi32/mapping.c
@@ -84,7 +84,7 @@ static void MAPPING_FixIsotropic( DC * dc )
  *           null driver fallback implementations
  */
 
-BOOL nulldrv_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL nulldrv_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -97,7 +97,7 @@ BOOL nulldrv_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return TRUE;
 }
 
-BOOL nulldrv_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL nulldrv_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -110,7 +110,7 @@ BOOL nulldrv_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return TRUE;
 }
 
-BOOL nulldrv_ScaleViewportExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size )
+BOOL CDECL nulldrv_ScaleViewportExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -129,7 +129,7 @@ BOOL nulldrv_ScaleViewportExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num,
     return TRUE;
 }
 
-BOOL nulldrv_ScaleWindowExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size )
+BOOL CDECL nulldrv_ScaleWindowExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, INT y_denom, SIZE *size )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -148,7 +148,7 @@ BOOL nulldrv_ScaleWindowExtEx( PHYSDEV dev, INT x_num, INT x_denom, INT y_num, I
     return TRUE;
 }
 
-INT nulldrv_SetMapMode( PHYSDEV dev, INT mode )
+INT CDECL nulldrv_SetMapMode( PHYSDEV dev, INT mode )
 {
     DC *dc = get_nulldrv_dc( dev );
     INT ret = dc->MapMode;
@@ -208,7 +208,7 @@ INT nulldrv_SetMapMode( PHYSDEV dev, INT mode )
     return ret;
 }
 
-BOOL nulldrv_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
+BOOL CDECL nulldrv_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -224,7 +224,7 @@ BOOL nulldrv_SetViewportExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
     return TRUE;
 }
 
-BOOL nulldrv_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL nulldrv_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -237,7 +237,7 @@ BOOL nulldrv_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return TRUE;
 }
 
-BOOL nulldrv_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
+BOOL CDECL nulldrv_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -256,7 +256,7 @@ BOOL nulldrv_SetWindowExtEx( PHYSDEV dev, INT cx, INT cy, SIZE *size )
     return TRUE;
 }
 
-BOOL nulldrv_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL nulldrv_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -269,7 +269,7 @@ BOOL nulldrv_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
     return TRUE;
 }
 
-BOOL nulldrv_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode )
+BOOL CDECL nulldrv_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -296,7 +296,7 @@ BOOL nulldrv_ModifyWorldTransform( PHYSDEV dev, const XFORM *xform, DWORD mode )
     return TRUE;
 }
 
-BOOL nulldrv_SetWorldTransform( PHYSDEV dev, const XFORM *xform )
+BOOL CDECL nulldrv_SetWorldTransform( PHYSDEV dev, const XFORM *xform )
 {
     DC *dc = get_nulldrv_dc( dev );
 
diff --git a/dlls/gdi32/mfdrv/bitblt.c b/dlls/gdi32/mfdrv/bitblt.c
index 9bf7ab57aa..1379ea94c6 100644
--- a/dlls/gdi32/mfdrv/bitblt.c
+++ b/dlls/gdi32/mfdrv/bitblt.c
@@ -28,7 +28,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(metafile);
 /***********************************************************************
  *           MFDRV_PatBlt
  */
-BOOL MFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
+BOOL CDECL MFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 {
     MFDRV_MetaParam6( dev, META_PATBLT, dst->log_x, dst->log_y, dst->log_width, dst->log_height,
                       HIWORD(rop), LOWORD(rop) );
@@ -44,8 +44,8 @@ BOOL MFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
  */
 #define STRETCH_VIA_DIB
 
-BOOL MFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
-                       PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop )
+BOOL CDECL MFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
+                             PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop )
 {
     BOOL ret;
     DWORD len;
@@ -129,10 +129,10 @@ BOOL MFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
 /***********************************************************************
  *           MFDRV_StretchDIBits
  */
-INT MFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst,
-                         INT heightDst, INT xSrc, INT ySrc, INT widthSrc,
-                         INT heightSrc, const void *bits,
-                         BITMAPINFO *info, UINT wUsage, DWORD dwRop )
+INT CDECL MFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst,
+                               INT heightDst, INT xSrc, INT ySrc, INT widthSrc,
+                               INT heightSrc, const void *bits,
+                               BITMAPINFO *info, UINT wUsage, DWORD dwRop )
 {
     DWORD infosize = get_dib_info_size(info, wUsage);
     DWORD len = sizeof(METARECORD) + 10 * sizeof(WORD) + infosize + info->bmiHeader.biSizeImage;
@@ -163,9 +163,9 @@ INT MFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst,
 /***********************************************************************
  *           MFDRV_SetDIBitsToDevice
  */
-INT MFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDst, INT yDst, DWORD cx,
-                             DWORD cy, INT xSrc, INT ySrc, UINT startscan,
-                             UINT lines, LPCVOID bits, BITMAPINFO *info, UINT coloruse )
+INT CDECL MFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDst, INT yDst, DWORD cx,
+                                   DWORD cy, INT xSrc, INT ySrc, UINT startscan,
+                                   UINT lines, LPCVOID bits, BITMAPINFO *info, UINT coloruse )
 
 {
     DWORD infosize = get_dib_info_size(info, coloruse);
diff --git a/dlls/gdi32/mfdrv/dc.c b/dlls/gdi32/mfdrv/dc.c
index c00b5041f8..61417bfd46 100644
--- a/dlls/gdi32/mfdrv/dc.c
+++ b/dlls/gdi32/mfdrv/dc.c
@@ -20,187 +20,187 @@
 
 #include "mfdrv/metafiledrv.h"
 
-INT MFDRV_SaveDC( PHYSDEV dev )
+INT CDECL MFDRV_SaveDC( PHYSDEV dev )
 {
     return MFDRV_MetaParam0( dev, META_SAVEDC );
 }
 
-BOOL MFDRV_RestoreDC( PHYSDEV dev, INT level )
+BOOL CDECL MFDRV_RestoreDC( PHYSDEV dev, INT level )
 {
     return MFDRV_MetaParam1( dev, META_RESTOREDC, level );
 }
 
-UINT MFDRV_SetTextAlign( PHYSDEV dev, UINT align )
+UINT CDECL MFDRV_SetTextAlign( PHYSDEV dev, UINT align )
 {
     return MFDRV_MetaParam2( dev, META_SETTEXTALIGN, HIWORD(align), LOWORD(align)) ? align : GDI_ERROR;
 }
 
-INT MFDRV_SetBkMode( PHYSDEV dev, INT mode )
+INT CDECL MFDRV_SetBkMode( PHYSDEV dev, INT mode )
 {
     return MFDRV_MetaParam1( dev, META_SETBKMODE, (WORD)mode) ? mode : 0;
 }
 
-COLORREF MFDRV_SetBkColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL MFDRV_SetBkColor( PHYSDEV dev, COLORREF color )
 {
     return MFDRV_MetaParam2(dev, META_SETBKCOLOR, HIWORD(color), LOWORD(color)) ? color : CLR_INVALID;
 }
 
-COLORREF MFDRV_SetTextColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL MFDRV_SetTextColor( PHYSDEV dev, COLORREF color )
 {
     return MFDRV_MetaParam2(dev, META_SETTEXTCOLOR, HIWORD(color), LOWORD(color)) ? color : CLR_INVALID;
 }
 
-INT MFDRV_SetROP2( PHYSDEV dev, INT rop )
+INT CDECL MFDRV_SetROP2( PHYSDEV dev, INT rop )
 {
     return MFDRV_MetaParam1( dev, META_SETROP2, (WORD)rop) ? rop : 0;
 }
 
-INT MFDRV_SetRelAbs( PHYSDEV dev, INT mode )
+INT CDECL MFDRV_SetRelAbs( PHYSDEV dev, INT mode )
 {
     return MFDRV_MetaParam1( dev, META_SETRELABS, (WORD)mode) ? mode : 0;
 }
 
-INT MFDRV_SetPolyFillMode( PHYSDEV dev, INT mode )
+INT CDECL MFDRV_SetPolyFillMode( PHYSDEV dev, INT mode )
 {
     return MFDRV_MetaParam1( dev, META_SETPOLYFILLMODE, (WORD)mode) ? mode : 0;
 }
 
-INT MFDRV_SetStretchBltMode( PHYSDEV dev, INT mode )
+INT CDECL MFDRV_SetStretchBltMode( PHYSDEV dev, INT mode )
 {
     return MFDRV_MetaParam1( dev, META_SETSTRETCHBLTMODE, (WORD)mode) ? mode : 0;
 }
 
-INT MFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+INT CDECL MFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     return MFDRV_MetaParam4( dev, META_INTERSECTCLIPRECT, left, top, right, bottom );
 }
 
-INT MFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+INT CDECL MFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     return MFDRV_MetaParam4( dev, META_EXCLUDECLIPRECT, left, top, right, bottom );
 }
 
-INT MFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y )
+INT CDECL MFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y )
 {
     return MFDRV_MetaParam2( dev, META_OFFSETCLIPRGN, x, y );
 }
 
-INT MFDRV_SetMapMode( PHYSDEV dev, INT mode )
+INT CDECL MFDRV_SetMapMode( PHYSDEV dev, INT mode )
 {
     return MFDRV_MetaParam1( dev, META_SETMAPMODE, mode );
 }
 
-BOOL MFDRV_SetViewportExtEx( PHYSDEV dev, INT x, INT y, SIZE *size )
+BOOL CDECL MFDRV_SetViewportExtEx( PHYSDEV dev, INT x, INT y, SIZE *size )
 {
     return MFDRV_MetaParam2( dev, META_SETVIEWPORTEXT, x, y );
 }
 
-BOOL MFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL MFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     return MFDRV_MetaParam2( dev, META_SETVIEWPORTORG, x, y );
 }
 
-BOOL MFDRV_SetWindowExtEx( PHYSDEV dev, INT x, INT y, SIZE *size )
+BOOL CDECL MFDRV_SetWindowExtEx( PHYSDEV dev, INT x, INT y, SIZE *size )
 {
     return MFDRV_MetaParam2( dev, META_SETWINDOWEXT, x, y );
 }
 
-BOOL MFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL MFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     return MFDRV_MetaParam2( dev, META_SETWINDOWORG, x, y );
 }
 
-BOOL MFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL MFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     return MFDRV_MetaParam2( dev, META_OFFSETVIEWPORTORG, x, y );
 }
 
-BOOL MFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
+BOOL CDECL MFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt )
 {
     return MFDRV_MetaParam2( dev, META_OFFSETWINDOWORG, x, y );
 }
 
-BOOL MFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
+BOOL CDECL MFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
 {
     return MFDRV_MetaParam4( dev, META_SCALEVIEWPORTEXT, xNum, xDenom, yNum, yDenom );
 }
 
-BOOL MFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
+BOOL CDECL MFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size )
 {
     return MFDRV_MetaParam4( dev, META_SCALEWINDOWEXT, xNum, xDenom, yNum, yDenom );
 }
 
-BOOL MFDRV_SetTextJustification( PHYSDEV dev, INT extra, INT breaks )
+BOOL CDECL MFDRV_SetTextJustification( PHYSDEV dev, INT extra, INT breaks )
 {
     return MFDRV_MetaParam2( dev, META_SETTEXTJUSTIFICATION, extra, breaks );
 }
 
-INT MFDRV_SetTextCharacterExtra( PHYSDEV dev, INT extra )
+INT CDECL MFDRV_SetTextCharacterExtra( PHYSDEV dev, INT extra )
 {
     return MFDRV_MetaParam1( dev, META_SETTEXTCHAREXTRA, extra ) ? extra : 0x80000000;
 }
 
-DWORD MFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags )
+DWORD CDECL MFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags )
 {
     return MFDRV_MetaParam2( dev, META_SETMAPPERFLAGS, HIWORD(flags), LOWORD(flags) ) ? flags : GDI_ERROR;
 }
 
-BOOL MFDRV_AbortPath( PHYSDEV dev )
+BOOL CDECL MFDRV_AbortPath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_BeginPath( PHYSDEV dev )
+BOOL CDECL MFDRV_BeginPath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_CloseFigure( PHYSDEV dev )
+BOOL CDECL MFDRV_CloseFigure( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_EndPath( PHYSDEV dev )
+BOOL CDECL MFDRV_EndPath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_FillPath( PHYSDEV dev )
+BOOL CDECL MFDRV_FillPath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_FlattenPath( PHYSDEV dev )
+BOOL CDECL MFDRV_FlattenPath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_SelectClipPath( PHYSDEV dev, INT iMode )
+BOOL CDECL MFDRV_SelectClipPath( PHYSDEV dev, INT iMode )
 {
     return FALSE;
 }
 
-BOOL MFDRV_StrokeAndFillPath( PHYSDEV dev )
+BOOL CDECL MFDRV_StrokeAndFillPath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_StrokePath( PHYSDEV dev )
+BOOL CDECL MFDRV_StrokePath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-BOOL MFDRV_WidenPath( PHYSDEV dev )
+BOOL CDECL MFDRV_WidenPath( PHYSDEV dev )
 {
     return FALSE;
 }
 
-COLORREF MFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL MFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color )
 {
     return CLR_INVALID;
 }
 
-COLORREF MFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL MFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color )
 {
     return CLR_INVALID;
 }
diff --git a/dlls/gdi32/mfdrv/graphics.c b/dlls/gdi32/mfdrv/graphics.c
index e26076fb64..0866ea257c 100644
--- a/dlls/gdi32/mfdrv/graphics.c
+++ b/dlls/gdi32/mfdrv/graphics.c
@@ -33,7 +33,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(metafile);
 /**********************************************************************
  *	     MFDRV_MoveTo
  */
-BOOL MFDRV_MoveTo(PHYSDEV dev, INT x, INT y)
+BOOL CDECL MFDRV_MoveTo(PHYSDEV dev, INT x, INT y)
 {
     return MFDRV_MetaParam2(dev,META_MOVETO,x,y);
 }
@@ -41,7 +41,7 @@ BOOL MFDRV_MoveTo(PHYSDEV dev, INT x, INT y)
 /***********************************************************************
  *           MFDRV_LineTo
  */
-BOOL MFDRV_LineTo( PHYSDEV dev, INT x, INT y )
+BOOL CDECL MFDRV_LineTo( PHYSDEV dev, INT x, INT y )
 {
      return MFDRV_MetaParam2(dev, META_LINETO, x, y);
 }
@@ -50,8 +50,8 @@ BOOL MFDRV_LineTo( PHYSDEV dev, INT x, INT y )
 /***********************************************************************
  *           MFDRV_Arc
  */
-BOOL MFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL MFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                      INT xstart, INT ystart, INT xend, INT yend )
 {
      return MFDRV_MetaParam8(dev, META_ARC, left, top, right, bottom,
 			     xstart, ystart, xend, yend);
@@ -61,8 +61,8 @@ BOOL MFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           MFDRV_Pie
  */
-BOOL MFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL MFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                      INT xstart, INT ystart, INT xend, INT yend )
 {
     return MFDRV_MetaParam8(dev, META_PIE, left, top, right, bottom,
 			    xstart, ystart, xend, yend);
@@ -72,8 +72,8 @@ BOOL MFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           MFDRV_Chord
  */
-BOOL MFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                  INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL MFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                        INT xstart, INT ystart, INT xend, INT yend )
 {
     return MFDRV_MetaParam8(dev, META_CHORD, left, top, right, bottom,
 			    xstart, ystart, xend, yend);
@@ -82,7 +82,7 @@ BOOL MFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           MFDRV_Ellipse
  */
-BOOL MFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+BOOL CDECL MFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     return MFDRV_MetaParam4(dev, META_ELLIPSE, left, top, right, bottom);
 }
@@ -90,7 +90,7 @@ BOOL MFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 /***********************************************************************
  *           MFDRV_Rectangle
  */
-BOOL MFDRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
+BOOL CDECL MFDRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 {
     return MFDRV_MetaParam4(dev, META_RECTANGLE, left, top, right, bottom);
 }
@@ -98,8 +98,8 @@ BOOL MFDRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 /***********************************************************************
  *           MFDRV_RoundRect
  */
-BOOL MFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
-                      INT bottom, INT ell_width, INT ell_height )
+BOOL CDECL MFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
+                            INT bottom, INT ell_width, INT ell_height )
 {
     return MFDRV_MetaParam6(dev, META_ROUNDRECT, left, top, right, bottom,
 			    ell_width, ell_height);
@@ -108,7 +108,7 @@ BOOL MFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
 /***********************************************************************
  *           MFDRV_SetPixel
  */
-COLORREF MFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
+COLORREF CDECL MFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 {
     return MFDRV_MetaParam4(dev, META_SETPIXEL, x, y,HIWORD(color),
 			    LOWORD(color));
@@ -141,7 +141,7 @@ static BOOL MFDRV_MetaPoly(PHYSDEV dev, short func, POINTS *pt, short count)
 /**********************************************************************
  *          MFDRV_Polyline
  */
-BOOL MFDRV_Polyline( PHYSDEV dev, const POINT* pt, INT count )
+BOOL CDECL MFDRV_Polyline( PHYSDEV dev, const POINT* pt, INT count )
 {
     int i;
     POINTS *pts;
@@ -164,7 +164,7 @@ BOOL MFDRV_Polyline( PHYSDEV dev, const POINT* pt, INT count )
 /**********************************************************************
  *          MFDRV_Polygon
  */
-BOOL MFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
+BOOL CDECL MFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
 {
     int i;
     POINTS *pts;
@@ -187,7 +187,7 @@ BOOL MFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
 /**********************************************************************
  *          MFDRV_PolyPolygon
  */
-BOOL MFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons)
+BOOL CDECL MFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons)
 {
     BOOL ret;
     DWORD len;
@@ -241,7 +241,7 @@ BOOL MFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT po
 /**********************************************************************
  *          MFDRV_ExtFloodFill
  */
-BOOL MFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType )
+BOOL CDECL MFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType )
 {
     return MFDRV_MetaParam4(dev,META_FLOODFILL,x,y,HIWORD(color),
 			    LOWORD(color));
@@ -347,7 +347,7 @@ static INT16 MFDRV_CreateRegion(PHYSDEV dev, HRGN hrgn)
 /**********************************************************************
  *          MFDRV_PaintRgn
  */
-BOOL MFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
+BOOL CDECL MFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
 {
     INT16 index;
     index = MFDRV_CreateRegion( dev, hrgn );
@@ -360,7 +360,7 @@ BOOL MFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
 /**********************************************************************
  *          MFDRV_InvertRgn
  */
-BOOL MFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn )
+BOOL CDECL MFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn )
 {
     INT16 index;
     index = MFDRV_CreateRegion( dev, hrgn );
@@ -373,7 +373,7 @@ BOOL MFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn )
 /**********************************************************************
  *          MFDRV_FillRgn
  */
-BOOL MFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush )
+BOOL CDECL MFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush )
 {
     INT16 iRgn, iBrush;
     iRgn = MFDRV_CreateRegion( dev, hrgn );
@@ -388,7 +388,7 @@ BOOL MFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush )
 /**********************************************************************
  *          MFDRV_FrameRgn
  */
-BOOL MFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT x, INT y )
+BOOL CDECL MFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT x, INT y )
 {
     INT16 iRgn, iBrush;
     iRgn = MFDRV_CreateRegion( dev, hrgn );
@@ -404,7 +404,7 @@ BOOL MFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT x, INT y )
 /**********************************************************************
  *          MFDRV_ExtSelectClipRgn
  */
-INT MFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode )
+INT CDECL MFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode )
 {
     INT16 iRgn;
     INT ret;
@@ -425,7 +425,7 @@ INT MFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode )
  * Since MetaFiles don't record Beziers and they don't even record
  * approximations to them using lines, we need this stub function.
  */
-BOOL MFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
+BOOL CDECL MFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     return FALSE;
 }
@@ -435,7 +435,7 @@ BOOL MFDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
  * Since MetaFiles don't record Beziers and they don't even record
  * approximations to them using lines, we need this stub function.
  */
-BOOL MFDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
+BOOL CDECL MFDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     return FALSE;
 }
diff --git a/dlls/gdi32/mfdrv/init.c b/dlls/gdi32/mfdrv/init.c
index 4ef509a89f..5307310213 100644
--- a/dlls/gdi32/mfdrv/init.c
+++ b/dlls/gdi32/mfdrv/init.c
@@ -30,15 +30,15 @@
 
 WINE_DEFAULT_DEBUG_CHANNEL(metafile);
 
-static BOOL MFDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev );
-static BOOL MFDRV_DeleteDC( PHYSDEV dev );
+static BOOL CDECL MFDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev );
+static BOOL CDECL MFDRV_DeleteDC( PHYSDEV dev );
 
 
 /**********************************************************************
  *           MFDRV_ExtEscape
  */
-static INT MFDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_data,
-                            INT cbOutput, LPVOID out_data )
+static INT CDECL MFDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_data,
+                                  INT cbOutput, LPVOID out_data )
 {
     METARECORD *mr;
     DWORD len;
@@ -62,7 +62,7 @@ static INT MFDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_da
 /******************************************************************
  *         MFDRV_GetBoundsRect
  */
-static UINT MFDRV_GetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
+static UINT CDECL MFDRV_GetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 {
     return 0;
 }
@@ -71,7 +71,7 @@ static UINT MFDRV_GetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 /******************************************************************
  *         MFDRV_SetBoundsRect
  */
-static UINT MFDRV_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
+static UINT CDECL MFDRV_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 {
     return 0;
 }
@@ -82,7 +82,7 @@ static UINT MFDRV_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
  *
  *A very simple implementation that returns DT_METAFILE
  */
-static INT MFDRV_GetDeviceCaps(PHYSDEV dev, INT cap)
+static INT CDECL MFDRV_GetDeviceCaps(PHYSDEV dev, INT cap)
 {
     switch(cap)
     {
@@ -280,7 +280,7 @@ static DC *MFDRV_AllocMetaFile(void)
 /**********************************************************************
  *	     MFDRV_CreateCompatibleDC
  */
-static BOOL MFDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
+static BOOL CDECL MFDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 {
     /* not supported on metafile DCs */
     return FALSE;
@@ -290,7 +290,7 @@ static BOOL MFDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 /**********************************************************************
  *	     MFDRV_DeleteDC
  */
-static BOOL MFDRV_DeleteDC( PHYSDEV dev )
+static BOOL CDECL MFDRV_DeleteDC( PHYSDEV dev )
 {
     METAFILEDRV_PDEVICE *physDev = (METAFILEDRV_PDEVICE *)dev;
     DWORD index;
diff --git a/dlls/gdi32/mfdrv/metafiledrv.h b/dlls/gdi32/mfdrv/metafiledrv.h
index e1a03bb0e2..7d3d1c41da 100644
--- a/dlls/gdi32/mfdrv/metafiledrv.h
+++ b/dlls/gdi32/mfdrv/metafiledrv.h
@@ -60,86 +60,86 @@ extern INT16 MFDRV_CreateBrushIndirect( PHYSDEV dev, HBRUSH hBrush ) DECLSPEC_HI
 
 /* Metafile driver functions */
 
-extern BOOL MFDRV_AbortPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+extern BOOL CDECL MFDRV_AbortPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
                              INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_BeginPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right,
-                         INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_CloseFigure( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_EndPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect, LPCWSTR str,
-                              UINT count, const INT *lpDx ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_FlattenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT x, INT y ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_LineTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_MoveTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right,
-                       INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_PolyBezier( PHYSDEV dev, const POINT* pt, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_PolyBezierTo( PHYSDEV dev, const POINT* pt, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_Polyline( PHYSDEV dev, const POINT* pt,INT count) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_RestoreDC( PHYSDEV dev, INT level ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                             INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SaveDC( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
-extern HBITMAP MFDRV_SelectBitmap( PHYSDEV dev, HBITMAP handle ) DECLSPEC_HIDDEN;
-extern HBRUSH  MFDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_SelectClipPath( PHYSDEV dev, INT iMode ) DECLSPEC_HIDDEN;
-extern HFONT MFDRV_SelectFont( PHYSDEV dev, HFONT handle, UINT *aa_flags ) DECLSPEC_HIDDEN;
-extern HPEN MFDRV_SelectPen( PHYSDEV dev, HPEN handle, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern HPALETTE MFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPalette, BOOL bForceBackground) DECLSPEC_HIDDEN;
-extern UINT MFDRV_RealizePalette(PHYSDEV dev, HPALETTE hPalette, BOOL primary) DECLSPEC_HIDDEN;
-extern COLORREF MFDRV_SetBkColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetBkMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern COLORREF MFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF MFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetMapMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern DWORD MFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags ) DECLSPEC_HIDDEN;
-extern COLORREF MFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetPolyFillMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetROP2( PHYSDEV dev, INT rop ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetRelAbs( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetStretchBltMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
-extern UINT MFDRV_SetTextAlign( PHYSDEV dev, UINT align ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetTextCharacterExtra( PHYSDEV dev, INT extra ) DECLSPEC_HIDDEN;
-extern COLORREF  MFDRV_SetTextColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_SetTextJustification( PHYSDEV dev, INT extra, INT breaks ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_SetViewportExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_SetWindowExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
-                              PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDest, INT yDest, DWORD cx,
-                                     DWORD cy, INT xSrc, INT ySrc,
-                                     UINT startscan, UINT lines, LPCVOID bits,
-                                     BITMAPINFO *info, UINT coloruse ) DECLSPEC_HIDDEN;
-extern INT  MFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst,
-                                 INT heightDst, INT xSrc, INT ySrc, INT widthSrc, INT heightSrc,
-                                 const void *bits, BITMAPINFO *info, UINT wUsage, DWORD dwRop ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL MFDRV_WidenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_BeginPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_Chord( PHYSDEV dev, INT left, INT top, INT right,
+                               INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_CloseFigure( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_EndPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_ExcludeClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_ExtSelectClipRgn( PHYSDEV dev, HRGN hrgn, INT mode ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect, LPCWSTR str,
+                                    UINT count, const INT *lpDx ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_FillRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_FlattenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_FrameRgn( PHYSDEV dev, HRGN hrgn, HBRUSH hbrush, INT x, INT y ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_IntersectClipRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_InvertRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_LineTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_MoveTo( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_OffsetClipRgn( PHYSDEV dev, INT x, INT y ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_OffsetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_OffsetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_Pie( PHYSDEV dev, INT left, INT top, INT right,
+                             INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_PolyBezier( PHYSDEV dev, const POINT* pt, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_PolyBezierTo( PHYSDEV dev, const POINT* pt, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_Polygon( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_Polyline( PHYSDEV dev, const POINT* pt,INT count) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_RestoreDC( PHYSDEV dev, INT level ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                   INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SaveDC( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_ScaleViewportExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_ScaleWindowExtEx( PHYSDEV dev, INT xNum, INT xDenom, INT yNum, INT yDenom, SIZE *size ) DECLSPEC_HIDDEN;
+extern HBITMAP CDECL MFDRV_SelectBitmap( PHYSDEV dev, HBITMAP handle ) DECLSPEC_HIDDEN;
+extern HBRUSH  CDECL MFDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern BOOL  CDECL MFDRV_SelectClipPath( PHYSDEV dev, INT iMode ) DECLSPEC_HIDDEN;
+extern HFONT CDECL MFDRV_SelectFont( PHYSDEV dev, HFONT handle, UINT *aa_flags ) DECLSPEC_HIDDEN;
+extern HPEN  CDECL MFDRV_SelectPen( PHYSDEV dev, HPEN handle, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern HPALETTE CDECL MFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPalette, BOOL bForceBackground) DECLSPEC_HIDDEN;
+extern UINT CDECL MFDRV_RealizePalette(PHYSDEV dev, HPALETTE hPalette, BOOL primary) DECLSPEC_HIDDEN;
+extern COLORREF CDECL MFDRV_SetBkColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetBkMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL MFDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL MFDRV_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetMapMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern DWORD CDECL MFDRV_SetMapperFlags( PHYSDEV dev, DWORD flags ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL MFDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetPolyFillMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetROP2( PHYSDEV dev, INT rop ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetRelAbs( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetStretchBltMode( PHYSDEV dev, INT mode ) DECLSPEC_HIDDEN;
+extern UINT CDECL MFDRV_SetTextAlign( PHYSDEV dev, UINT align ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetTextCharacterExtra( PHYSDEV dev, INT extra ) DECLSPEC_HIDDEN;
+extern COLORREF  CDECL MFDRV_SetTextColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_SetTextJustification( PHYSDEV dev, INT extra, INT breaks ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_SetViewportExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_SetViewportOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_SetWindowExtEx( PHYSDEV dev, INT x, INT y, SIZE *size ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_SetWindowOrgEx( PHYSDEV dev, INT x, INT y, POINT *pt ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_StretchBlt( PHYSDEV devDst, struct bitblt_coords *dst,
+                                    PHYSDEV devSrc, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_SetDIBitsToDevice( PHYSDEV dev, INT xDest, INT yDest, DWORD cx,
+                                           DWORD cy, INT xSrc, INT ySrc,
+                                           UINT startscan, UINT lines, LPCVOID bits,
+                                           BITMAPINFO *info, UINT coloruse ) DECLSPEC_HIDDEN;
+extern INT  CDECL MFDRV_StretchDIBits( PHYSDEV dev, INT xDst, INT yDst, INT widthDst,
+                                       INT heightDst, INT xSrc, INT ySrc, INT widthSrc, INT heightSrc,
+                                       const void *bits, BITMAPINFO *info, UINT wUsage, DWORD dwRop ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL MFDRV_WidenPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
 
 #endif  /* __WINE_METAFILEDRV_H */
diff --git a/dlls/gdi32/mfdrv/objects.c b/dlls/gdi32/mfdrv/objects.c
index e0275ddbb9..7fd4340536 100644
--- a/dlls/gdi32/mfdrv/objects.c
+++ b/dlls/gdi32/mfdrv/objects.c
@@ -95,7 +95,7 @@ static INT16 MFDRV_FindObject( PHYSDEV dev, HGDIOBJ obj )
 /******************************************************************
  *         MFDRV_DeleteObject
  */
-BOOL MFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj )
+BOOL CDECL MFDRV_DeleteObject( PHYSDEV dev, HGDIOBJ obj )
 {
     METARECORD mr;
     METAFILEDRV_PDEVICE *physDev = (METAFILEDRV_PDEVICE *)dev;
@@ -137,7 +137,7 @@ static BOOL MFDRV_SelectObject( PHYSDEV dev, INT16 index)
 /***********************************************************************
  *           MFDRV_SelectBitmap
  */
-HBITMAP MFDRV_SelectBitmap( PHYSDEV dev, HBITMAP hbitmap )
+HBITMAP CDECL MFDRV_SelectBitmap( PHYSDEV dev, HBITMAP hbitmap )
 {
     return 0;
 }
@@ -229,7 +229,7 @@ done:
 /***********************************************************************
  *           MFDRV_SelectBrush
  */
-HBRUSH MFDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
+HBRUSH CDECL MFDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
 {
     INT16 index;
 
@@ -285,7 +285,7 @@ static UINT16 MFDRV_CreateFontIndirect(PHYSDEV dev, HFONT hFont, LOGFONTW *logfo
 /***********************************************************************
  *           MFDRV_SelectFont
  */
-HFONT MFDRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
+HFONT CDECL MFDRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
 {
     LOGFONTW font;
     INT16 index;
@@ -324,7 +324,7 @@ static UINT16 MFDRV_CreatePenIndirect(PHYSDEV dev, HPEN hPen, LOGPEN16 *logpen)
 /***********************************************************************
  *           MFDRV_SelectPen
  */
-HPEN MFDRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
+HPEN CDECL MFDRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
 {
     LOGPEN16 logpen;
     INT16 index;
@@ -406,7 +406,7 @@ static BOOL MFDRV_CreatePalette(PHYSDEV dev, HPALETTE hPalette, LOGPALETTE* logP
 /***********************************************************************
  *           MFDRV_SelectPalette
  */
-HPALETTE MFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPalette, BOOL bForceBackground )
+HPALETTE CDECL MFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPalette, BOOL bForceBackground )
 {
 #define PALVERSION 0x0300
 
@@ -442,7 +442,7 @@ HPALETTE MFDRV_SelectPalette( PHYSDEV dev, HPALETTE hPalette, BOOL bForceBackgro
 /***********************************************************************
  *           MFDRV_RealizePalette
  */
-UINT MFDRV_RealizePalette(PHYSDEV dev, HPALETTE hPalette, BOOL dummy)
+UINT CDECL MFDRV_RealizePalette(PHYSDEV dev, HPALETTE hPalette, BOOL dummy)
 {
     char buffer[sizeof(METARECORD) - sizeof(WORD)];
     METARECORD *mr = (METARECORD *)&buffer;
diff --git a/dlls/gdi32/mfdrv/text.c b/dlls/gdi32/mfdrv/text.c
index c05ad267a8..99fbf1ddef 100644
--- a/dlls/gdi32/mfdrv/text.c
+++ b/dlls/gdi32/mfdrv/text.c
@@ -72,8 +72,8 @@ static BOOL MFDRV_MetaExtTextOut( PHYSDEV dev, short x, short y, UINT16 flags,
 /***********************************************************************
  *           MFDRV_ExtTextOut
  */
-BOOL MFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
-                       const RECT *lprect, LPCWSTR str, UINT count, const INT *lpDx )
+BOOL CDECL MFDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
+                             const RECT *lprect, LPCWSTR str, UINT count, const INT *lpDx )
 {
     RECT16	rect16;
     LPINT16	lpdx16 = NULL;
diff --git a/dlls/gdi32/painting.c b/dlls/gdi32/painting.c
index d61ab4ac0f..81937b8bbb 100644
--- a/dlls/gdi32/painting.c
+++ b/dlls/gdi32/painting.c
@@ -41,7 +41,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(gdi);
  *           null driver fallback implementations
  */
 
-BOOL nulldrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep )
+BOOL CDECL nulldrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLOAT sweep )
 {
     INT x1 = GDI_ROUND( x + cos( start * M_PI / 180 ) * radius );
     INT y1 = GDI_ROUND( y - sin( start * M_PI / 180 ) * radius );
@@ -53,8 +53,8 @@ BOOL nulldrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT start, FLO
     return ret;
 }
 
-BOOL nulldrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                    INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL nulldrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                          INT xstart, INT ystart, INT xend, INT yend )
 {
     INT width = abs( right - left );
     INT height = abs( bottom - top );
@@ -72,7 +72,7 @@ BOOL nulldrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
     return Arc( dev->hdc, left, top, right, bottom, xstart, ystart, xend, yend );
 }
 
-BOOL nulldrv_FillRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush )
+BOOL CDECL nulldrv_FillRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush )
 {
     BOOL ret = FALSE;
     HBRUSH prev;
@@ -85,7 +85,7 @@ BOOL nulldrv_FillRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush )
     return ret;
 }
 
-BOOL nulldrv_FrameRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush, INT width, INT height )
+BOOL CDECL nulldrv_FrameRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush, INT width, INT height )
 {
     BOOL ret = FALSE;
     HRGN tmp = CreateRectRgn( 0, 0, 0, 0 );
@@ -98,7 +98,7 @@ BOOL nulldrv_FrameRgn( PHYSDEV dev, HRGN rgn, HBRUSH brush, INT width, INT heigh
     return ret;
 }
 
-BOOL nulldrv_InvertRgn( PHYSDEV dev, HRGN rgn )
+BOOL CDECL nulldrv_InvertRgn( PHYSDEV dev, HRGN rgn )
 {
     HBRUSH prev_brush = SelectObject( dev->hdc, GetStockObject(BLACK_BRUSH) );
     INT prev_rop = SetROP2( dev->hdc, R2_NOT );
@@ -108,7 +108,7 @@ BOOL nulldrv_InvertRgn( PHYSDEV dev, HRGN rgn )
     return ret;
 }
 
-BOOL nulldrv_PolyBezier( PHYSDEV dev, const POINT *points, DWORD count )
+BOOL CDECL nulldrv_PolyBezier( PHYSDEV dev, const POINT *points, DWORD count )
 {
     BOOL ret = FALSE;
     POINT *pts;
@@ -122,7 +122,7 @@ BOOL nulldrv_PolyBezier( PHYSDEV dev, const POINT *points, DWORD count )
     return ret;
 }
 
-BOOL nulldrv_PolyBezierTo( PHYSDEV dev, const POINT *points, DWORD count )
+BOOL CDECL nulldrv_PolyBezierTo( PHYSDEV dev, const POINT *points, DWORD count )
 {
     DC *dc = get_nulldrv_dc( dev );
     BOOL ret = FALSE;
@@ -138,7 +138,7 @@ BOOL nulldrv_PolyBezierTo( PHYSDEV dev, const POINT *points, DWORD count )
     return ret;
 }
 
-BOOL nulldrv_PolyDraw( PHYSDEV dev, const POINT *points, const BYTE *types, DWORD count )
+BOOL CDECL nulldrv_PolyDraw( PHYSDEV dev, const POINT *points, const BYTE *types, DWORD count )
 {
     DC *dc = get_nulldrv_dc( dev );
     POINT *line_pts = NULL, *bzr_pts = NULL, bzr[4];
@@ -211,7 +211,7 @@ BOOL nulldrv_PolyDraw( PHYSDEV dev, const POINT *points, const BYTE *types, DWOR
     return TRUE;
 }
 
-BOOL nulldrv_PolylineTo( PHYSDEV dev, const POINT *points, INT count )
+BOOL CDECL nulldrv_PolylineTo( PHYSDEV dev, const POINT *points, INT count )
 {
     DC *dc = get_nulldrv_dc( dev );
     BOOL ret = FALSE;
diff --git a/dlls/gdi32/palette.c b/dlls/gdi32/palette.c
index 52bd0d30bb..fb180461fa 100644
--- a/dlls/gdi32/palette.c
+++ b/dlls/gdi32/palette.c
@@ -38,7 +38,7 @@
 
 WINE_DEFAULT_DEBUG_CHANNEL(palette);
 
-typedef BOOL (*unrealize_function)(HPALETTE);
+typedef BOOL (CDECL *unrealize_function)(HPALETTE);
 
 typedef struct tagPALETTEOBJ
 {
@@ -427,7 +427,7 @@ UINT WINAPI GetSystemPaletteEntries(
 
 
 /* null driver fallback implementation for GetSystemPaletteEntries */
-UINT nulldrv_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, PALETTEENTRY *entries )
+UINT CDECL nulldrv_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, PALETTEENTRY *entries )
 {
     if (entries && start < 256)
     {
@@ -500,7 +500,7 @@ UINT WINAPI GetNearestPaletteIndex(
 
 
 /* null driver fallback implementation for GetNearestColor */
-COLORREF nulldrv_GetNearestColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL nulldrv_GetNearestColor( PHYSDEV dev, COLORREF color )
 {
     unsigned char spec_type;
     DC *dc = get_nulldrv_dc( dev );
diff --git a/dlls/gdi32/path.c b/dlls/gdi32/path.c
index 8cf86ccb2e..a36077883d 100644
--- a/dlls/gdi32/path.c
+++ b/dlls/gdi32/path.c
@@ -755,7 +755,7 @@ BOOL WINAPI SelectClipPath(HDC hdc, INT iMode)
 /***********************************************************************
  *           pathdrv_BeginPath
  */
-static BOOL pathdrv_BeginPath( PHYSDEV dev )
+static BOOL CDECL pathdrv_BeginPath( PHYSDEV dev )
 {
     /* path already open, nothing to do */
     return TRUE;
@@ -765,7 +765,7 @@ static BOOL pathdrv_BeginPath( PHYSDEV dev )
 /***********************************************************************
  *           pathdrv_AbortPath
  */
-static BOOL pathdrv_AbortPath( PHYSDEV dev )
+static BOOL CDECL pathdrv_AbortPath( PHYSDEV dev )
 {
     DC *dc = get_physdev_dc( dev );
 
@@ -777,7 +777,7 @@ static BOOL pathdrv_AbortPath( PHYSDEV dev )
 /***********************************************************************
  *           pathdrv_EndPath
  */
-static BOOL pathdrv_EndPath( PHYSDEV dev )
+static BOOL CDECL pathdrv_EndPath( PHYSDEV dev )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -792,8 +792,8 @@ static BOOL pathdrv_EndPath( PHYSDEV dev )
 /***********************************************************************
  *           pathdrv_CreateDC
  */
-static BOOL pathdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
-                              LPCWSTR output, const DEVMODEW *devmode )
+static BOOL CDECL pathdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
+                                    LPCWSTR output, const DEVMODEW *devmode )
 {
     struct path_physdev *physdev = HeapAlloc( GetProcessHeap(), 0, sizeof(*physdev) );
 
@@ -806,7 +806,7 @@ static BOOL pathdrv_CreateDC( PHYSDEV *dev, LPCWSTR driver, LPCWSTR device,
 /*************************************************************
  *           pathdrv_DeleteDC
  */
-static BOOL pathdrv_DeleteDC( PHYSDEV dev )
+static BOOL CDECL pathdrv_DeleteDC( PHYSDEV dev )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
 
@@ -865,7 +865,7 @@ BOOL PATH_RestorePath( DC *dst, DC *src )
 /*************************************************************
  *           pathdrv_MoveTo
  */
-static BOOL pathdrv_MoveTo( PHYSDEV dev, INT x, INT y )
+static BOOL CDECL pathdrv_MoveTo( PHYSDEV dev, INT x, INT y )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -881,7 +881,7 @@ static BOOL pathdrv_MoveTo( PHYSDEV dev, INT x, INT y )
 /*************************************************************
  *           pathdrv_LineTo
  */
-static BOOL pathdrv_LineTo( PHYSDEV dev, INT x, INT y )
+static BOOL CDECL pathdrv_LineTo( PHYSDEV dev, INT x, INT y )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -896,7 +896,7 @@ static BOOL pathdrv_LineTo( PHYSDEV dev, INT x, INT y )
 /*************************************************************
  *           pathdrv_Rectangle
  */
-static BOOL pathdrv_Rectangle( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
+static BOOL CDECL pathdrv_Rectangle( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -923,7 +923,7 @@ static BOOL pathdrv_Rectangle( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
 /*************************************************************
  *           pathdrv_RoundRect
  */
-static BOOL pathdrv_RoundRect( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2, INT ell_width, INT ell_height )
+static BOOL CDECL pathdrv_RoundRect( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2, INT ell_width, INT ell_height )
 {
     const double factor = 0.55428475; /* 4 / 3 * (sqrt(2) - 1) */
     struct path_physdev *physdev = get_path_physdev( dev );
@@ -998,7 +998,7 @@ static BOOL pathdrv_RoundRect( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2, INT
 /*************************************************************
  *           pathdrv_Ellipse
  */
-static BOOL pathdrv_Ellipse( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
+static BOOL CDECL pathdrv_Ellipse( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2 )
 {
     const double factor = 0.55428475; /* 4 / 3 * (sqrt(2) - 1) */
     struct path_physdev *physdev = get_path_physdev( dev );
@@ -1205,7 +1205,7 @@ static BOOL PATH_Arc( PHYSDEV dev, INT x1, INT y1, INT x2, INT y2,
 /*************************************************************
  *           pathdrv_AngleArc
  */
-static BOOL pathdrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT eStartAngle, FLOAT eSweepAngle)
+static BOOL CDECL pathdrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT eStartAngle, FLOAT eSweepAngle)
 {
     int x1 = GDI_ROUND( x + cos(eStartAngle*M_PI/180) * radius );
     int y1 = GDI_ROUND( y - sin(eStartAngle*M_PI/180) * radius );
@@ -1219,8 +1219,8 @@ static BOOL pathdrv_AngleArc( PHYSDEV dev, INT x, INT y, DWORD radius, FLOAT eSt
 /*************************************************************
  *           pathdrv_Arc
  */
-static BOOL pathdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                         INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL pathdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                               INT xstart, INT ystart, INT xend, INT yend )
 {
     DC *dc = get_physdev_dc( dev );
     return PATH_Arc( dev, left, top, right, bottom, xstart, ystart, xend, yend,
@@ -1231,8 +1231,8 @@ static BOOL pathdrv_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /*************************************************************
  *           pathdrv_ArcTo
  */
-static BOOL pathdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                           INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL pathdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                 INT xstart, INT ystart, INT xend, INT yend )
 {
     DC *dc = get_physdev_dc( dev );
     return PATH_Arc( dev, left, top, right, bottom, xstart, ystart, xend, yend,
@@ -1243,8 +1243,8 @@ static BOOL pathdrv_ArcTo( PHYSDEV dev, INT left, INT top, INT right, INT bottom
 /*************************************************************
  *           pathdrv_Chord
  */
-static BOOL pathdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                           INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL pathdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                 INT xstart, INT ystart, INT xend, INT yend )
 {
     DC *dc = get_physdev_dc( dev );
     return PATH_Arc( dev, left, top, right, bottom, xstart, ystart, xend, yend,
@@ -1255,8 +1255,8 @@ static BOOL pathdrv_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom
 /*************************************************************
  *           pathdrv_Pie
  */
-static BOOL pathdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                         INT xstart, INT ystart, INT xend, INT yend )
+static BOOL CDECL pathdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                               INT xstart, INT ystart, INT xend, INT yend )
 {
     DC *dc = get_physdev_dc( dev );
     return PATH_Arc( dev, left, top, right, bottom, xstart, ystart, xend, yend,
@@ -1267,7 +1267,7 @@ static BOOL pathdrv_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /*************************************************************
  *           pathdrv_PolyBezierTo
  */
-static BOOL pathdrv_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD cbPoints )
+static BOOL CDECL pathdrv_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD cbPoints )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1279,7 +1279,7 @@ static BOOL pathdrv_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD cbPoints
 /*************************************************************
  *           pathdrv_PolyBezier
  */
-static BOOL pathdrv_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD cbPoints )
+static BOOL CDECL pathdrv_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD cbPoints )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1294,7 +1294,7 @@ static BOOL pathdrv_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD cbPoints )
 /*************************************************************
  *           pathdrv_PolyDraw
  */
-static BOOL pathdrv_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD cbPoints )
+static BOOL CDECL pathdrv_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types, DWORD cbPoints )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     struct gdi_path *path = physdev->path;
@@ -1347,7 +1347,7 @@ static BOOL pathdrv_PolyDraw( PHYSDEV dev, const POINT *pts, const BYTE *types,
 /*************************************************************
  *           pathdrv_Polyline
  */
-static BOOL pathdrv_Polyline( PHYSDEV dev, const POINT *pts, INT count )
+static BOOL CDECL pathdrv_Polyline( PHYSDEV dev, const POINT *pts, INT count )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1363,7 +1363,7 @@ static BOOL pathdrv_Polyline( PHYSDEV dev, const POINT *pts, INT count )
 /*************************************************************
  *           pathdrv_PolylineTo
  */
-static BOOL pathdrv_PolylineTo( PHYSDEV dev, const POINT *pts, INT count )
+static BOOL CDECL pathdrv_PolylineTo( PHYSDEV dev, const POINT *pts, INT count )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1376,7 +1376,7 @@ static BOOL pathdrv_PolylineTo( PHYSDEV dev, const POINT *pts, INT count )
 /*************************************************************
  *           pathdrv_Polygon
  */
-static BOOL pathdrv_Polygon( PHYSDEV dev, const POINT *pts, INT count )
+static BOOL CDECL pathdrv_Polygon( PHYSDEV dev, const POINT *pts, INT count )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1393,7 +1393,7 @@ static BOOL pathdrv_Polygon( PHYSDEV dev, const POINT *pts, INT count )
 /*************************************************************
  *           pathdrv_PolyPolygon
  */
-static BOOL pathdrv_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* counts, UINT polygons )
+static BOOL CDECL pathdrv_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* counts, UINT polygons )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1423,7 +1423,7 @@ static BOOL pathdrv_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* count
 /*************************************************************
  *           pathdrv_PolyPolyline
  */
-static BOOL pathdrv_PolyPolyline( PHYSDEV dev, const POINT* pts, const DWORD* counts, DWORD polylines )
+static BOOL CDECL pathdrv_PolyPolyline( PHYSDEV dev, const POINT* pts, const DWORD* counts, DWORD polylines )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     DC *dc = get_physdev_dc( dev );
@@ -1576,8 +1576,8 @@ static BOOL PATH_add_outline(struct path_physdev *physdev, INT x, INT y,
 /*************************************************************
  *           pathdrv_ExtTextOut
  */
-static BOOL pathdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprc,
-                                LPCWSTR str, UINT count, const INT *dx )
+static BOOL CDECL pathdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprc,
+                                      LPCWSTR str, UINT count, const INT *dx )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
     unsigned int idx, ggo_flags = GGO_NATIVE;
@@ -1631,7 +1631,7 @@ static BOOL pathdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const REC
 /*************************************************************
  *           pathdrv_CloseFigure
  */
-static BOOL pathdrv_CloseFigure( PHYSDEV dev )
+static BOOL CDECL pathdrv_CloseFigure( PHYSDEV dev )
 {
     struct path_physdev *physdev = get_path_physdev( dev );
 
@@ -2011,7 +2011,7 @@ BOOL WINAPI WidenPath(HDC hdc)
  *           null driver fallback implementations
  */
 
-BOOL nulldrv_BeginPath( PHYSDEV dev )
+BOOL CDECL nulldrv_BeginPath( PHYSDEV dev )
 {
     DC *dc = get_nulldrv_dc( dev );
     struct path_physdev *physdev;
@@ -2032,13 +2032,13 @@ BOOL nulldrv_BeginPath( PHYSDEV dev )
     return TRUE;
 }
 
-BOOL nulldrv_EndPath( PHYSDEV dev )
+BOOL CDECL nulldrv_EndPath( PHYSDEV dev )
 {
     SetLastError( ERROR_CAN_NOT_COMPLETE );
     return FALSE;
 }
 
-BOOL nulldrv_AbortPath( PHYSDEV dev )
+BOOL CDECL nulldrv_AbortPath( PHYSDEV dev )
 {
     DC *dc = get_nulldrv_dc( dev );
 
@@ -2047,13 +2047,13 @@ BOOL nulldrv_AbortPath( PHYSDEV dev )
     return TRUE;
 }
 
-BOOL nulldrv_CloseFigure( PHYSDEV dev )
+BOOL CDECL nulldrv_CloseFigure( PHYSDEV dev )
 {
     SetLastError( ERROR_CAN_NOT_COMPLETE );
     return FALSE;
 }
 
-BOOL nulldrv_SelectClipPath( PHYSDEV dev, INT mode )
+BOOL CDECL nulldrv_SelectClipPath( PHYSDEV dev, INT mode )
 {
     BOOL ret = FALSE;
     HRGN hrgn = PathToRegion( dev->hdc );
@@ -2066,28 +2066,28 @@ BOOL nulldrv_SelectClipPath( PHYSDEV dev, INT mode )
     return ret;
 }
 
-BOOL nulldrv_FillPath( PHYSDEV dev )
+BOOL CDECL nulldrv_FillPath( PHYSDEV dev )
 {
     if (GetPath( dev->hdc, NULL, NULL, 0 ) == -1) return FALSE;
     AbortPath( dev->hdc );
     return TRUE;
 }
 
-BOOL nulldrv_StrokeAndFillPath( PHYSDEV dev )
+BOOL CDECL nulldrv_StrokeAndFillPath( PHYSDEV dev )
 {
     if (GetPath( dev->hdc, NULL, NULL, 0 ) == -1) return FALSE;
     AbortPath( dev->hdc );
     return TRUE;
 }
 
-BOOL nulldrv_StrokePath( PHYSDEV dev )
+BOOL CDECL nulldrv_StrokePath( PHYSDEV dev )
 {
     if (GetPath( dev->hdc, NULL, NULL, 0 ) == -1) return FALSE;
     AbortPath( dev->hdc );
     return TRUE;
 }
 
-BOOL nulldrv_FlattenPath( PHYSDEV dev )
+BOOL CDECL nulldrv_FlattenPath( PHYSDEV dev )
 {
     DC *dc = get_nulldrv_dc( dev );
     struct gdi_path *path;
@@ -2103,7 +2103,7 @@ BOOL nulldrv_FlattenPath( PHYSDEV dev )
     return TRUE;
 }
 
-BOOL nulldrv_WidenPath( PHYSDEV dev )
+BOOL CDECL nulldrv_WidenPath( PHYSDEV dev )
 {
     DC *dc = get_nulldrv_dc( dev );
     struct gdi_path *path;
diff --git a/dlls/wineandroid.drv/init.c b/dlls/wineandroid.drv/init.c
index 7a2945c80f..10059928e5 100644
--- a/dlls/wineandroid.drv/init.c
+++ b/dlls/wineandroid.drv/init.c
@@ -152,8 +152,8 @@ static ANDROID_PDEVICE *create_android_physdev(void)
 /**********************************************************************
  *           ANDROID_CreateDC
  */
-static BOOL ANDROID_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
-                              LPCWSTR output, const DEVMODEW* initData )
+static BOOL CDECL ANDROID_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
+                                    LPCWSTR output, const DEVMODEW* initData )
 {
     ANDROID_PDEVICE *physdev = create_android_physdev();
 
@@ -167,7 +167,7 @@ static BOOL ANDROID_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
 /**********************************************************************
  *           ANDROID_CreateCompatibleDC
  */
-static BOOL ANDROID_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
+static BOOL CDECL ANDROID_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 {
     ANDROID_PDEVICE *physdev = create_android_physdev();
 
@@ -181,7 +181,7 @@ static BOOL ANDROID_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 /**********************************************************************
  *           ANDROID_DeleteDC
  */
-static BOOL ANDROID_DeleteDC( PHYSDEV dev )
+static BOOL CDECL ANDROID_DeleteDC( PHYSDEV dev )
 {
     HeapFree( GetProcessHeap(), 0, dev );
     return TRUE;
@@ -269,7 +269,7 @@ BOOL CDECL ANDROID_EnumDisplaySettingsEx( LPCWSTR name, DWORD n, LPDEVMODEW devm
 /**********************************************************************
  *           ANDROID_wine_get_wgl_driver
  */
-static struct opengl_funcs * ANDROID_wine_get_wgl_driver( PHYSDEV dev, UINT version )
+static struct opengl_funcs * CDECL ANDROID_wine_get_wgl_driver( PHYSDEV dev, UINT version )
 {
     struct opengl_funcs *ret;
 
diff --git a/dlls/winemac.drv/display.c b/dlls/winemac.drv/display.c
index 00ad7738bb..ed7766d1d4 100644
--- a/dlls/winemac.drv/display.c
+++ b/dlls/winemac.drv/display.c
@@ -1175,7 +1175,7 @@ failed:
 /***********************************************************************
  *              GetDeviceGammaRamp (MACDRV.@)
  */
-BOOL macdrv_GetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
+BOOL CDECL macdrv_GetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
 {
     BOOL ret = FALSE;
     DDGAMMARAMP *r = ramp;
@@ -1311,7 +1311,7 @@ BOOL CDECL macdrv_GetMonitorInfo(HMONITOR monitor, LPMONITORINFO info)
 /***********************************************************************
  *              SetDeviceGammaRamp (MACDRV.@)
  */
-BOOL macdrv_SetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
+BOOL CDECL macdrv_SetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
 {
     DDGAMMARAMP *r = ramp;
     struct macdrv_display *displays;
diff --git a/dlls/winemac.drv/gdi.c b/dlls/winemac.drv/gdi.c
index 7156a3c3a8..b4d3e73d17 100644
--- a/dlls/winemac.drv/gdi.c
+++ b/dlls/winemac.drv/gdi.c
@@ -174,8 +174,8 @@ static MACDRV_PDEVICE *create_mac_physdev(void)
 /**********************************************************************
  *              CreateDC (MACDRV.@)
  */
-static BOOL macdrv_CreateDC(PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
-                            LPCWSTR output, const DEVMODEW* initData)
+static BOOL CDECL macdrv_CreateDC(PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
+                                  LPCWSTR output, const DEVMODEW* initData)
 {
     MACDRV_PDEVICE *physDev = create_mac_physdev();
 
@@ -193,7 +193,7 @@ static BOOL macdrv_CreateDC(PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
 /**********************************************************************
  *              CreateCompatibleDC (MACDRV.@)
  */
-static BOOL macdrv_CreateCompatibleDC(PHYSDEV orig, PHYSDEV *pdev)
+static BOOL CDECL macdrv_CreateCompatibleDC(PHYSDEV orig, PHYSDEV *pdev)
 {
     MACDRV_PDEVICE *physDev = create_mac_physdev();
 
@@ -210,7 +210,7 @@ static BOOL macdrv_CreateCompatibleDC(PHYSDEV orig, PHYSDEV *pdev)
 /**********************************************************************
  *              DeleteDC (MACDRV.@)
  */
-static BOOL macdrv_DeleteDC(PHYSDEV dev)
+static BOOL CDECL macdrv_DeleteDC(PHYSDEV dev)
 {
     MACDRV_PDEVICE *physDev = get_macdrv_dev(dev);
 
@@ -224,7 +224,7 @@ static BOOL macdrv_DeleteDC(PHYSDEV dev)
 /***********************************************************************
  *              GetDeviceCaps (MACDRV.@)
  */
-static INT macdrv_GetDeviceCaps(PHYSDEV dev, INT cap)
+static INT CDECL macdrv_GetDeviceCaps(PHYSDEV dev, INT cap)
 {
     INT ret;
 
diff --git a/dlls/winemac.drv/macdrv.h b/dlls/winemac.drv/macdrv.h
index f948da42c7..8b2f2cb5a3 100644
--- a/dlls/winemac.drv/macdrv.h
+++ b/dlls/winemac.drv/macdrv.h
@@ -81,8 +81,8 @@ static inline RECT rect_from_cgrect(CGRect cgrect)
 
 extern CGRect macdrv_get_desktop_rect(void) DECLSPEC_HIDDEN;
 extern void macdrv_reset_device_metrics(void) DECLSPEC_HIDDEN;
-extern BOOL macdrv_GetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp) DECLSPEC_HIDDEN;
-extern BOOL macdrv_SetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp) DECLSPEC_HIDDEN;
+extern BOOL CDECL macdrv_GetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp) DECLSPEC_HIDDEN;
+extern BOOL CDECL macdrv_SetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp) DECLSPEC_HIDDEN;
 
 
 /**************************************************************************
@@ -208,8 +208,8 @@ static inline RECT rect_from_cgrect(CGRect cgrect)
 extern BOOL query_drag_exited(macdrv_query* query) DECLSPEC_HIDDEN;
 extern BOOL query_drag_drop(macdrv_query* query) DECLSPEC_HIDDEN;
 
-extern struct opengl_funcs *macdrv_wine_get_wgl_driver(PHYSDEV dev, UINT version) DECLSPEC_HIDDEN;
-extern const struct vulkan_funcs *macdrv_wine_get_vulkan_driver(PHYSDEV dev, UINT version) DECLSPEC_HIDDEN;
+extern struct opengl_funcs * CDECL macdrv_wine_get_wgl_driver(PHYSDEV dev, UINT version) DECLSPEC_HIDDEN;
+extern const struct vulkan_funcs * CDECL macdrv_wine_get_vulkan_driver(PHYSDEV dev, UINT version) DECLSPEC_HIDDEN;
 extern void sync_gl_view(struct macdrv_win_data* data, const RECT* old_whole_rect, const RECT* old_client_rect) DECLSPEC_HIDDEN;
 
 extern CGImageRef create_cgimage_from_icon_bitmaps(HDC hdc, HANDLE icon, HBITMAP hbmColor,
diff --git a/dlls/winemac.drv/opengl.c b/dlls/winemac.drv/opengl.c
index c3c2bee226..8625350b2c 100644
--- a/dlls/winemac.drv/opengl.c
+++ b/dlls/winemac.drv/opengl.c
@@ -4653,7 +4653,7 @@ static struct opengl_funcs opengl_funcs =
 /**********************************************************************
  *              macdrv_wine_get_wgl_driver
  */
-struct opengl_funcs *macdrv_wine_get_wgl_driver(PHYSDEV dev, UINT version)
+struct opengl_funcs * CDECL macdrv_wine_get_wgl_driver(PHYSDEV dev, UINT version)
 {
     if (version != WINE_WGL_DRIVER_VERSION)
     {
diff --git a/dlls/winemac.drv/vulkan.c b/dlls/winemac.drv/vulkan.c
index ea785c992d..cc7f22f678 100644
--- a/dlls/winemac.drv/vulkan.c
+++ b/dlls/winemac.drv/vulkan.c
@@ -550,7 +550,7 @@ static const struct vulkan_funcs *get_vulkan_driver(UINT version)
 
 #endif /* SONAME_LIBMOLTENVK */
 
-const struct vulkan_funcs *macdrv_wine_get_vulkan_driver(PHYSDEV dev, UINT version)
+const struct vulkan_funcs * CDECL macdrv_wine_get_vulkan_driver(PHYSDEV dev, UINT version)
 {
     const struct vulkan_funcs *ret;
 
diff --git a/dlls/wineps.drv/bitblt.c b/dlls/wineps.drv/bitblt.c
index 5e54b70606..710b1b8a82 100644
--- a/dlls/wineps.drv/bitblt.c
+++ b/dlls/wineps.drv/bitblt.c
@@ -28,7 +28,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(psdrv);
  *
  *                    PSDRV_PatBlt
  */
-BOOL PSDRV_PatBlt(PHYSDEV dev, struct bitblt_coords *dst, DWORD dwRop)
+BOOL CDECL PSDRV_PatBlt(PHYSDEV dev, struct bitblt_coords *dst, DWORD dwRop)
 {
     switch(dwRop) {
     case PATCOPY:
diff --git a/dlls/wineps.drv/bitmap.c b/dlls/wineps.drv/bitmap.c
index c1de724b8e..1a98f16270 100644
--- a/dlls/wineps.drv/bitmap.c
+++ b/dlls/wineps.drv/bitmap.c
@@ -184,9 +184,9 @@ static void PSDRV_WriteImageBits( PHYSDEV dev, const BITMAPINFO *info, BOOL gray
 /***********************************************************************
  *           PSDRV_PutImage
  */
-DWORD PSDRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                      const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                      struct bitblt_coords *dst, DWORD rop )
+DWORD CDECL PSDRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                            const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                            struct bitblt_coords *dst, DWORD rop )
 {
     int src_stride, dst_stride, size, x, y, width, height, bit_offset;
     int dst_x, dst_y, dst_width, dst_height;
diff --git a/dlls/wineps.drv/brush.c b/dlls/wineps.drv/brush.c
index 73e67919d4..bbf636761c 100644
--- a/dlls/wineps.drv/brush.c
+++ b/dlls/wineps.drv/brush.c
@@ -27,7 +27,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(psdrv);
 /***********************************************************************
  *           SelectBrush   (WINEPS.@)
  */
-HBRUSH PSDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
+HBRUSH CDECL PSDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     LOGBRUSH logbrush;
@@ -70,7 +70,7 @@ HBRUSH PSDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern
 /***********************************************************************
  *           SetDCBrushColor (WINEPS.@)
  */
-COLORREF PSDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL PSDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
diff --git a/dlls/wineps.drv/builtin.c b/dlls/wineps.drv/builtin.c
index 67f452d937..7617a46946 100644
--- a/dlls/wineps.drv/builtin.c
+++ b/dlls/wineps.drv/builtin.c
@@ -261,7 +261,7 @@ BOOL PSDRV_WriteBuiltinGlyphShow(PHYSDEV dev, LPCWSTR str, INT count)
 /***********************************************************************
  *           PSDRV_GetTextMetrics
  */
-BOOL PSDRV_GetTextMetrics(PHYSDEV dev, TEXTMETRICW *metrics)
+BOOL CDECL PSDRV_GetTextMetrics(PHYSDEV dev, TEXTMETRICW *metrics)
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
@@ -318,7 +318,7 @@ const AFMMETRICS *PSDRV_UVMetrics(LONG UV, const AFM *afm)
 /***********************************************************************
  *           PSDRV_GetTextExtentExPoint
  */
-BOOL PSDRV_GetTextExtentExPoint(PHYSDEV dev, LPCWSTR str, INT count, LPINT alpDx)
+BOOL CDECL PSDRV_GetTextExtentExPoint(PHYSDEV dev, LPCWSTR str, INT count, LPINT alpDx)
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     int     	    i;
@@ -343,7 +343,7 @@ BOOL PSDRV_GetTextExtentExPoint(PHYSDEV dev, LPCWSTR str, INT count, LPINT alpDx
 /***********************************************************************
  *           PSDRV_GetCharWidth
  */
-BOOL PSDRV_GetCharWidth(PHYSDEV dev, UINT firstChar, UINT lastChar, LPINT buffer)
+BOOL CDECL PSDRV_GetCharWidth(PHYSDEV dev, UINT firstChar, UINT lastChar, LPINT buffer)
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     UINT    	    i;
@@ -408,7 +408,7 @@ static UINT PSDRV_GetFontMetric(HDC hdc, const AFM *afm,
 /***********************************************************************
  *           PSDRV_EnumFonts
  */
-BOOL PSDRV_EnumFonts( PHYSDEV dev, LPLOGFONTW plf, FONTENUMPROCW proc, LPARAM lp )
+BOOL CDECL PSDRV_EnumFonts( PHYSDEV dev, LPLOGFONTW plf, FONTENUMPROCW proc, LPARAM lp )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pEnumFonts );
diff --git a/dlls/wineps.drv/color.c b/dlls/wineps.drv/color.c
index 867260ad74..42fe57c2a0 100644
--- a/dlls/wineps.drv/color.c
+++ b/dlls/wineps.drv/color.c
@@ -96,7 +96,7 @@ void PSDRV_CreateColor( PHYSDEV dev, PSCOLOR *pscolor, COLORREF wincolor )
 /***********************************************************************
  *           PSDRV_SetBkColor
  */
-COLORREF PSDRV_SetBkColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL PSDRV_SetBkColor( PHYSDEV dev, COLORREF color )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     PSDRV_CreateColor(dev, &physDev->bkColor, color);
@@ -107,7 +107,7 @@ COLORREF PSDRV_SetBkColor( PHYSDEV dev, COLORREF color )
 /***********************************************************************
  *           PSDRV_SetTextColor
  */
-COLORREF PSDRV_SetTextColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL PSDRV_SetTextColor( PHYSDEV dev, COLORREF color )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     PSDRV_CreateColor(dev, &physDev->font.color, color);
diff --git a/dlls/wineps.drv/driver.c b/dlls/wineps.drv/driver.c
index f8e9cecb28..173f6db7bd 100644
--- a/dlls/wineps.drv/driver.c
+++ b/dlls/wineps.drv/driver.c
@@ -521,9 +521,9 @@ static DEVMODEA *DEVMODEdupWtoA( const DEVMODEW *dmW )
  *
  * Just returns default devmode at the moment.  No use of initialization file.
  */
-INT PSDRV_ExtDeviceMode(LPSTR lpszDriver, HWND hwnd, LPDEVMODEA lpdmOutput,
-                        LPSTR lpszDevice, LPSTR lpszPort, LPDEVMODEA lpdmInput,
-                        LPSTR lpszProfile, DWORD dwMode)
+INT CDECL PSDRV_ExtDeviceMode(LPSTR lpszDriver, HWND hwnd, LPDEVMODEA lpdmOutput,
+                              LPSTR lpszDevice, LPSTR lpszPort, LPDEVMODEA lpdmInput,
+                              LPSTR lpszProfile, DWORD dwMode)
 {
   PRINTERINFO *pi = PSDRV_FindPrinterInfoA(lpszDevice);
   if(!pi) return -1;
@@ -616,8 +616,8 @@ INT PSDRV_ExtDeviceMode(LPSTR lpszDriver, HWND hwnd, LPDEVMODEA lpdmOutput,
  * Returns
  *      Result depends on the setting of fwCapability.  -1 indicates failure.
  */
-DWORD PSDRV_DeviceCapabilities(LPSTR lpszDriver, LPCSTR lpszDevice, LPCSTR lpszPort,
-                               WORD fwCapability, LPSTR lpszOutput, LPDEVMODEA lpDevMode)
+DWORD CDECL PSDRV_DeviceCapabilities(LPSTR lpszDriver, LPCSTR lpszDevice, LPCSTR lpszPort,
+                                     WORD fwCapability, LPSTR lpszOutput, LPDEVMODEA lpDevMode)
 {
   PRINTERINFO *pi;
   DEVMODEW *lpdm;
diff --git a/dlls/wineps.drv/escape.c b/dlls/wineps.drv/escape.c
index d8be542609..10eb68a423 100644
--- a/dlls/wineps.drv/escape.c
+++ b/dlls/wineps.drv/escape.c
@@ -52,8 +52,8 @@ DWORD write_spool( PHYSDEV dev, const void *data, DWORD num )
 /**********************************************************************
  *           ExtEscape  (WINEPS.@)
  */
-INT PSDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_data,
-                     INT cbOutput, LPVOID out_data )
+INT CDECL PSDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_data,
+                           INT cbOutput, LPVOID out_data )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
@@ -387,7 +387,7 @@ INT PSDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_data,
 /************************************************************************
  *           PSDRV_StartPage
  */
-INT PSDRV_StartPage( PHYSDEV dev )
+INT CDECL PSDRV_StartPage( PHYSDEV dev )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
@@ -410,7 +410,7 @@ INT PSDRV_StartPage( PHYSDEV dev )
 /************************************************************************
  *           PSDRV_EndPage
  */
-INT PSDRV_EndPage( PHYSDEV dev )
+INT CDECL PSDRV_EndPage( PHYSDEV dev )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
@@ -433,7 +433,7 @@ INT PSDRV_EndPage( PHYSDEV dev )
 /************************************************************************
  *           PSDRV_StartDoc
  */
-INT PSDRV_StartDoc( PHYSDEV dev, const DOCINFOW *doc )
+INT CDECL PSDRV_StartDoc( PHYSDEV dev, const DOCINFOW *doc )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     DOC_INFO_1W di;
@@ -498,7 +498,7 @@ INT PSDRV_StartDoc( PHYSDEV dev, const DOCINFOW *doc )
 /************************************************************************
  *           PSDRV_EndDoc
  */
-INT PSDRV_EndDoc( PHYSDEV dev )
+INT CDECL PSDRV_EndDoc( PHYSDEV dev )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     INT ret = 1;
diff --git a/dlls/wineps.drv/font.c b/dlls/wineps.drv/font.c
index 5c5033cec7..d6e330159c 100644
--- a/dlls/wineps.drv/font.c
+++ b/dlls/wineps.drv/font.c
@@ -37,7 +37,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(psdrv);
 /***********************************************************************
  *           SelectFont   (WINEPS.@)
  */
-HFONT PSDRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
+HFONT CDECL PSDRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     PHYSDEV next = GET_NEXT_PHYSDEV( dev, pSelectFont );
diff --git a/dlls/wineps.drv/graphics.c b/dlls/wineps.drv/graphics.c
index 8af1024ef8..27c0ba45ed 100644
--- a/dlls/wineps.drv/graphics.c
+++ b/dlls/wineps.drv/graphics.c
@@ -67,7 +67,7 @@ static void PSDRV_DrawLine( PHYSDEV dev )
 /***********************************************************************
  *           PSDRV_LineTo
  */
-BOOL PSDRV_LineTo(PHYSDEV dev, INT x, INT y)
+BOOL CDECL PSDRV_LineTo(PHYSDEV dev, INT x, INT y)
 {
     POINT pt[2];
 
@@ -93,7 +93,7 @@ BOOL PSDRV_LineTo(PHYSDEV dev, INT x, INT y)
 /***********************************************************************
  *           PSDRV_Rectangle
  */
-BOOL PSDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+BOOL CDECL PSDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     RECT rect;
@@ -131,8 +131,8 @@ BOOL PSDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 /***********************************************************************
  *           PSDRV_RoundRect
  */
-BOOL PSDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
-                      INT bottom, INT ell_width, INT ell_height )
+BOOL CDECL PSDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
+                            INT bottom, INT ell_width, INT ell_height )
 {
     RECT rect[2];
 
@@ -241,8 +241,8 @@ static BOOL PSDRV_DrawArc( PHYSDEV dev, INT left, INT top,
 /***********************************************************************
  *           PSDRV_Arc
  */
-BOOL PSDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL PSDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                      INT xstart, INT ystart, INT xend, INT yend )
 {
     return PSDRV_DrawArc( dev, left, top, right, bottom, xstart, ystart, xend, yend, 0 );
 }
@@ -250,8 +250,8 @@ BOOL PSDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           PSDRV_Chord
  */
-BOOL PSDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                  INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL PSDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                        INT xstart, INT ystart, INT xend, INT yend )
 {
     return PSDRV_DrawArc( dev, left, top, right, bottom, xstart, ystart, xend, yend, 1 );
 }
@@ -260,8 +260,8 @@ BOOL PSDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           PSDRV_Pie
  */
-BOOL PSDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL PSDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                      INT xstart, INT ystart, INT xend, INT yend )
 {
     return PSDRV_DrawArc( dev, left, top, right, bottom, xstart, ystart, xend, yend, 2 );
 }
@@ -270,7 +270,7 @@ BOOL PSDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           PSDRV_Ellipse
  */
-BOOL PSDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom)
+BOOL CDECL PSDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 {
     INT x, y, w, h;
     RECT rect;
@@ -302,7 +302,7 @@ BOOL PSDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 /***********************************************************************
  *           PSDRV_PolyPolyline
  */
-BOOL PSDRV_PolyPolyline( PHYSDEV dev, const POINT* pts, const DWORD* counts, DWORD polylines )
+BOOL CDECL PSDRV_PolyPolyline( PHYSDEV dev, const POINT* pts, const DWORD* counts, DWORD polylines )
 {
     DWORD polyline, line, total;
     POINT *dev_pts, *pt;
@@ -337,7 +337,7 @@ BOOL PSDRV_PolyPolyline( PHYSDEV dev, const POINT* pts, const DWORD* counts, DWO
 /***********************************************************************
  *           PSDRV_PolyPolygon
  */
-BOOL PSDRV_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* counts, UINT polygons )
+BOOL CDECL PSDRV_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* counts, UINT polygons )
 {
     DWORD polygon, total;
     INT line;
@@ -379,7 +379,7 @@ BOOL PSDRV_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* counts, UINT p
 /***********************************************************************
  *           PSDRV_PolyBezier
  */
-BOOL PSDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
+BOOL CDECL PSDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     DWORD i;
     POINT *dev_pts;
@@ -405,7 +405,7 @@ BOOL PSDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count )
 /***********************************************************************
  *           PSDRV_PolyBezierTo
  */
-BOOL PSDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
+BOOL CDECL PSDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
 {
     DWORD i;
     POINT *dev_pts;
@@ -433,7 +433,7 @@ BOOL PSDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count )
 /***********************************************************************
  *           PSDRV_SetPixel
  */
-COLORREF PSDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
+COLORREF CDECL PSDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 {
     PSCOLOR pscolor;
     POINT pt;
@@ -458,7 +458,7 @@ COLORREF PSDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 /***********************************************************************
  *           PSDRV_PaintRgn
  */
-BOOL PSDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
+BOOL CDECL PSDRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
 {
     RGNDATA *rgndata = NULL;
     RECT *pRect;
@@ -548,7 +548,7 @@ done:
 /***********************************************************************
  *           PSDRV_FillPath
  */
-BOOL PSDRV_FillPath( PHYSDEV dev )
+BOOL CDECL PSDRV_FillPath( PHYSDEV dev )
 {
     return paint_path( dev, FALSE, TRUE );
 }
@@ -556,7 +556,7 @@ BOOL PSDRV_FillPath( PHYSDEV dev )
 /***********************************************************************
  *           PSDRV_StrokeAndFillPath
  */
-BOOL PSDRV_StrokeAndFillPath( PHYSDEV dev )
+BOOL CDECL PSDRV_StrokeAndFillPath( PHYSDEV dev )
 {
     return paint_path( dev, TRUE, TRUE );
 }
@@ -564,7 +564,7 @@ BOOL PSDRV_StrokeAndFillPath( PHYSDEV dev )
 /***********************************************************************
  *           PSDRV_StrokePath
  */
-BOOL PSDRV_StrokePath( PHYSDEV dev )
+BOOL CDECL PSDRV_StrokePath( PHYSDEV dev )
 {
     return paint_path( dev, TRUE, FALSE );
 }
diff --git a/dlls/wineps.drv/init.c b/dlls/wineps.drv/init.c
index ae65d6919b..3ffdab956a 100644
--- a/dlls/wineps.drv/init.c
+++ b/dlls/wineps.drv/init.c
@@ -367,8 +367,8 @@ static PSDRV_PDEVICE *create_psdrv_physdev( PRINTERINFO *pi )
 /**********************************************************************
  *	     PSDRV_CreateDC
  */
-static BOOL PSDRV_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
-                            LPCWSTR output, const DEVMODEW* initData )
+static BOOL CDECL PSDRV_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
+                                  LPCWSTR output, const DEVMODEW* initData )
 {
     PSDRV_PDEVICE *physDev;
     PRINTERINFO *pi;
@@ -411,7 +411,7 @@ static BOOL PSDRV_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
 /**********************************************************************
  *	     PSDRV_CreateCompatibleDC
  */
-static BOOL PSDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
+static BOOL CDECL PSDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 {
     HDC hdc = (*pdev)->hdc;
     PSDRV_PDEVICE *physDev, *orig_dev = get_psdrv_dev( orig );
@@ -431,7 +431,7 @@ static BOOL PSDRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 /**********************************************************************
  *	     PSDRV_DeleteDC
  */
-static BOOL PSDRV_DeleteDC( PHYSDEV dev )
+static BOOL CDECL PSDRV_DeleteDC( PHYSDEV dev )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
@@ -448,7 +448,7 @@ static BOOL PSDRV_DeleteDC( PHYSDEV dev )
 /**********************************************************************
  *	     ResetDC   (WINEPS.@)
  */
-static HDC PSDRV_ResetDC( PHYSDEV dev, const DEVMODEW *lpInitData )
+static HDC CDECL PSDRV_ResetDC( PHYSDEV dev, const DEVMODEW *lpInitData )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
@@ -463,7 +463,7 @@ static HDC PSDRV_ResetDC( PHYSDEV dev, const DEVMODEW *lpInitData )
 /***********************************************************************
  *           GetDeviceCaps    (WINEPS.@)
  */
-static INT PSDRV_GetDeviceCaps( PHYSDEV dev, INT cap )
+static INT CDECL PSDRV_GetDeviceCaps( PHYSDEV dev, INT cap )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
diff --git a/dlls/wineps.drv/pen.c b/dlls/wineps.drv/pen.c
index b3ad60606e..992d38f8f4 100644
--- a/dlls/wineps.drv/pen.c
+++ b/dlls/wineps.drv/pen.c
@@ -37,7 +37,7 @@ static const DWORD PEN_alternate[]  = { 1 };
 /***********************************************************************
  *           SelectPen   (WINEPS.@)
  */
-HPEN PSDRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
+HPEN CDECL PSDRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     LOGPEN logpen;
@@ -141,7 +141,7 @@ HPEN PSDRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *patter
 /***********************************************************************
  *           SetDCPenColor (WINEPS.@)
  */
-COLORREF PSDRV_SetDCPenColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL PSDRV_SetDCPenColor( PHYSDEV dev, COLORREF color )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
 
diff --git a/dlls/wineps.drv/psdrv.h b/dlls/wineps.drv/psdrv.h
index af77d90abf..84828a5c9c 100644
--- a/dlls/wineps.drv/psdrv.h
+++ b/dlls/wineps.drv/psdrv.h
@@ -421,53 +421,53 @@ extern PAGESIZE *find_pagesize( PPD *ppd, const PSDRV_DEVMODE *dm ) DECLSPEC_HID
 extern DUPLEX *find_duplex( PPD *ppd, const PSDRV_DEVMODE *dm ) DECLSPEC_HIDDEN;
 
 /* GDI driver functions */
-extern BOOL PSDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                       INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                         INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern DWORD PSDRV_DeviceCapabilities(LPSTR lpszDriver, LPCSTR lpszDevice, LPCSTR lpszPort,
-                                      WORD fwCapability, LPSTR lpszOutput, LPDEVMODEA lpDevMode) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
-extern INT PSDRV_EndDoc( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern INT PSDRV_EndPage( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_EnumFonts( PHYSDEV dev, LPLOGFONTW plf, FONTENUMPROCW proc, LPARAM lp ) DECLSPEC_HIDDEN;
-extern INT PSDRV_ExtDeviceMode(LPSTR lpszDriver, HWND hwnd, LPDEVMODEA lpdmOutput,
-                               LPSTR lpszDevice, LPSTR lpszPort, LPDEVMODEA lpdmInput,
-                               LPSTR lpszProfile, DWORD dwMode) DECLSPEC_HIDDEN;
-extern INT PSDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_data,
+extern BOOL CDECL PSDRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                             INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                               INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern DWORD CDECL PSDRV_DeviceCapabilities(LPSTR lpszDriver, LPCSTR lpszDevice, LPCSTR lpszPort,
+                                            WORD fwCapability, LPSTR lpszOutput, LPDEVMODEA lpDevMode) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
+extern INT CDECL PSDRV_EndDoc( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern INT CDECL PSDRV_EndPage( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_EnumFonts( PHYSDEV dev, LPLOGFONTW plf, FONTENUMPROCW proc, LPARAM lp ) DECLSPEC_HIDDEN;
+extern INT CDECL PSDRV_ExtDeviceMode(LPSTR lpszDriver, HWND hwnd, LPDEVMODEA lpdmOutput,
+                                     LPSTR lpszDevice, LPSTR lpszPort, LPDEVMODEA lpdmInput,
+                                     LPSTR lpszProfile, DWORD dwMode) DECLSPEC_HIDDEN;
+extern INT CDECL PSDRV_ExtEscape( PHYSDEV dev, INT nEscape, INT cbInput, LPCVOID in_data,
                             INT cbOutput, LPVOID out_data ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
-                              const RECT *lprect, LPCWSTR str, UINT count, const INT *lpDx ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_GetCharWidth(PHYSDEV dev, UINT firstChar, UINT lastChar, LPINT buffer) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_GetTextExtentExPoint(PHYSDEV dev, LPCWSTR str, INT count, LPINT alpDx) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_GetTextMetrics(PHYSDEV dev, TEXTMETRICW *metrics) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_LineTo(PHYSDEV dev, INT x, INT y) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_PatBlt(PHYSDEV dev, struct bitblt_coords *dst, DWORD dwRop) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                       INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* counts, UINT polygons ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_PolyPolyline( PHYSDEV dev, const POINT* pts, const DWORD* counts, DWORD polylines ) DECLSPEC_HIDDEN;
-extern DWORD PSDRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                             const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                             struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
-                             INT bottom, INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
-extern HBRUSH PSDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern HFONT PSDRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags ) DECLSPEC_HIDDEN;
-extern HPEN PSDRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern COLORREF PSDRV_SetBkColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF PSDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF PSDRV_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF PSDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
-extern COLORREF PSDRV_SetTextColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern INT PSDRV_StartDoc( PHYSDEV dev, const DOCINFOW *doc ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL PSDRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
+                                    const RECT *lprect, LPCWSTR str, UINT count, const INT *lpDx ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_GetCharWidth(PHYSDEV dev, UINT firstChar, UINT lastChar, LPINT buffer) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_GetTextExtentExPoint(PHYSDEV dev, LPCWSTR str, INT count, LPINT alpDx) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_GetTextMetrics(PHYSDEV dev, TEXTMETRICW *metrics) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_LineTo(PHYSDEV dev, INT x, INT y) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_PatBlt(PHYSDEV dev, struct bitblt_coords *dst, DWORD dwRop) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                             INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_PolyBezier( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_PolyBezierTo( PHYSDEV dev, const POINT *pts, DWORD count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_PolyPolygon( PHYSDEV dev, const POINT* pts, const INT* counts, UINT polygons ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_PolyPolyline( PHYSDEV dev, const POINT* pts, const DWORD* counts, DWORD polylines ) DECLSPEC_HIDDEN;
+extern DWORD CDECL PSDRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                                   const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                                   struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_Rectangle( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right,
+                                   INT bottom, INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
+extern HBRUSH CDECL PSDRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern HFONT CDECL PSDRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags ) DECLSPEC_HIDDEN;
+extern HPEN CDECL PSDRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL PSDRV_SetBkColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL PSDRV_SetDCBrushColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL PSDRV_SetDCPenColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL PSDRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL PSDRV_SetTextColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern INT CDECL PSDRV_StartDoc( PHYSDEV dev, const DOCINFOW *doc ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL PSDRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
 
 extern void PSDRV_MergeDevmodes(PSDRV_DEVMODE *dm1, const PSDRV_DEVMODE *dm2,
 			 PRINTERINFO *pi) DECLSPEC_HIDDEN;
@@ -538,7 +538,7 @@ extern BOOL PSDRV_WriteDIBPatternDict(PHYSDEV dev, const BITMAPINFO *bmi, BYTE *
 extern BOOL PSDRV_WriteArrayPut(PHYSDEV dev, CHAR *pszArrayName, INT nIndex, LONG lCoord) DECLSPEC_HIDDEN;
 extern BOOL PSDRV_WriteArrayDef(PHYSDEV dev, CHAR *pszArrayName, INT nSize) DECLSPEC_HIDDEN;
 
-extern INT PSDRV_StartPage( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern INT CDECL PSDRV_StartPage( PHYSDEV dev ) DECLSPEC_HIDDEN;
 
 INT PSDRV_GlyphListInit(void) DECLSPEC_HIDDEN;
 const GLYPHNAME *PSDRV_GlyphName(LPCSTR szName) DECLSPEC_HIDDEN;
diff --git a/dlls/wineps.drv/text.c b/dlls/wineps.drv/text.c
index cd5e1e6f0c..767b1529c2 100644
--- a/dlls/wineps.drv/text.c
+++ b/dlls/wineps.drv/text.c
@@ -129,8 +129,8 @@ static Run* build_vertical_runs(PHYSDEV dev, UINT flags, LPCWSTR str, UINT count
 /***********************************************************************
  *           PSDRV_ExtTextOut
  */
-BOOL PSDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect, LPCWSTR str, UINT count,
-                       const INT *lpDx )
+BOOL CDECL PSDRV_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags, const RECT *lprect, LPCWSTR str, UINT count,
+                             const INT *lpDx )
 {
     PSDRV_PDEVICE *physDev = get_psdrv_dev( dev );
     BOOL bResult = TRUE;
diff --git a/dlls/winex11.drv/bitblt.c b/dlls/winex11.drv/bitblt.c
index 0343d967f3..4eec3288e2 100644
--- a/dlls/winex11.drv/bitblt.c
+++ b/dlls/winex11.drv/bitblt.c
@@ -754,7 +754,7 @@ void execute_rop( X11DRV_PDEVICE *physdev, Pixmap src_pixmap, GC gc, const RECT
 /***********************************************************************
  *           X11DRV_PatBlt
  */
-BOOL X11DRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
+BOOL CDECL X11DRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     BOOL usePat = (((rop >> 4) & 0x0f0000) != (rop & 0x0f0000));
@@ -806,8 +806,8 @@ BOOL X11DRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop )
 /***********************************************************************
  *           X11DRV_StretchBlt
  */
-BOOL X11DRV_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                        PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
+BOOL CDECL X11DRV_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                              PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
 {
     X11DRV_PDEVICE *physDevDst = get_x11drv_dev( dst_dev );
     X11DRV_PDEVICE *physDevSrc = get_x11drv_dev( src_dev );
@@ -1207,9 +1207,9 @@ DWORD copy_image_bits( BITMAPINFO *info, BOOL is_r8g8b8, XImage *image,
 /***********************************************************************
  *           X11DRV_PutImage
  */
-DWORD X11DRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                       const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                       struct bitblt_coords *dst, DWORD rop )
+DWORD CDECL X11DRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                             const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                             struct bitblt_coords *dst, DWORD rop )
 {
     X11DRV_PDEVICE *physdev = get_x11drv_dev( dev );
     DWORD ret;
@@ -1299,8 +1299,8 @@ update_format:
 /***********************************************************************
  *           X11DRV_GetImage
  */
-DWORD X11DRV_GetImage( PHYSDEV dev, BITMAPINFO *info,
-                       struct gdi_image_bits *bits, struct bitblt_coords *src )
+DWORD CDECL X11DRV_GetImage( PHYSDEV dev, BITMAPINFO *info,
+                             struct gdi_image_bits *bits, struct bitblt_coords *src )
 {
     X11DRV_PDEVICE *physdev = get_x11drv_dev( dev );
     DWORD ret = ERROR_SUCCESS;
diff --git a/dlls/winex11.drv/brush.c b/dlls/winex11.drv/brush.c
index e3e5668b5a..0630e5725b 100644
--- a/dlls/winex11.drv/brush.c
+++ b/dlls/winex11.drv/brush.c
@@ -233,7 +233,7 @@ static BOOL select_pattern_brush( X11DRV_PDEVICE *physdev, const struct brush_pa
 /***********************************************************************
  *           SelectBrush   (X11DRV.@)
  */
-HBRUSH X11DRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
+HBRUSH CDECL X11DRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     LOGBRUSH logbrush;
@@ -285,7 +285,7 @@ HBRUSH X11DRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_patter
 /***********************************************************************
  *           SetDCBrushColor (X11DRV.@)
  */
-COLORREF X11DRV_SetDCBrushColor( PHYSDEV dev, COLORREF crColor )
+COLORREF CDECL X11DRV_SetDCBrushColor( PHYSDEV dev, COLORREF crColor )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
 
diff --git a/dlls/winex11.drv/graphics.c b/dlls/winex11.drv/graphics.c
index 2209053617..77ca60ec44 100644
--- a/dlls/winex11.drv/graphics.c
+++ b/dlls/winex11.drv/graphics.c
@@ -293,7 +293,7 @@ void restore_clipping_region( X11DRV_PDEVICE *dev )
 /***********************************************************************
  *           X11DRV_SetDeviceClipping
  */
-void X11DRV_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
+void CDECL X11DRV_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
 
@@ -528,7 +528,7 @@ INT X11DRV_YWStoDS( HDC hdc, INT height )
 /***********************************************************************
  *           X11DRV_LineTo
  */
-BOOL X11DRV_LineTo( PHYSDEV dev, INT x, INT y )
+BOOL CDECL X11DRV_LineTo( PHYSDEV dev, INT x, INT y )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     POINT pt[2];
@@ -699,8 +699,8 @@ static BOOL X11DRV_DrawArc( PHYSDEV dev, INT left, INT top, INT right, INT botto
 /***********************************************************************
  *           X11DRV_Arc
  */
-BOOL X11DRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                 INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL X11DRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                       INT xstart, INT ystart, INT xend, INT yend )
 {
     return X11DRV_DrawArc( dev, left, top, right, bottom, xstart, ystart, xend, yend, 0 );
 }
@@ -709,8 +709,8 @@ BOOL X11DRV_Arc( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           X11DRV_Pie
  */
-BOOL X11DRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                 INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL X11DRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                       INT xstart, INT ystart, INT xend, INT yend )
 {
     return X11DRV_DrawArc( dev, left, top, right, bottom, xstart, ystart, xend, yend, 2 );
 }
@@ -718,8 +718,8 @@ BOOL X11DRV_Pie( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           X11DRV_Chord
  */
-BOOL X11DRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                   INT xstart, INT ystart, INT xend, INT yend )
+BOOL CDECL X11DRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                         INT xstart, INT ystart, INT xend, INT yend )
 {
     return X11DRV_DrawArc( dev, left, top, right, bottom, xstart, ystart, xend, yend, 1 );
 }
@@ -728,7 +728,7 @@ BOOL X11DRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           X11DRV_Ellipse
  */
-BOOL X11DRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
+BOOL CDECL X11DRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     INT width, oldwidth;
@@ -771,7 +771,7 @@ BOOL X11DRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom )
 /***********************************************************************
  *           X11DRV_Rectangle
  */
-BOOL X11DRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
+BOOL CDECL X11DRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     INT width, oldwidth, oldjoinstyle;
@@ -824,8 +824,8 @@ BOOL X11DRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom)
 /***********************************************************************
  *           X11DRV_RoundRect
  */
-BOOL X11DRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                       INT ell_width, INT ell_height )
+BOOL CDECL X11DRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                             INT ell_width, INT ell_height )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     INT width, oldwidth, oldendcap;
@@ -1015,7 +1015,7 @@ BOOL X11DRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
 /***********************************************************************
  *           X11DRV_SetPixel
  */
-COLORREF X11DRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
+COLORREF CDECL X11DRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     unsigned long pixel;
@@ -1041,7 +1041,7 @@ COLORREF X11DRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color )
 /***********************************************************************
  *           X11DRV_PaintRgn
  */
-BOOL X11DRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
+BOOL CDECL X11DRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     RECT rc;
@@ -1074,7 +1074,7 @@ BOOL X11DRV_PaintRgn( PHYSDEV dev, HRGN hrgn )
 /**********************************************************************
  *          X11DRV_Polygon
  */
-BOOL X11DRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
+BOOL CDECL X11DRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     int i;
@@ -1116,7 +1116,7 @@ BOOL X11DRV_Polygon( PHYSDEV dev, const POINT* pt, INT count )
 /**********************************************************************
  *          X11DRV_PolyPolygon
  */
-BOOL X11DRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons )
+BOOL CDECL X11DRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     DWORD total = 0, max = 0, pos, i;
@@ -1184,7 +1184,7 @@ done:
 /**********************************************************************
  *          X11DRV_PolyPolyline
  */
-BOOL X11DRV_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polylines )
+BOOL CDECL X11DRV_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polylines )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     DWORD total = 0, max = 0, pos, i, j;
@@ -1307,7 +1307,7 @@ done:
 /**********************************************************************
  *          X11DRV_FillPath
  */
-BOOL X11DRV_FillPath( PHYSDEV dev )
+BOOL CDECL X11DRV_FillPath( PHYSDEV dev )
 {
     return x11drv_stroke_and_fill_path( dev, FALSE, TRUE );
 }
@@ -1315,7 +1315,7 @@ BOOL X11DRV_FillPath( PHYSDEV dev )
 /**********************************************************************
  *          X11DRV_StrokeAndFillPath
  */
-BOOL X11DRV_StrokeAndFillPath( PHYSDEV dev )
+BOOL CDECL X11DRV_StrokeAndFillPath( PHYSDEV dev )
 {
     return x11drv_stroke_and_fill_path( dev, TRUE, TRUE );
 }
@@ -1323,7 +1323,7 @@ BOOL X11DRV_StrokeAndFillPath( PHYSDEV dev )
 /**********************************************************************
  *          X11DRV_StrokePath
  */
-BOOL X11DRV_StrokePath( PHYSDEV dev )
+BOOL CDECL X11DRV_StrokePath( PHYSDEV dev )
 {
     return x11drv_stroke_and_fill_path( dev, TRUE, FALSE );
 }
@@ -1410,7 +1410,7 @@ static int ExtFloodFillXGetImageErrorHandler( Display *dpy, XErrorEvent *event,
 /**********************************************************************
  *          X11DRV_ExtFloodFill
  */
-BOOL X11DRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType )
+BOOL CDECL X11DRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     XImage *image;
@@ -1473,8 +1473,8 @@ BOOL X11DRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillTy
 /**********************************************************************
  *          X11DRV_GradientFill
  */
-BOOL X11DRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                          void *grad_array, ULONG ngrad, ULONG mode )
+BOOL CDECL X11DRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                void *grad_array, ULONG ngrad, ULONG mode )
 {
     X11DRV_PDEVICE *physdev = get_x11drv_dev( dev );
     const GRADIENT_RECT *rect = grad_array;
@@ -1637,7 +1637,7 @@ static const WCHAR color_path[] =
 /***********************************************************************
  *              GetICMProfile (X11DRV.@)
  */
-BOOL X11DRV_GetICMProfile( PHYSDEV dev, LPDWORD size, LPWSTR filename )
+BOOL CDECL X11DRV_GetICMProfile( PHYSDEV dev, LPDWORD size, LPWSTR filename )
 {
     static const WCHAR srgb[] =
         {'s','R','G','B',' ','C','o','l','o','r',' ','S','p','a','c','e',' ',
@@ -1711,7 +1711,7 @@ BOOL X11DRV_GetICMProfile( PHYSDEV dev, LPDWORD size, LPWSTR filename )
 /***********************************************************************
  *              EnumICMProfiles (X11DRV.@)
  */
-INT X11DRV_EnumICMProfiles( PHYSDEV dev, ICMENUMPROCW proc, LPARAM lparam )
+INT CDECL X11DRV_EnumICMProfiles( PHYSDEV dev, ICMENUMPROCW proc, LPARAM lparam )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     HKEY hkey;
diff --git a/dlls/winex11.drv/init.c b/dlls/winex11.drv/init.c
index 20710cc0c9..28c81a2638 100644
--- a/dlls/winex11.drv/init.c
+++ b/dlls/winex11.drv/init.c
@@ -82,8 +82,8 @@ static X11DRV_PDEVICE *create_x11_physdev( Drawable drawable )
 /**********************************************************************
  *	     X11DRV_CreateDC
  */
-static BOOL X11DRV_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
-                             LPCWSTR output, const DEVMODEW* initData )
+static BOOL CDECL X11DRV_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
+                                   LPCWSTR output, const DEVMODEW* initData )
 {
     X11DRV_PDEVICE *physDev = create_x11_physdev( root_window );
 
@@ -102,7 +102,7 @@ static BOOL X11DRV_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
 /**********************************************************************
  *	     X11DRV_CreateCompatibleDC
  */
-static BOOL X11DRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
+static BOOL CDECL X11DRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 {
     X11DRV_PDEVICE *physDev = create_x11_physdev( stock_bitmap_pixmap );
 
@@ -120,7 +120,7 @@ static BOOL X11DRV_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 /**********************************************************************
  *	     X11DRV_DeleteDC
  */
-static BOOL X11DRV_DeleteDC( PHYSDEV dev )
+static BOOL CDECL X11DRV_DeleteDC( PHYSDEV dev )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
 
@@ -145,7 +145,7 @@ void add_device_bounds( X11DRV_PDEVICE *dev, const RECT *rect )
 /***********************************************************************
  *           X11DRV_SetBoundsRect
  */
-static UINT X11DRV_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
+static UINT CDECL X11DRV_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 {
     X11DRV_PDEVICE *pdev = get_x11drv_dev( dev );
 
@@ -158,7 +158,7 @@ static UINT X11DRV_SetBoundsRect( PHYSDEV dev, RECT *rect, UINT flags )
 /***********************************************************************
  *           GetDeviceCaps    (X11DRV.@)
  */
-static INT X11DRV_GetDeviceCaps( PHYSDEV dev, INT cap )
+static INT CDECL X11DRV_GetDeviceCaps( PHYSDEV dev, INT cap )
 {
     switch(cap)
     {
@@ -176,7 +176,7 @@ static INT X11DRV_GetDeviceCaps( PHYSDEV dev, INT cap )
 /***********************************************************************
  *           SelectFont
  */
-static HFONT X11DRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
+static HFONT CDECL X11DRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
 {
     if (default_visual.depth <= 8) *aa_flags = GGO_BITMAP;  /* no anti-aliasing on <= 8bpp */
     dev = GET_NEXT_PHYSDEV( dev, pSelectFont );
@@ -186,8 +186,8 @@ static HFONT X11DRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
 /**********************************************************************
  *           ExtEscape  (X11DRV.@)
  */
-static INT X11DRV_ExtEscape( PHYSDEV dev, INT escape, INT in_count, LPCVOID in_data,
-                      INT out_count, LPVOID out_data )
+static INT CDECL X11DRV_ExtEscape( PHYSDEV dev, INT escape, INT in_count, LPCVOID in_data,
+                                   INT out_count, LPVOID out_data )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
 
@@ -314,7 +314,7 @@ static INT X11DRV_ExtEscape( PHYSDEV dev, INT escape, INT in_count, LPCVOID in_d
 /**********************************************************************
  *           X11DRV_wine_get_wgl_driver
  */
-static struct opengl_funcs * X11DRV_wine_get_wgl_driver( PHYSDEV dev, UINT version )
+static struct opengl_funcs * CDECL X11DRV_wine_get_wgl_driver( PHYSDEV dev, UINT version )
 {
     struct opengl_funcs *ret;
 
@@ -329,7 +329,7 @@ static struct opengl_funcs * X11DRV_wine_get_wgl_driver( PHYSDEV dev, UINT versi
 /**********************************************************************
  *           X11DRV_wine_get_vulkan_driver
  */
-static const struct vulkan_funcs * X11DRV_wine_get_vulkan_driver( PHYSDEV dev, UINT version )
+static const struct vulkan_funcs * CDECL X11DRV_wine_get_vulkan_driver( PHYSDEV dev, UINT version )
 {
     const struct vulkan_funcs *ret;
 
diff --git a/dlls/winex11.drv/palette.c b/dlls/winex11.drv/palette.c
index f9503349da..bba2253264 100644
--- a/dlls/winex11.drv/palette.c
+++ b/dlls/winex11.drv/palette.c
@@ -1078,7 +1078,7 @@ static int X11DRV_LookupSysPaletteExact( BYTE r, BYTE g, BYTE b )
 /***********************************************************************
  *              RealizePalette    (X11DRV.@)
  */
-UINT X11DRV_RealizePalette( PHYSDEV dev, HPALETTE hpal, BOOL primary )
+UINT CDECL X11DRV_RealizePalette( PHYSDEV dev, HPALETTE hpal, BOOL primary )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
     char flag;
@@ -1195,7 +1195,7 @@ UINT X11DRV_RealizePalette( PHYSDEV dev, HPALETTE hpal, BOOL primary )
 /***********************************************************************
  *              UnrealizePalette    (X11DRV.@)
  */
-BOOL X11DRV_UnrealizePalette( HPALETTE hpal )
+BOOL CDECL X11DRV_UnrealizePalette( HPALETTE hpal )
 {
     int *mapping = palette_get_mapping( hpal );
 
@@ -1211,7 +1211,7 @@ BOOL X11DRV_UnrealizePalette( HPALETTE hpal )
 /***********************************************************************
  *              GetSystemPaletteEntries   (X11DRV.@)
  */
-UINT X11DRV_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, LPPALETTEENTRY entries )
+UINT CDECL X11DRV_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, LPPALETTEENTRY entries )
 {
     UINT i;
 
@@ -1241,7 +1241,7 @@ UINT X11DRV_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, LPPALE
 /***********************************************************************
  *              GetNearestColor   (X11DRV.@)
  */
-COLORREF X11DRV_GetNearestColor( PHYSDEV dev, COLORREF color )
+COLORREF CDECL X11DRV_GetNearestColor( PHYSDEV dev, COLORREF color )
 {
     unsigned char spec_type = color >> 24;
     COLORREF nearest;
@@ -1283,7 +1283,7 @@ COLORREF X11DRV_GetNearestColor( PHYSDEV dev, COLORREF color )
 /***********************************************************************
  *              RealizeDefaultPalette    (X11DRV.@)
  */
-UINT X11DRV_RealizeDefaultPalette( PHYSDEV dev )
+UINT CDECL X11DRV_RealizeDefaultPalette( PHYSDEV dev )
 {
     UINT ret = 0;
 
diff --git a/dlls/winex11.drv/pen.c b/dlls/winex11.drv/pen.c
index 6df26597b9..b1ad102605 100644
--- a/dlls/winex11.drv/pen.c
+++ b/dlls/winex11.drv/pen.c
@@ -54,7 +54,7 @@ static DWORD get_user_dashes( char *res, const DWORD *style, DWORD len )
 /***********************************************************************
  *           SelectPen   (X11DRV.@)
  */
-HPEN X11DRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
+HPEN CDECL X11DRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern )
 {
     static const char PEN_dash[]          = { 16,8 };
     static const char PEN_dot[]           = { 4,4 };
@@ -154,7 +154,7 @@ HPEN X11DRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *patte
 /***********************************************************************
  *           SetDCPenColor (X11DRV.@)
  */
-COLORREF X11DRV_SetDCPenColor( PHYSDEV dev, COLORREF crColor )
+COLORREF CDECL X11DRV_SetDCPenColor( PHYSDEV dev, COLORREF crColor )
 {
     X11DRV_PDEVICE *physDev = get_x11drv_dev( dev );
 
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 9ab948f724..0d3695bdcf 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -145,50 +145,50 @@ static inline void add_bounds_rect( RECT *bounds, const RECT *rect )
 
 /* Wine driver X11 functions */
 
-extern BOOL X11DRV_Arc( PHYSDEV dev, INT left, INT top, INT right,
-                        INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                          INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
-extern INT X11DRV_EnumICMProfiles( PHYSDEV dev, ICMENUMPROCW proc, LPARAM lparam ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_GetDeviceGammaRamp( PHYSDEV dev, LPVOID ramp ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_GetICMProfile( PHYSDEV dev, LPDWORD size, LPWSTR filename ) DECLSPEC_HIDDEN;
-extern DWORD X11DRV_GetImage( PHYSDEV dev, BITMAPINFO *info,
-                              struct gdi_image_bits *bits, struct bitblt_coords *src ) DECLSPEC_HIDDEN;
-extern COLORREF X11DRV_GetNearestColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
-extern UINT X11DRV_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, LPPALETTEENTRY entries ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                                 void *grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_LineTo( PHYSDEV dev, INT x, INT y) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_Pie( PHYSDEV dev, INT left, INT top, INT right,
-                        INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_Polygon( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polylines) DECLSPEC_HIDDEN;
-extern DWORD X11DRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                              const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                              struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
-extern UINT X11DRV_RealizeDefaultPalette( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern UINT X11DRV_RealizePalette( PHYSDEV dev, HPALETTE hpal, BOOL primary ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
-                              INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
-extern HBRUSH X11DRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern HPEN X11DRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
-extern COLORREF X11DRV_SetDCBrushColor( PHYSDEV dev, COLORREF crColor ) DECLSPEC_HIDDEN;
-extern COLORREF X11DRV_SetDCPenColor( PHYSDEV dev, COLORREF crColor ) DECLSPEC_HIDDEN;
-extern void X11DRV_SetDeviceClipping( PHYSDEV dev, HRGN rgn ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_SetDeviceGammaRamp( PHYSDEV dev, LPVOID ramp ) DECLSPEC_HIDDEN;
-extern COLORREF X11DRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                               PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
-extern BOOL X11DRV_UnrealizePalette( HPALETTE hpal ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_Arc( PHYSDEV dev, INT left, INT top, INT right,
+                              INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_Chord( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_Ellipse( PHYSDEV dev, INT left, INT top, INT right, INT bottom ) DECLSPEC_HIDDEN;
+extern INT CDECL X11DRV_EnumICMProfiles( PHYSDEV dev, ICMENUMPROCW proc, LPARAM lparam ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_ExtFloodFill( PHYSDEV dev, INT x, INT y, COLORREF color, UINT fillType ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_FillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_GetDeviceGammaRamp( PHYSDEV dev, LPVOID ramp ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_GetICMProfile( PHYSDEV dev, LPDWORD size, LPWSTR filename ) DECLSPEC_HIDDEN;
+extern DWORD CDECL X11DRV_GetImage( PHYSDEV dev, BITMAPINFO *info,
+                                    struct gdi_image_bits *bits, struct bitblt_coords *src ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL X11DRV_GetNearestColor( PHYSDEV dev, COLORREF color ) DECLSPEC_HIDDEN;
+extern UINT CDECL X11DRV_GetSystemPaletteEntries( PHYSDEV dev, UINT start, UINT count, LPPALETTEENTRY entries ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                       void *grad_array, ULONG ngrad, ULONG mode ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_LineTo( PHYSDEV dev, INT x, INT y) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_PaintRgn( PHYSDEV dev, HRGN hrgn ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_PatBlt( PHYSDEV dev, struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_Pie( PHYSDEV dev, INT left, INT top, INT right,
+                              INT bottom, INT xstart, INT ystart, INT xend, INT yend ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_Polygon( PHYSDEV dev, const POINT* pt, INT count ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_PolyPolygon( PHYSDEV dev, const POINT* pt, const INT* counts, UINT polygons) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_PolyPolyline( PHYSDEV dev, const POINT* pt, const DWORD* counts, DWORD polylines) DECLSPEC_HIDDEN;
+extern DWORD CDECL X11DRV_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                                    const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                                    struct bitblt_coords *dst, DWORD rop ) DECLSPEC_HIDDEN;
+extern UINT CDECL X11DRV_RealizeDefaultPalette( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern UINT CDECL X11DRV_RealizePalette( PHYSDEV dev, HPALETTE hpal, BOOL primary ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_Rectangle(PHYSDEV dev, INT left, INT top, INT right, INT bottom) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_RoundRect( PHYSDEV dev, INT left, INT top, INT right, INT bottom,
+                                    INT ell_width, INT ell_height ) DECLSPEC_HIDDEN;
+extern HBRUSH CDECL X11DRV_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern HPEN CDECL X11DRV_SelectPen( PHYSDEV dev, HPEN hpen, const struct brush_pattern *pattern ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL X11DRV_SetDCBrushColor( PHYSDEV dev, COLORREF crColor ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL X11DRV_SetDCPenColor( PHYSDEV dev, COLORREF crColor ) DECLSPEC_HIDDEN;
+extern void CDECL X11DRV_SetDeviceClipping( PHYSDEV dev, HRGN rgn ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_SetDeviceGammaRamp( PHYSDEV dev, LPVOID ramp ) DECLSPEC_HIDDEN;
+extern COLORREF CDECL X11DRV_SetPixel( PHYSDEV dev, INT x, INT y, COLORREF color ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                     PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_StrokeAndFillPath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_StrokePath( PHYSDEV dev ) DECLSPEC_HIDDEN;
+extern BOOL CDECL X11DRV_UnrealizePalette( HPALETTE hpal ) DECLSPEC_HIDDEN;
 
 /* X11 driver internal functions */
 
diff --git a/dlls/winex11.drv/xrender.c b/dlls/winex11.drv/xrender.c
index 61729ecf29..311ecb58b7 100644
--- a/dlls/winex11.drv/xrender.c
+++ b/dlls/winex11.drv/xrender.c
@@ -824,7 +824,7 @@ static UINT get_xft_aa_flags( const LOGFONTW *lf )
 /**********************************************************************
  *	     xrenderdrv_SelectFont
  */
-static HFONT xrenderdrv_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
+static HFONT CDECL xrenderdrv_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
 {
     LFANDSIZE lfsz;
     struct xrender_physdev *physdev = get_xrender_dev( dev );
@@ -938,8 +938,8 @@ static void set_color_info( XRenderPictFormat *format, BITMAPINFO *info )
 /**********************************************************************
  *	     xrenderdrv_CreateDC
  */
-static BOOL xrenderdrv_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
-                                 LPCWSTR output, const DEVMODEW* initData )
+static BOOL CDECL xrenderdrv_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
+                                       LPCWSTR output, const DEVMODEW* initData )
 {
     return create_xrender_dc( pdev, default_format );
 }
@@ -947,7 +947,7 @@ static BOOL xrenderdrv_CreateDC( PHYSDEV *pdev, LPCWSTR driver, LPCWSTR device,
 /**********************************************************************
  *	     xrenderdrv_CreateCompatibleDC
  */
-static BOOL xrenderdrv_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
+static BOOL CDECL xrenderdrv_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 {
     if (orig)  /* chain to x11drv first */
     {
@@ -962,7 +962,7 @@ static BOOL xrenderdrv_CreateCompatibleDC( PHYSDEV orig, PHYSDEV *pdev )
 /**********************************************************************
  *	     xrenderdrv_DeleteDC
  */
-static BOOL xrenderdrv_DeleteDC( PHYSDEV dev )
+static BOOL CDECL xrenderdrv_DeleteDC( PHYSDEV dev )
 {
     struct xrender_physdev *physdev = get_xrender_dev( dev );
 
@@ -979,8 +979,8 @@ static BOOL xrenderdrv_DeleteDC( PHYSDEV dev )
 /**********************************************************************
  *           xrenderdrv_ExtEscape
  */
-static INT xrenderdrv_ExtEscape( PHYSDEV dev, INT escape, INT in_count, LPCVOID in_data,
-                                 INT out_count, LPVOID out_data )
+static INT CDECL xrenderdrv_ExtEscape( PHYSDEV dev, INT escape, INT in_count, LPCVOID in_data,
+                                       INT out_count, LPVOID out_data )
 {
     struct xrender_physdev *physdev = get_xrender_dev( dev );
 
@@ -1005,7 +1005,7 @@ static INT xrenderdrv_ExtEscape( PHYSDEV dev, INT escape, INT in_count, LPCVOID
 /***********************************************************************
  *           xrenderdrv_SetDeviceClipping
  */
-static void xrenderdrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
+static void CDECL xrenderdrv_SetDeviceClipping( PHYSDEV dev, HRGN rgn )
 {
     struct xrender_physdev *physdev = get_xrender_dev( dev );
 
@@ -1302,8 +1302,8 @@ static Picture get_mask_pict( int alpha )
 /***********************************************************************
  *           xrenderdrv_ExtTextOut
  */
-static BOOL xrenderdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
-                                   const RECT *lprect, LPCWSTR wstr, UINT count, const INT *lpDx )
+static BOOL CDECL xrenderdrv_ExtTextOut( PHYSDEV dev, INT x, INT y, UINT flags,
+                                         const RECT *lprect, LPCWSTR wstr, UINT count, const INT *lpDx )
 {
     struct xrender_physdev *physdev = get_xrender_dev( dev );
     gsCacheEntry *entry;
@@ -1722,8 +1722,8 @@ static void xrender_put_image( Pixmap src_pixmap, Picture src_pict, Picture mask
 /***********************************************************************
  *           xrenderdrv_StretchBlt
  */
-static BOOL xrenderdrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                                   PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
+static BOOL CDECL xrenderdrv_StretchBlt( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                         PHYSDEV src_dev, struct bitblt_coords *src, DWORD rop )
 {
     struct xrender_physdev *physdev_dst = get_xrender_dev( dst_dev );
     struct xrender_physdev *physdev_src = get_xrender_dev( src_dev );
@@ -1779,9 +1779,9 @@ x11drv_fallback:
 /***********************************************************************
  *           xrenderdrv_PutImage
  */
-static DWORD xrenderdrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
-                                  const struct gdi_image_bits *bits, struct bitblt_coords *src,
-                                  struct bitblt_coords *dst, DWORD rop )
+static DWORD CDECL xrenderdrv_PutImage( PHYSDEV dev, HRGN clip, BITMAPINFO *info,
+                                        const struct gdi_image_bits *bits, struct bitblt_coords *src,
+                                        struct bitblt_coords *dst, DWORD rop )
 {
     struct xrender_physdev *physdev = get_xrender_dev( dev );
     DWORD ret;
@@ -1864,9 +1864,9 @@ x11drv_fallback:
 /***********************************************************************
  *           xrenderdrv_BlendImage
  */
-static DWORD xrenderdrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
-                                    struct bitblt_coords *src, struct bitblt_coords *dst,
-                                    BLENDFUNCTION func )
+static DWORD CDECL xrenderdrv_BlendImage( PHYSDEV dev, BITMAPINFO *info, const struct gdi_image_bits *bits,
+                                          struct bitblt_coords *src, struct bitblt_coords *dst,
+                                          BLENDFUNCTION func )
 {
     struct xrender_physdev *physdev = get_xrender_dev( dev );
     DWORD ret;
@@ -1934,8 +1934,8 @@ update_format:
 /***********************************************************************
  *           xrenderdrv_AlphaBlend
  */
-static BOOL xrenderdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
-                                   PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION blendfn )
+static BOOL CDECL xrenderdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
+                                         PHYSDEV src_dev, struct bitblt_coords *src, BLENDFUNCTION blendfn )
 {
     struct xrender_physdev *physdev_dst = get_xrender_dev( dst_dev );
     struct xrender_physdev *physdev_src = get_xrender_dev( src_dev );
@@ -2018,8 +2018,8 @@ static BOOL xrenderdrv_AlphaBlend( PHYSDEV dst_dev, struct bitblt_coords *dst,
 /***********************************************************************
  *           xrenderdrv_GradientFill
  */
-static BOOL xrenderdrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
-                                     void * grad_array, ULONG ngrad, ULONG mode )
+static BOOL CDECL xrenderdrv_GradientFill( PHYSDEV dev, TRIVERTEX *vert_array, ULONG nvert,
+                                           void * grad_array, ULONG ngrad, ULONG mode )
 {
 #ifdef HAVE_XRENDERCREATELINEARGRADIENT
     static const XFixed stops[2] = { 0, 1 << 16 };
@@ -2122,7 +2122,7 @@ fallback:
 /***********************************************************************
  *           xrenderdrv_SelectBrush
  */
-static HBRUSH xrenderdrv_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
+static HBRUSH CDECL xrenderdrv_SelectBrush( PHYSDEV dev, HBRUSH hbrush, const struct brush_pattern *pattern )
 {
     struct xrender_physdev *physdev = get_xrender_dev( dev );
     Pixmap pixmap;
diff --git a/dlls/winex11.drv/xvidmode.c b/dlls/winex11.drv/xvidmode.c
index ba9cdf7664..9c0c97f1eb 100644
--- a/dlls/winex11.drv/xvidmode.c
+++ b/dlls/winex11.drv/xvidmode.c
@@ -480,7 +480,7 @@ void X11DRV_XF86VM_Init(void)
  * the stuff in graphics/x11drv/ has been moved to dlls/x11drv, so that
  * they can include xvidmode.h directly
  */
-BOOL X11DRV_GetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
+BOOL CDECL X11DRV_GetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
 {
 #ifdef SONAME_LIBXXF86VM
   return X11DRV_XF86VM_GetGammaRamp(ramp);
@@ -496,7 +496,7 @@ BOOL X11DRV_GetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
  * the stuff in graphics/x11drv/ has been moved to dlls/x11drv, so that
  * they can include xvidmode.h directly
  */
-BOOL X11DRV_SetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
+BOOL CDECL X11DRV_SetDeviceGammaRamp(PHYSDEV dev, LPVOID ramp)
 {
 #ifdef SONAME_LIBXXF86VM
   return X11DRV_XF86VM_SetGammaRamp(ramp);
diff --git a/include/wine/gdi_driver.h b/include/wine/gdi_driver.h
index d3e5bcefb4..53881b5932 100644
--- a/include/wine/gdi_driver.h
+++ b/include/wine/gdi_driver.h
@@ -65,142 +65,142 @@ struct brush_pattern
 
 struct gdi_dc_funcs
 {
-    INT      (*pAbortDoc)(PHYSDEV);
-    BOOL     (*pAbortPath)(PHYSDEV);
-    BOOL     (*pAlphaBlend)(PHYSDEV,struct bitblt_coords*,PHYSDEV,struct bitblt_coords*,BLENDFUNCTION);
-    BOOL     (*pAngleArc)(PHYSDEV,INT,INT,DWORD,FLOAT,FLOAT);
-    BOOL     (*pArc)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
-    BOOL     (*pArcTo)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
-    BOOL     (*pBeginPath)(PHYSDEV);
-    DWORD    (*pBlendImage)(PHYSDEV,BITMAPINFO*,const struct gdi_image_bits*,struct bitblt_coords*,struct bitblt_coords*,BLENDFUNCTION);
-    BOOL     (*pChord)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
-    BOOL     (*pCloseFigure)(PHYSDEV);
-    BOOL     (*pCreateCompatibleDC)(PHYSDEV,PHYSDEV*);
-    BOOL     (*pCreateDC)(PHYSDEV*,LPCWSTR,LPCWSTR,LPCWSTR,const DEVMODEW*);
-    BOOL     (*pDeleteDC)(PHYSDEV);
-    BOOL     (*pDeleteObject)(PHYSDEV,HGDIOBJ);
-    DWORD    (*pDeviceCapabilities)(LPSTR,LPCSTR,LPCSTR,WORD,LPSTR,LPDEVMODEA);
-    BOOL     (*pEllipse)(PHYSDEV,INT,INT,INT,INT);
-    INT      (*pEndDoc)(PHYSDEV);
-    INT      (*pEndPage)(PHYSDEV);
-    BOOL     (*pEndPath)(PHYSDEV);
-    BOOL     (*pEnumFonts)(PHYSDEV,LPLOGFONTW,FONTENUMPROCW,LPARAM);
-    INT      (*pEnumICMProfiles)(PHYSDEV,ICMENUMPROCW,LPARAM);
-    INT      (*pExcludeClipRect)(PHYSDEV,INT,INT,INT,INT);
-    INT      (*pExtDeviceMode)(LPSTR,HWND,LPDEVMODEA,LPSTR,LPSTR,LPDEVMODEA,LPSTR,DWORD);
-    INT      (*pExtEscape)(PHYSDEV,INT,INT,LPCVOID,INT,LPVOID);
-    BOOL     (*pExtFloodFill)(PHYSDEV,INT,INT,COLORREF,UINT);
-    INT      (*pExtSelectClipRgn)(PHYSDEV,HRGN,INT);
-    BOOL     (*pExtTextOut)(PHYSDEV,INT,INT,UINT,const RECT*,LPCWSTR,UINT,const INT*);
-    BOOL     (*pFillPath)(PHYSDEV);
-    BOOL     (*pFillRgn)(PHYSDEV,HRGN,HBRUSH);
-    BOOL     (*pFlattenPath)(PHYSDEV);
-    BOOL     (*pFontIsLinked)(PHYSDEV);
-    BOOL     (*pFrameRgn)(PHYSDEV,HRGN,HBRUSH,INT,INT);
-    BOOL     (*pGdiComment)(PHYSDEV,UINT,const BYTE*);
-    UINT     (*pGetBoundsRect)(PHYSDEV,RECT*,UINT);
-    BOOL     (*pGetCharABCWidths)(PHYSDEV,UINT,UINT,LPABC);
-    BOOL     (*pGetCharABCWidthsI)(PHYSDEV,UINT,UINT,WORD*,LPABC);
-    BOOL     (*pGetCharWidth)(PHYSDEV,UINT,UINT,LPINT);
-    BOOL     (*pGetCharWidthInfo)(PHYSDEV,void*);
-    INT      (*pGetDeviceCaps)(PHYSDEV,INT);
-    BOOL     (*pGetDeviceGammaRamp)(PHYSDEV,LPVOID);
-    DWORD    (*pGetFontData)(PHYSDEV,DWORD,DWORD,LPVOID,DWORD);
-    BOOL     (*pGetFontRealizationInfo)(PHYSDEV,void*);
-    DWORD    (*pGetFontUnicodeRanges)(PHYSDEV,LPGLYPHSET);
-    DWORD    (*pGetGlyphIndices)(PHYSDEV,LPCWSTR,INT,LPWORD,DWORD);
-    DWORD    (*pGetGlyphOutline)(PHYSDEV,UINT,UINT,LPGLYPHMETRICS,DWORD,LPVOID,const MAT2*);
-    BOOL     (*pGetICMProfile)(PHYSDEV,LPDWORD,LPWSTR);
-    DWORD    (*pGetImage)(PHYSDEV,BITMAPINFO*,struct gdi_image_bits*,struct bitblt_coords*);
-    DWORD    (*pGetKerningPairs)(PHYSDEV,DWORD,LPKERNINGPAIR);
-    COLORREF (*pGetNearestColor)(PHYSDEV,COLORREF);
-    UINT     (*pGetOutlineTextMetrics)(PHYSDEV,UINT,LPOUTLINETEXTMETRICW);
-    COLORREF (*pGetPixel)(PHYSDEV,INT,INT);
-    UINT     (*pGetSystemPaletteEntries)(PHYSDEV,UINT,UINT,LPPALETTEENTRY);
-    UINT     (*pGetTextCharsetInfo)(PHYSDEV,LPFONTSIGNATURE,DWORD);
-    BOOL     (*pGetTextExtentExPoint)(PHYSDEV,LPCWSTR,INT,LPINT);
-    BOOL     (*pGetTextExtentExPointI)(PHYSDEV,const WORD*,INT,LPINT);
-    INT      (*pGetTextFace)(PHYSDEV,INT,LPWSTR);
-    BOOL     (*pGetTextMetrics)(PHYSDEV,TEXTMETRICW*);
-    BOOL     (*pGradientFill)(PHYSDEV,TRIVERTEX*,ULONG,void*,ULONG,ULONG);
-    INT      (*pIntersectClipRect)(PHYSDEV,INT,INT,INT,INT);
-    BOOL     (*pInvertRgn)(PHYSDEV,HRGN);
-    BOOL     (*pLineTo)(PHYSDEV,INT,INT);
-    BOOL     (*pModifyWorldTransform)(PHYSDEV,const XFORM*,DWORD);
-    BOOL     (*pMoveTo)(PHYSDEV,INT,INT);
-    INT      (*pOffsetClipRgn)(PHYSDEV,INT,INT);
-    BOOL     (*pOffsetViewportOrgEx)(PHYSDEV,INT,INT,POINT*);
-    BOOL     (*pOffsetWindowOrgEx)(PHYSDEV,INT,INT,POINT*);
-    BOOL     (*pPaintRgn)(PHYSDEV,HRGN);
-    BOOL     (*pPatBlt)(PHYSDEV,struct bitblt_coords*,DWORD);
-    BOOL     (*pPie)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
-    BOOL     (*pPolyBezier)(PHYSDEV,const POINT*,DWORD);
-    BOOL     (*pPolyBezierTo)(PHYSDEV,const POINT*,DWORD);
-    BOOL     (*pPolyDraw)(PHYSDEV,const POINT*,const BYTE *,DWORD);
-    BOOL     (*pPolyPolygon)(PHYSDEV,const POINT*,const INT*,UINT);
-    BOOL     (*pPolyPolyline)(PHYSDEV,const POINT*,const DWORD*,DWORD);
-    BOOL     (*pPolygon)(PHYSDEV,const POINT*,INT);
-    BOOL     (*pPolyline)(PHYSDEV,const POINT*,INT);
-    BOOL     (*pPolylineTo)(PHYSDEV,const POINT*,INT);
-    DWORD    (*pPutImage)(PHYSDEV,HRGN,BITMAPINFO*,const struct gdi_image_bits*,struct bitblt_coords*,struct bitblt_coords*,DWORD);
-    UINT     (*pRealizeDefaultPalette)(PHYSDEV);
-    UINT     (*pRealizePalette)(PHYSDEV,HPALETTE,BOOL);
-    BOOL     (*pRectangle)(PHYSDEV,INT,INT,INT,INT);
-    HDC      (*pResetDC)(PHYSDEV,const DEVMODEW*);
-    BOOL     (*pRestoreDC)(PHYSDEV,INT);
-    BOOL     (*pRoundRect)(PHYSDEV,INT,INT,INT,INT,INT,INT);
-    INT      (*pSaveDC)(PHYSDEV);
-    BOOL     (*pScaleViewportExtEx)(PHYSDEV,INT,INT,INT,INT,SIZE*);
-    BOOL     (*pScaleWindowExtEx)(PHYSDEV,INT,INT,INT,INT,SIZE*);
-    HBITMAP  (*pSelectBitmap)(PHYSDEV,HBITMAP);
-    HBRUSH   (*pSelectBrush)(PHYSDEV,HBRUSH,const struct brush_pattern*);
-    BOOL     (*pSelectClipPath)(PHYSDEV,INT);
-    HFONT    (*pSelectFont)(PHYSDEV,HFONT,UINT*);
-    HPALETTE (*pSelectPalette)(PHYSDEV,HPALETTE,BOOL);
-    HPEN     (*pSelectPen)(PHYSDEV,HPEN,const struct brush_pattern*);
-    INT      (*pSetArcDirection)(PHYSDEV,INT);
-    COLORREF (*pSetBkColor)(PHYSDEV,COLORREF);
-    INT      (*pSetBkMode)(PHYSDEV,INT);
-    UINT     (*pSetBoundsRect)(PHYSDEV,RECT*,UINT);
-    COLORREF (*pSetDCBrushColor)(PHYSDEV, COLORREF);
-    COLORREF (*pSetDCPenColor)(PHYSDEV, COLORREF);
-    INT      (*pSetDIBitsToDevice)(PHYSDEV,INT,INT,DWORD,DWORD,INT,INT,UINT,UINT,LPCVOID,BITMAPINFO*,UINT);
-    VOID     (*pSetDeviceClipping)(PHYSDEV,HRGN);
-    BOOL     (*pSetDeviceGammaRamp)(PHYSDEV,LPVOID);
-    DWORD    (*pSetLayout)(PHYSDEV,DWORD);
-    INT      (*pSetMapMode)(PHYSDEV,INT);
-    DWORD    (*pSetMapperFlags)(PHYSDEV,DWORD);
-    COLORREF (*pSetPixel)(PHYSDEV,INT,INT,COLORREF);
-    INT      (*pSetPolyFillMode)(PHYSDEV,INT);
-    INT      (*pSetROP2)(PHYSDEV,INT);
-    INT      (*pSetRelAbs)(PHYSDEV,INT);
-    INT      (*pSetStretchBltMode)(PHYSDEV,INT);
-    UINT     (*pSetTextAlign)(PHYSDEV,UINT);
-    INT      (*pSetTextCharacterExtra)(PHYSDEV,INT);
-    COLORREF (*pSetTextColor)(PHYSDEV,COLORREF);
-    BOOL     (*pSetTextJustification)(PHYSDEV,INT,INT);
-    BOOL     (*pSetViewportExtEx)(PHYSDEV,INT,INT,SIZE*);
-    BOOL     (*pSetViewportOrgEx)(PHYSDEV,INT,INT,POINT*);
-    BOOL     (*pSetWindowExtEx)(PHYSDEV,INT,INT,SIZE*);
-    BOOL     (*pSetWindowOrgEx)(PHYSDEV,INT,INT,POINT*);
-    BOOL     (*pSetWorldTransform)(PHYSDEV,const XFORM*);
-    INT      (*pStartDoc)(PHYSDEV,const DOCINFOW*);
-    INT      (*pStartPage)(PHYSDEV);
-    BOOL     (*pStretchBlt)(PHYSDEV,struct bitblt_coords*,PHYSDEV,struct bitblt_coords*,DWORD);
-    INT      (*pStretchDIBits)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT,const void*,BITMAPINFO*,UINT,DWORD);
-    BOOL     (*pStrokeAndFillPath)(PHYSDEV);
-    BOOL     (*pStrokePath)(PHYSDEV);
-    BOOL     (*pUnrealizePalette)(HPALETTE);
-    BOOL     (*pWidenPath)(PHYSDEV);
-    struct opengl_funcs * (*wine_get_wgl_driver)(PHYSDEV,UINT);
-    const struct vulkan_funcs * (*wine_get_vulkan_driver)(PHYSDEV,UINT);
+    INT      (CDECL *pAbortDoc)(PHYSDEV);
+    BOOL     (CDECL *pAbortPath)(PHYSDEV);
+    BOOL     (CDECL *pAlphaBlend)(PHYSDEV,struct bitblt_coords*,PHYSDEV,struct bitblt_coords*,BLENDFUNCTION);
+    BOOL     (CDECL *pAngleArc)(PHYSDEV,INT,INT,DWORD,FLOAT,FLOAT);
+    BOOL     (CDECL *pArc)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
+    BOOL     (CDECL *pArcTo)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
+    BOOL     (CDECL *pBeginPath)(PHYSDEV);
+    DWORD    (CDECL *pBlendImage)(PHYSDEV,BITMAPINFO*,const struct gdi_image_bits*,struct bitblt_coords*,struct bitblt_coords*,BLENDFUNCTION);
+    BOOL     (CDECL *pChord)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
+    BOOL     (CDECL *pCloseFigure)(PHYSDEV);
+    BOOL     (CDECL *pCreateCompatibleDC)(PHYSDEV,PHYSDEV*);
+    BOOL     (CDECL *pCreateDC)(PHYSDEV*,LPCWSTR,LPCWSTR,LPCWSTR,const DEVMODEW*);
+    BOOL     (CDECL *pDeleteDC)(PHYSDEV);
+    BOOL     (CDECL *pDeleteObject)(PHYSDEV,HGDIOBJ);
+    DWORD    (CDECL *pDeviceCapabilities)(LPSTR,LPCSTR,LPCSTR,WORD,LPSTR,LPDEVMODEA);
+    BOOL     (CDECL *pEllipse)(PHYSDEV,INT,INT,INT,INT);
+    INT      (CDECL *pEndDoc)(PHYSDEV);
+    INT      (CDECL *pEndPage)(PHYSDEV);
+    BOOL     (CDECL *pEndPath)(PHYSDEV);
+    BOOL     (CDECL *pEnumFonts)(PHYSDEV,LPLOGFONTW,FONTENUMPROCW,LPARAM);
+    INT      (CDECL *pEnumICMProfiles)(PHYSDEV,ICMENUMPROCW,LPARAM);
+    INT      (CDECL *pExcludeClipRect)(PHYSDEV,INT,INT,INT,INT);
+    INT      (CDECL *pExtDeviceMode)(LPSTR,HWND,LPDEVMODEA,LPSTR,LPSTR,LPDEVMODEA,LPSTR,DWORD);
+    INT      (CDECL *pExtEscape)(PHYSDEV,INT,INT,LPCVOID,INT,LPVOID);
+    BOOL     (CDECL *pExtFloodFill)(PHYSDEV,INT,INT,COLORREF,UINT);
+    INT      (CDECL *pExtSelectClipRgn)(PHYSDEV,HRGN,INT);
+    BOOL     (CDECL *pExtTextOut)(PHYSDEV,INT,INT,UINT,const RECT*,LPCWSTR,UINT,const INT*);
+    BOOL     (CDECL *pFillPath)(PHYSDEV);
+    BOOL     (CDECL *pFillRgn)(PHYSDEV,HRGN,HBRUSH);
+    BOOL     (CDECL *pFlattenPath)(PHYSDEV);
+    BOOL     (CDECL *pFontIsLinked)(PHYSDEV);
+    BOOL     (CDECL *pFrameRgn)(PHYSDEV,HRGN,HBRUSH,INT,INT);
+    BOOL     (CDECL *pGdiComment)(PHYSDEV,UINT,const BYTE*);
+    UINT     (CDECL *pGetBoundsRect)(PHYSDEV,RECT*,UINT);
+    BOOL     (CDECL *pGetCharABCWidths)(PHYSDEV,UINT,UINT,LPABC);
+    BOOL     (CDECL *pGetCharABCWidthsI)(PHYSDEV,UINT,UINT,WORD*,LPABC);
+    BOOL     (CDECL *pGetCharWidth)(PHYSDEV,UINT,UINT,LPINT);
+    BOOL     (CDECL *pGetCharWidthInfo)(PHYSDEV,void*);
+    INT      (CDECL *pGetDeviceCaps)(PHYSDEV,INT);
+    BOOL     (CDECL *pGetDeviceGammaRamp)(PHYSDEV,LPVOID);
+    DWORD    (CDECL *pGetFontData)(PHYSDEV,DWORD,DWORD,LPVOID,DWORD);
+    BOOL     (CDECL *pGetFontRealizationInfo)(PHYSDEV,void*);
+    DWORD    (CDECL *pGetFontUnicodeRanges)(PHYSDEV,LPGLYPHSET);
+    DWORD    (CDECL *pGetGlyphIndices)(PHYSDEV,LPCWSTR,INT,LPWORD,DWORD);
+    DWORD    (CDECL *pGetGlyphOutline)(PHYSDEV,UINT,UINT,LPGLYPHMETRICS,DWORD,LPVOID,const MAT2*);
+    BOOL     (CDECL *pGetICMProfile)(PHYSDEV,LPDWORD,LPWSTR);
+    DWORD    (CDECL *pGetImage)(PHYSDEV,BITMAPINFO*,struct gdi_image_bits*,struct bitblt_coords*);
+    DWORD    (CDECL *pGetKerningPairs)(PHYSDEV,DWORD,LPKERNINGPAIR);
+    COLORREF (CDECL *pGetNearestColor)(PHYSDEV,COLORREF);
+    UINT     (CDECL *pGetOutlineTextMetrics)(PHYSDEV,UINT,LPOUTLINETEXTMETRICW);
+    COLORREF (CDECL *pGetPixel)(PHYSDEV,INT,INT);
+    UINT     (CDECL *pGetSystemPaletteEntries)(PHYSDEV,UINT,UINT,LPPALETTEENTRY);
+    UINT     (CDECL *pGetTextCharsetInfo)(PHYSDEV,LPFONTSIGNATURE,DWORD);
+    BOOL     (CDECL *pGetTextExtentExPoint)(PHYSDEV,LPCWSTR,INT,LPINT);
+    BOOL     (CDECL *pGetTextExtentExPointI)(PHYSDEV,const WORD*,INT,LPINT);
+    INT      (CDECL *pGetTextFace)(PHYSDEV,INT,LPWSTR);
+    BOOL     (CDECL *pGetTextMetrics)(PHYSDEV,TEXTMETRICW*);
+    BOOL     (CDECL *pGradientFill)(PHYSDEV,TRIVERTEX*,ULONG,void*,ULONG,ULONG);
+    INT      (CDECL *pIntersectClipRect)(PHYSDEV,INT,INT,INT,INT);
+    BOOL     (CDECL *pInvertRgn)(PHYSDEV,HRGN);
+    BOOL     (CDECL *pLineTo)(PHYSDEV,INT,INT);
+    BOOL     (CDECL *pModifyWorldTransform)(PHYSDEV,const XFORM*,DWORD);
+    BOOL     (CDECL *pMoveTo)(PHYSDEV,INT,INT);
+    INT      (CDECL *pOffsetClipRgn)(PHYSDEV,INT,INT);
+    BOOL     (CDECL *pOffsetViewportOrgEx)(PHYSDEV,INT,INT,POINT*);
+    BOOL     (CDECL *pOffsetWindowOrgEx)(PHYSDEV,INT,INT,POINT*);
+    BOOL     (CDECL *pPaintRgn)(PHYSDEV,HRGN);
+    BOOL     (CDECL *pPatBlt)(PHYSDEV,struct bitblt_coords*,DWORD);
+    BOOL     (CDECL *pPie)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT);
+    BOOL     (CDECL *pPolyBezier)(PHYSDEV,const POINT*,DWORD);
+    BOOL     (CDECL *pPolyBezierTo)(PHYSDEV,const POINT*,DWORD);
+    BOOL     (CDECL *pPolyDraw)(PHYSDEV,const POINT*,const BYTE *,DWORD);
+    BOOL     (CDECL *pPolyPolygon)(PHYSDEV,const POINT*,const INT*,UINT);
+    BOOL     (CDECL *pPolyPolyline)(PHYSDEV,const POINT*,const DWORD*,DWORD);
+    BOOL     (CDECL *pPolygon)(PHYSDEV,const POINT*,INT);
+    BOOL     (CDECL *pPolyline)(PHYSDEV,const POINT*,INT);
+    BOOL     (CDECL *pPolylineTo)(PHYSDEV,const POINT*,INT);
+    DWORD    (CDECL *pPutImage)(PHYSDEV,HRGN,BITMAPINFO*,const struct gdi_image_bits*,struct bitblt_coords*,struct bitblt_coords*,DWORD);
+    UINT     (CDECL *pRealizeDefaultPalette)(PHYSDEV);
+    UINT     (CDECL *pRealizePalette)(PHYSDEV,HPALETTE,BOOL);
+    BOOL     (CDECL *pRectangle)(PHYSDEV,INT,INT,INT,INT);
+    HDC      (CDECL *pResetDC)(PHYSDEV,const DEVMODEW*);
+    BOOL     (CDECL *pRestoreDC)(PHYSDEV,INT);
+    BOOL     (CDECL *pRoundRect)(PHYSDEV,INT,INT,INT,INT,INT,INT);
+    INT      (CDECL *pSaveDC)(PHYSDEV);
+    BOOL     (CDECL *pScaleViewportExtEx)(PHYSDEV,INT,INT,INT,INT,SIZE*);
+    BOOL     (CDECL *pScaleWindowExtEx)(PHYSDEV,INT,INT,INT,INT,SIZE*);
+    HBITMAP  (CDECL *pSelectBitmap)(PHYSDEV,HBITMAP);
+    HBRUSH   (CDECL *pSelectBrush)(PHYSDEV,HBRUSH,const struct brush_pattern*);
+    BOOL     (CDECL *pSelectClipPath)(PHYSDEV,INT);
+    HFONT    (CDECL *pSelectFont)(PHYSDEV,HFONT,UINT*);
+    HPALETTE (CDECL *pSelectPalette)(PHYSDEV,HPALETTE,BOOL);
+    HPEN     (CDECL *pSelectPen)(PHYSDEV,HPEN,const struct brush_pattern*);
+    INT      (CDECL *pSetArcDirection)(PHYSDEV,INT);
+    COLORREF (CDECL *pSetBkColor)(PHYSDEV,COLORREF);
+    INT      (CDECL *pSetBkMode)(PHYSDEV,INT);
+    UINT     (CDECL *pSetBoundsRect)(PHYSDEV,RECT*,UINT);
+    COLORREF (CDECL *pSetDCBrushColor)(PHYSDEV, COLORREF);
+    COLORREF (CDECL *pSetDCPenColor)(PHYSDEV, COLORREF);
+    INT      (CDECL *pSetDIBitsToDevice)(PHYSDEV,INT,INT,DWORD,DWORD,INT,INT,UINT,UINT,LPCVOID,BITMAPINFO*,UINT);
+    VOID     (CDECL *pSetDeviceClipping)(PHYSDEV,HRGN);
+    BOOL     (CDECL *pSetDeviceGammaRamp)(PHYSDEV,LPVOID);
+    DWORD    (CDECL *pSetLayout)(PHYSDEV,DWORD);
+    INT      (CDECL *pSetMapMode)(PHYSDEV,INT);
+    DWORD    (CDECL *pSetMapperFlags)(PHYSDEV,DWORD);
+    COLORREF (CDECL *pSetPixel)(PHYSDEV,INT,INT,COLORREF);
+    INT      (CDECL *pSetPolyFillMode)(PHYSDEV,INT);
+    INT      (CDECL *pSetROP2)(PHYSDEV,INT);
+    INT      (CDECL *pSetRelAbs)(PHYSDEV,INT);
+    INT      (CDECL *pSetStretchBltMode)(PHYSDEV,INT);
+    UINT     (CDECL *pSetTextAlign)(PHYSDEV,UINT);
+    INT      (CDECL *pSetTextCharacterExtra)(PHYSDEV,INT);
+    COLORREF (CDECL *pSetTextColor)(PHYSDEV,COLORREF);
+    BOOL     (CDECL *pSetTextJustification)(PHYSDEV,INT,INT);
+    BOOL     (CDECL *pSetViewportExtEx)(PHYSDEV,INT,INT,SIZE*);
+    BOOL     (CDECL *pSetViewportOrgEx)(PHYSDEV,INT,INT,POINT*);
+    BOOL     (CDECL *pSetWindowExtEx)(PHYSDEV,INT,INT,SIZE*);
+    BOOL     (CDECL *pSetWindowOrgEx)(PHYSDEV,INT,INT,POINT*);
+    BOOL     (CDECL *pSetWorldTransform)(PHYSDEV,const XFORM*);
+    INT      (CDECL *pStartDoc)(PHYSDEV,const DOCINFOW*);
+    INT      (CDECL *pStartPage)(PHYSDEV);
+    BOOL     (CDECL *pStretchBlt)(PHYSDEV,struct bitblt_coords*,PHYSDEV,struct bitblt_coords*,DWORD);
+    INT      (CDECL *pStretchDIBits)(PHYSDEV,INT,INT,INT,INT,INT,INT,INT,INT,const void*,BITMAPINFO*,UINT,DWORD);
+    BOOL     (CDECL *pStrokeAndFillPath)(PHYSDEV);
+    BOOL     (CDECL *pStrokePath)(PHYSDEV);
+    BOOL     (CDECL *pUnrealizePalette)(HPALETTE);
+    BOOL     (CDECL *pWidenPath)(PHYSDEV);
+    struct opengl_funcs * (CDECL *wine_get_wgl_driver)(PHYSDEV,UINT);
+    const struct vulkan_funcs * (CDECL *wine_get_vulkan_driver)(PHYSDEV,UINT);
 
     /* priority order for the driver on the stack */
     UINT       priority;
 };
 
 /* increment this when you change the DC function table */
-#define WINE_GDI_DRIVER_VERSION 49
+#define WINE_GDI_DRIVER_VERSION 50
 
 #define GDI_PRIORITY_NULL_DRV        0  /* null driver */
 #define GDI_PRIORITY_FONT_DRV      100  /* any font driver */
-- 
2.22.0

