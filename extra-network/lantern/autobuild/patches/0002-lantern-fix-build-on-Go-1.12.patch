From fd5b17bab46823ceff1cca0dea2205b40a519aed Mon Sep 17 00:00:00 2001
From: Junde Yhi <lmy441900@aosc.xyz>
Date: Sat, 20 Jul 2019 18:21:51 +0800
Subject: [PATCH 2/2] lantern: fix build on Go 1.12

- flashlight: fix old http library uses
- flashlight: fix casting to flag.Getter on incompatible type
- systray: fix return

Signed-off-by: Junde Yhi <lmy441900@aosc.xyz>
---
 .../github.com/getlantern/flashlight/client/reverseproxy.go   | 3 +--
 archive/src/github.com/getlantern/flashlight/main/flags.go    | 4 ++++
 .../src/github.com/getlantern/flashlight/proxied/proxied.go   | 3 +--
 archive/src/github.com/getlantern/systray/systray_linux.c     | 2 +-
 4 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/archive/src/github.com/getlantern/flashlight/client/reverseproxy.go b/archive/src/github.com/getlantern/flashlight/client/reverseproxy.go
index 33896b5d4..f1e3afbf9 100644
--- a/archive/src/github.com/getlantern/flashlight/client/reverseproxy.go
+++ b/archive/src/github.com/getlantern/flashlight/client/reverseproxy.go
@@ -17,9 +17,8 @@ import (
 func (client *Client) newReverseProxy() *httputil.ReverseProxy {
 	transport := &http.Transport{
 		TLSHandshakeTimeout: 40 * time.Second,
-		MaxIdleTime:         30 * time.Second,
+		IdleConnTimeout:     30 * time.Second,
 	}
-	transport.EnforceMaxIdleTime()
 
 	// TODO: would be good to make this sensitive to QOS, which
 	// right now is only respected for HTTPS connections. The
diff --git a/archive/src/github.com/getlantern/flashlight/main/flags.go b/archive/src/github.com/getlantern/flashlight/main/flags.go
index d622fe2a8..48e0ccedc 100644
--- a/archive/src/github.com/getlantern/flashlight/main/flags.go
+++ b/archive/src/github.com/getlantern/flashlight/main/flags.go
@@ -36,6 +36,10 @@ var (
 func flagsAsMap() map[string]interface{} {
 	flags := make(map[string]interface{})
 	flag.VisitAll(func(f *flag.Flag) {
+		// testing.benchTimeFlag does not implement Getter interface in Go 1.12
+		if f.Name == "test.benchtime" {
+			return
+		}
 		flags[f.Name] = f.Value.(flag.Getter).Get()
 	})
 	// Some properties should always be included
diff --git a/archive/src/github.com/getlantern/flashlight/proxied/proxied.go b/archive/src/github.com/getlantern/flashlight/proxied/proxied.go
index 915611058..b40f82b62 100644
--- a/archive/src/github.com/getlantern/flashlight/proxied/proxied.go
+++ b/archive/src/github.com/getlantern/flashlight/proxied/proxied.go
@@ -388,8 +388,7 @@ func chained(rootCA string, persistent bool) (http.RoundTripper, error) {
 		},
 	}
 	if persistent {
-		tr.MaxIdleTime = 30 * time.Second
-		tr.EnforceMaxIdleTime()
+		tr.IdleConnTimeout = 30 * time.Second
 	}
 
 	if rootCA != "" {
diff --git a/archive/src/github.com/getlantern/systray/systray_linux.c b/archive/src/github.com/getlantern/systray/systray_linux.c
index 56c622977..4e31eda78 100644
--- a/archive/src/github.com/getlantern/systray/systray_linux.c
+++ b/archive/src/github.com/getlantern/systray/systray_linux.c
@@ -34,7 +34,7 @@ int nativeLoop(void) {
 	global_temp_icon_file_names = g_array_new(TRUE, FALSE, sizeof(char*));
 	systray_ready();
 	gtk_main();
-	return;
+	return 0;
 }
 
 // runs in main thread, should always return FALSE to prevent gtk to execute it again
-- 
2.21.0

