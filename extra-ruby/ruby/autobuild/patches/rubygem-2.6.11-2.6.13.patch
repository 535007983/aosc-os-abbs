diff -Naudr a/lib/rubygems/commands/open_command.rb b/lib/rubygems/commands/open_command.rb
--- a/lib/rubygems/commands/open_command.rb	2017-02-01 14:36:03.000000000 -0600
+++ b/lib/rubygems/commands/open_command.rb	2017-06-03 16:23:24.000000000 -0500
@@ -72,7 +72,7 @@
   end
 
   def spec_for name
-    spec = Gem::Specification.find_all_by_name(name, @version).last
+    spec = Gem::Specification.find_all_by_name(name, @version).first
 
     return spec if spec
 
diff -Naudr a/lib/rubygems/commands/query_command.rb b/lib/rubygems/commands/query_command.rb
--- a/lib/rubygems/commands/query_command.rb	2017-03-16 19:23:47.000000000 -0500
+++ b/lib/rubygems/commands/query_command.rb	2017-08-27 20:38:34.000000000 -0500
@@ -86,7 +86,7 @@
       name = Array(options[:name])
     else
       args = options[:args].to_a
-      name = options[:exact] ? args : args.map{|arg| /#{arg}/i }
+      name = options[:exact] ? args.map{|arg| /\A#{Regexp.escape(arg)}\Z/ } : args.map{|arg| /#{arg}/i }
     end
 
     prerelease = options[:prerelease]
@@ -226,7 +226,7 @@
         end
       end
 
-      output << make_entry(matching_tuples, platforms)
+      output << clean_text(make_entry(matching_tuples, platforms))
     end
   end
 
@@ -353,7 +353,8 @@
   end
 
   def spec_summary entry, spec
-    entry << "\n\n" << format_text(spec.summary, 68, 4)
+    summary = truncate_text(spec.summary, "the summary for #{spec.full_name}")
+    entry << "\n\n" << format_text(summary, 68, 4)
   end
 
 end
diff -Naudr a/lib/rubygems/commands/sources_command.rb b/lib/rubygems/commands/sources_command.rb
--- a/lib/rubygems/commands/sources_command.rb	2017-02-01 14:36:03.000000000 -0600
+++ b/lib/rubygems/commands/sources_command.rb	2017-06-03 16:23:24.000000000 -0500
@@ -44,7 +44,7 @@
     source = Gem::Source.new source_uri
 
     begin
-      if Gem.sources.include? source_uri then
+      if Gem.sources.include? source then
         say "source #{source_uri} already present in the cache"
       else
         source.load_specs :released
diff -Naudr a/lib/rubygems/dependency_list.rb b/lib/rubygems/dependency_list.rb
--- a/lib/rubygems/dependency_list.rb	2017-02-01 14:36:03.000000000 -0600
+++ b/lib/rubygems/dependency_list.rb	2017-06-03 16:23:24.000000000 -0500
@@ -104,7 +104,7 @@
   end
 
   def inspect # :nodoc:
-    "#<%s:0x%x %p>" % [self.class, object_id, map { |s| s.full_name }]
+    "%s %p>" % [super[0..-2], map { |s| s.full_name }]
   end
 
   ##
diff -Naudr a/lib/rubygems/installer.rb b/lib/rubygems/installer.rb
--- a/lib/rubygems/installer.rb	2017-03-16 19:23:47.000000000 -0500
+++ b/lib/rubygems/installer.rb	2017-08-27 20:38:34.000000000 -0500
@@ -214,7 +214,7 @@
 
       ruby_executable = true
       existing = io.read.slice(%r{
-          ^(
+          ^\s*(
             gem \s |
             load \s Gem\.bin_path\( |
             load \s Gem\.activate_bin_path\(
@@ -697,10 +697,17 @@
       unpack or File.writable?(gem_home)
   end
 
+  def verify_spec_name
+    return if spec.name =~ Gem::Specification::VALID_NAME_PATTERN
+    raise Gem::InstallError, "#{spec} has an invalid name"
+  end
+
   ##
   # Return the text for an application file.
 
   def app_script_text(bin_file_name)
+    # note that the `load` lines cannot be indented, as old RG versions match
+    # against the beginning of the line
     return <<-TEXT
 #{shebang bin_file_name}
 #
@@ -723,7 +730,12 @@
   end
 end
 
+if Gem.respond_to?(:activate_bin_path)
 load Gem.activate_bin_path('#{spec.name}', '#{bin_file_name}', version)
+else
+gem #{spec.name.dump}, version
+load Gem.bin_path(#{spec.name.dump}, #{bin_file_name.dump}, version)
+end
 TEXT
   end
 
@@ -816,6 +828,8 @@
 
     ensure_loadable_spec
 
+    verify_spec_name
+
     if options[:install_as_default]
       Gem.ensure_default_gem_subdirectories gem_home
     else
diff -Naudr a/lib/rubygems/platform.rb b/lib/rubygems/platform.rb
--- a/lib/rubygems/platform.rb	2017-02-01 14:36:03.000000000 -0600
+++ b/lib/rubygems/platform.rb	2017-06-03 16:23:24.000000000 -0500
@@ -112,7 +112,7 @@
   end
 
   def inspect
-    "#<%s:0x%x @cpu=%p, @os=%p, @version=%p>" % [self.class, object_id, *to_a]
+    "%s @cpu=%p, @os=%p, @version=%p>" % [super[0..-2], *to_a]
   end
 
   def to_a
diff -Naudr a/lib/rubygems/remote_fetcher.rb b/lib/rubygems/remote_fetcher.rb
--- a/lib/rubygems/remote_fetcher.rb	2017-02-01 14:36:03.000000000 -0600
+++ b/lib/rubygems/remote_fetcher.rb	2017-08-27 20:38:34.000000000 -0500
@@ -110,7 +110,7 @@
     else
       target = res.target.to_s.strip
 
-      if /\.#{Regexp.quote(host)}\z/ =~ target
+      if URI("http://" + target).host.end_with?(".#{host}")
         return URI.parse "#{uri.scheme}://#{target}#{uri.path}"
       end
 
diff -Naudr a/lib/rubygems/security.rb b/lib/rubygems/security.rb
--- a/lib/rubygems/security.rb	2017-03-16 19:23:47.000000000 -0500
+++ b/lib/rubygems/security.rb	2017-08-27 20:36:26.000000000 -0500
@@ -455,7 +455,7 @@
 
   ##
   # Creates a new key pair of the specified +length+ and +algorithm+.  The
-  # default is a 2048 bit RSA key.
+  # default is a 3072 bit RSA key.
 
   def self.create_key length = KEY_LENGTH, algorithm = KEY_ALGORITHM
     algorithm.new length
diff -Naudr a/lib/rubygems/server.rb b/lib/rubygems/server.rb
--- a/lib/rubygems/server.rb	2017-02-01 14:36:03.000000000 -0600
+++ b/lib/rubygems/server.rb	2017-08-27 20:36:26.000000000 -0500
@@ -657,7 +657,7 @@
       "only_one_executable" => true,
       "full_name" => "rubygems-#{Gem::VERSION}",
       "has_deps" => false,
-      "homepage" => "http://docs.rubygems.org/",
+      "homepage" => "http://guides.rubygems.org/",
       "name" => 'rubygems',
       "ri_installed" => true,
       "summary" => "RubyGems itself",
diff -Naudr a/lib/rubygems/specification.rb b/lib/rubygems/specification.rb
--- a/lib/rubygems/specification.rb	2017-03-16 19:23:47.000000000 -0500
+++ b/lib/rubygems/specification.rb	2017-08-27 20:38:34.000000000 -0500
@@ -108,6 +108,8 @@
 
   private_constant :LOAD_CACHE if defined? private_constant
 
+  VALID_NAME_PATTERN = /\A[a-zA-Z0-9\.\-\_]+\z/ # :nodoc:
+
   # :startdoc:
 
   ##
@@ -2102,7 +2104,7 @@
     if $DEBUG
       super
     else
-      "#<#{self.class}:0x#{__id__.to_s(16)} #{full_name}>"
+      "#{super[0..-2]} #{full_name}>"
     end
   end
 
@@ -2668,9 +2670,15 @@
       end
     end
 
-    unless String === name then
+    if !name.is_a?(String) then
       raise Gem::InvalidSpecificationException,
-            "invalid value for attribute name: \"#{name.inspect}\""
+            "invalid value for attribute name: \"#{name.inspect}\" must be a string"
+    elsif name !~ /[a-zA-Z]/ then
+      raise Gem::InvalidSpecificationException,
+            "invalid value for attribute name: #{name.dump} must include at least one letter"
+    elsif name !~ VALID_NAME_PATTERN then
+      raise Gem::InvalidSpecificationException,
+            "invalid value for attribute name: #{name.dump} can only include letters, numbers, dashes, and underscores"
     end
 
     if raw_require_paths.empty? then
diff -Naudr a/lib/rubygems/test_case.rb b/lib/rubygems/test_case.rb
--- a/lib/rubygems/test_case.rb	2017-03-16 19:23:47.000000000 -0500
+++ b/lib/rubygems/test_case.rb	2017-08-27 20:36:26.000000000 -0500
@@ -484,7 +484,7 @@
 
       system @git, 'add', gemspec
       system @git, 'commit', '-a', '-m', 'a non-empty commit message', '--quiet'
-      head = Gem::Util.popen('git', 'rev-parse', 'master').strip
+      head = Gem::Util.popen(@git, 'rev-parse', 'master').strip
     end
 
     return name, git_spec.version, directory, head
@@ -1498,6 +1498,8 @@
 begin
   gem 'rdoc'
   require 'rdoc'
+
+  require 'rubygems/rdoc'
 rescue LoadError, Gem::LoadError
 end
 
@@ -1514,3 +1516,4 @@
 pid = $$
 END {tmpdirs.each {|dir| Dir.rmdir(dir)} if $$ == pid}
 Gem.clear_paths
+Gem.loaded_specs.clear
diff -Naudr a/lib/rubygems/text.rb b/lib/rubygems/text.rb
--- a/lib/rubygems/text.rb	2017-02-01 14:36:03.000000000 -0600
+++ b/lib/rubygems/text.rb	2017-08-27 20:38:34.000000000 -0500
@@ -7,12 +7,25 @@
 module Gem::Text
 
   ##
+  # Remove any non-printable characters and make the text suitable for
+  # printing.
+  def clean_text(text)
+    text.gsub(/[\000-\b\v-\f\016-\037\177]/, ".".freeze)
+  end
+
+  def truncate_text(text, description, max_length = 100_000)
+    raise ArgumentError, "max_length must be positive" unless max_length > 0
+    return text if text.size <= max_length
+    "Truncating #{description} to #{max_length.to_s.reverse.gsub(/...(?=.)/,'\&,').reverse} characters:\n" + text[0, max_length]
+  end
+
+  ##
   # Wraps +text+ to +wrap+ characters and optionally indents by +indent+
   # characters
 
   def format_text(text, wrap, indent=0)
     result = []
-    work = text.dup
+    work = clean_text(text)
 
     while work.length > wrap do
       if work =~ /^(.{0,#{wrap}})[ \n]/ then
diff -Naudr a/lib/rubygems.rb b/lib/rubygems.rb
--- a/lib/rubygems.rb	2017-03-16 19:23:50.000000000 -0500
+++ b/lib/rubygems.rb	2017-08-27 20:50:18.000000000 -0500
@@ -10,7 +10,7 @@
 require 'thread'
 
 module Gem
-  VERSION = "2.6.11"
+  VERSION = "2.6.13"
 end
 
 # Must be first since it unloads the prelude from 1.9.2
@@ -234,6 +234,7 @@
 
   def self.finish_resolve(request_set=Gem::RequestSet.new)
     request_set.import Gem::Specification.unresolved_deps.values
+    request_set.import Gem.loaded_specs.values.map {|s| Gem::Dependency.new(s.name, s.version) }
 
     request_set.resolve_current.each do |s|
       s.full_spec.activate
