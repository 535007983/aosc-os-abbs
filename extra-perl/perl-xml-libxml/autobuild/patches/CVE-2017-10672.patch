diff -urN XML-LibXML-2.0129.orig/LibXML.xs XML-LibXML-2.0129/LibXML.xs
--- XML-LibXML-2.0129.orig/LibXML.xs	2016-06-24 18:01:53.000000000 +0200
+++ XML-LibXML-2.0129/LibXML.xs	2017-07-26 15:11:12.030895877 +0200
@@ -4829,38 +4829,42 @@
     PREINIT:
         xmlNodePtr ret = NULL;
     CODE:
-       if ( self->type == XML_DOCUMENT_NODE ) {
+        if( nNode == oNode ) {
+            RETVAL = nNode;
+        }else{
+            if ( self->type == XML_DOCUMENT_NODE ) {
                 switch ( nNode->type ) {
-                case XML_ELEMENT_NODE:
-                    warn("replaceChild with an element on a document node not supported yet!");
-                    XSRETURN_UNDEF;
-                    break;
-                case XML_DOCUMENT_FRAG_NODE:
-                    warn("replaceChild with a document fragment node on a document node not supported yet!");
-                    XSRETURN_UNDEF;
-                    break;
-                case XML_TEXT_NODE:
-                case XML_CDATA_SECTION_NODE:
-                    warn("replaceChild with a text node not supported on a document node!");
-                    XSRETURN_UNDEF;
-                    break;
-                default:
-                    break;
+                    case XML_ELEMENT_NODE:
+                        warn("replaceChild with an element on a document node not supported yet!");
+                        XSRETURN_UNDEF;
+                        break;
+                    case XML_DOCUMENT_FRAG_NODE:
+                        warn("replaceChild with a document fragment node on a document node not supported yet!");
+                        XSRETURN_UNDEF;
+                        break;
+                    case XML_TEXT_NODE:
+                    case XML_CDATA_SECTION_NODE:
+                        warn("replaceChild with a text node not supported on a document node!");
+                        XSRETURN_UNDEF;
+                        break;
+                    default:
+                        break;
+                }
+            }
+            ret = domReplaceChild( self, nNode, oNode );
+            if (ret == NULL) {
+                XSRETURN_UNDEF;
+            }
+            else {
+                LibXML_reparent_removed_node(ret);
+                RETVAL = PmmNodeToSv(ret, PmmOWNERPO(PmmPROXYNODE(ret)));
+                if (nNode->type == XML_DTD_NODE) {
+                    LibXML_set_int_subset(nNode->doc, nNode);
+                }
+                if ( nNode->_private != NULL ) {
+                    PmmFixOwner( PmmPROXYNODE(nNode),
+                                 PmmOWNERPO(PmmPROXYNODE(self)) );
                 }
-        }
-        ret = domReplaceChild( self, nNode, oNode );
-        if (ret == NULL) {
-            XSRETURN_UNDEF;
-        }
-        else {
-            LibXML_reparent_removed_node(ret);
-            RETVAL = PmmNodeToSv(ret, PmmOWNERPO(PmmPROXYNODE(ret)));
-            if (nNode->type == XML_DTD_NODE) {
-                LibXML_set_int_subset(nNode->doc, nNode);
-            }
-            if ( nNode->_private != NULL ) {
-                PmmFixOwner( PmmPROXYNODE(nNode),
-                             PmmOWNERPO(PmmPROXYNODE(self)) );
             }
         }
     OUTPUT:
@@ -4874,30 +4878,34 @@
         xmlNodePtr ret = NULL;
         ProxyNodePtr owner = NULL;
     CODE:
-        if ( domIsParent( self, nNode ) == 1 ) {
-            XSRETURN_UNDEF;
-        }
-        owner = PmmOWNERPO(PmmPROXYNODE(self));
+        if( self == nNode ) {
+            RETVAL = nNode;
+        }else{
+            if ( domIsParent( self, nNode ) == 1 ) {
+                XSRETURN_UNDEF;
+            }
+            owner = PmmOWNERPO(PmmPROXYNODE(self));
 
-        if ( self->type != XML_ATTRIBUTE_NODE ) {
-              ret = domReplaceChild( self->parent, nNode, self);
-        }
-        else {
-             ret = xmlReplaceNode( self, nNode );
-        }
-        if ( ret ) {
-            LibXML_reparent_removed_node(ret);
-            RETVAL = PmmNodeToSv(ret, PmmOWNERPO(PmmPROXYNODE(ret)));
-            if (nNode->type == XML_DTD_NODE) {
-                LibXML_set_int_subset(nNode->doc, nNode);
+            if ( self->type != XML_ATTRIBUTE_NODE ) {
+                ret = domReplaceChild( self->parent, nNode, self);
             }
-            if ( nNode->_private != NULL ) {
-                PmmFixOwner(PmmPROXYNODE(nNode), owner);
+            else {
+                ret = xmlReplaceNode( self, nNode );
+            }
+            if ( ret ) {
+                LibXML_reparent_removed_node(ret);
+                RETVAL = PmmNodeToSv(ret, PmmOWNERPO(PmmPROXYNODE(ret)));
+                if (nNode->type == XML_DTD_NODE) {
+                    LibXML_set_int_subset(nNode->doc, nNode);
+                }
+                if ( nNode->_private != NULL ) {
+                    PmmFixOwner(PmmPROXYNODE(nNode), owner);
+                }
+            }
+            else {
+                croak( "replacement failed" );
+                XSRETURN_UNDEF;
             }
-        }
-        else {
-            croak( "replacement failed" );
-            XSRETURN_UNDEF;
         }
     OUTPUT:
         RETVAL
