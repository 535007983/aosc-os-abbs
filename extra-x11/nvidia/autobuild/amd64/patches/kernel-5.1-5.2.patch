diff -Naur a/nvidia-418.43/common/inc/nv-list-helpers.h b/nvidia-418.43/common/inc/nv-list-helpers.h
--- a/nvidia-418.43/common/inc/nv-list-helpers.h	2019-07-15 11:26:28.680543012 +0800
+++ b/nvidia-418.43/common/inc/nv-list-helpers.h	2019-07-15 11:25:30.407210382 +0800
@@ -24,6 +24,7 @@
 #define __NV_LIST_HELPERS_H__
 
 #include <linux/list.h>
+#include <linux/version.h>
 #include "conftest.h"
 
 #if !defined (list_for_each)
@@ -91,10 +92,12 @@
         list_entry((pos)->member.next, typeof(*(pos)), member)
 #endif
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 1, 0)
 static inline int list_is_first(const struct list_head *list,
                                 const struct list_head *head)
 {
     return list->prev == head;
 }
+#endif
 
 #endif // __NV_LIST_HELPERS_H__
diff -Naur a/nvidia-418.43/nvidia-drm/nvidia-drm-drv.c b/nvidia-418.43/nvidia-drm/nvidia-drm-drv.c
--- a/nvidia-418.43/nvidia-drm/nvidia-drm-drv.c	2019-07-15 11:26:28.700543012 +0800
+++ b/nvidia-418.43/nvidia-drm/nvidia-drm-drv.c	2019-07-15 11:25:30.423877048 +0800
@@ -55,6 +55,11 @@
 #include <drm/drm_atomic_helper.h>
 #endif
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 2, 0)
+#include <drm/drm_probe_helper.h>
+#endif
+
 static struct nv_drm_device *dev_list = NULL;
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
diff -Naur a/nvidia-418.43/nvidia-drm/nvidia-drm-encoder.h b/nvidia-418.43/nvidia-drm/nvidia-drm-encoder.h
--- a/nvidia-418.43/nvidia-drm/nvidia-drm-encoder.h	2019-07-15 11:26:28.700543012 +0800
+++ b/nvidia-418.43/nvidia-drm/nvidia-drm-encoder.h	2019-07-15 11:25:30.423877048 +0800
@@ -35,6 +35,11 @@
 #include <drm/drmP.h>
 #endif
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 2, 0)
+#include <drm/drm_probe_helper.h>
+#endif
+
 #include "nvkms-kapi.h"
 
 struct nv_drm_encoder {
diff -Naur a/nvidia-418.43/nvidia-drm/nvidia-drm-gem-nvkms-memory.c b/nvidia-418.43/nvidia-drm/nvidia-drm-gem-nvkms-memory.c
--- a/nvidia-418.43/nvidia-drm/nvidia-drm-gem-nvkms-memory.c	2019-07-15 11:26:28.700543012 +0800
+++ b/nvidia-418.43/nvidia-drm/nvidia-drm-gem-nvkms-memory.c	2019-07-15 11:25:30.423877048 +0800
@@ -330,7 +330,7 @@
 
 /* XXX Move these vma operations to os layer */
 
-static int __nv_drm_vma_fault(struct vm_area_struct *vma,
+static vm_fault_t __nv_drm_vma_fault(struct vm_area_struct *vma,
                               struct vm_fault *vmf)
 {
     unsigned long address = nv_page_fault_va(vmf);
@@ -377,12 +377,12 @@
  */
 
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
-static int nv_drm_vma_fault(struct vm_fault *vmf)
+static vm_fault_t nv_drm_vma_fault(struct vm_fault *vmf)
 {
     return __nv_drm_vma_fault(vmf->vma, vmf);
 }
 #else
-static int nv_drm_vma_fault(struct vm_area_struct *vma,
+static vm_fault_t nv_drm_vma_fault(struct vm_area_struct *vma,
                                 struct vm_fault *vmf)
 {
     return __nv_drm_vma_fault(vma, vmf);
diff -Naur a/nvidia-418.43/nvidia-uvm/uvm8.c b/nvidia-418.43/nvidia-uvm/uvm8.c
--- a/nvidia-418.43/nvidia-uvm/uvm8.c	2019-07-15 11:26:28.703876346 +0800
+++ b/nvidia-418.43/nvidia-uvm/uvm8.c	2019-07-15 11:25:30.423877048 +0800
@@ -37,6 +37,8 @@
 #include "uvm8_hmm.h"
 #include "uvm8_mem.h"
 
+#include <linux/version.h>
+
 static struct cdev g_uvm_cdev;
 
 // List of fault service contexts for CPU faults
@@ -166,13 +168,13 @@
 // If a fault handler is not set, paths like handle_pte_fault in older kernels
 // assume the memory is anonymous. That would make debugging this failure harder
 // so we force it to fail instead.
-static int uvm_vm_fault_sigbus(struct vm_area_struct *vma, struct vm_fault *vmf)
+static vm_fault_t uvm_vm_fault_sigbus(struct vm_area_struct *vma, struct vm_fault *vmf)
 {
     UVM_DBG_PRINT_RL("Fault to address 0x%lx in disabled vma\n", nv_page_fault_va(vmf));
     return VM_FAULT_SIGBUS;
 }
 
-static int uvm_vm_fault_sigbus_wrapper(struct vm_fault *vmf)
+static vm_fault_t uvm_vm_fault_sigbus_wrapper(struct vm_fault *vmf)
 {
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
     return uvm_vm_fault_sigbus(vmf->vma, vmf);
@@ -390,7 +392,7 @@
         uvm_record_unlock_mmap_sem_write(&current->mm->mmap_sem);
 }
 
-static int uvm_vm_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
+static vm_fault_t uvm_vm_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
 {
     uvm_va_space_t *va_space = uvm_va_space_get(vma->vm_file);
     uvm_va_block_t *va_block;
@@ -507,7 +509,7 @@
     }
 }
 
-static int uvm_vm_fault_wrapper(struct vm_fault *vmf)
+static vm_fault_t uvm_vm_fault_wrapper(struct vm_fault *vmf)
 {
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
     return uvm_vm_fault(vmf->vma, vmf);
diff -Naur a/nvidia-418.43/nvidia-uvm/uvm8_tools.c b/nvidia-418.43/nvidia-uvm/uvm8_tools.c
--- a/nvidia-418.43/nvidia-uvm/uvm8_tools.c	2019-07-15 11:26:28.707209679 +0800
+++ b/nvidia-418.43/nvidia-uvm/uvm8_tools.c	2019-07-15 11:25:30.423877048 +0800
@@ -206,12 +206,14 @@
     return event_tracker != NULL && !event_tracker->is_queue;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 2, 0)
 static void put_user_pages(struct page **pages, NvU64 page_count)
 {
     NvU64 i;
     for (i = 0; i < page_count; i++)
         put_page(pages[i]);
 }
+#endif
 
 static void unmap_user_pages(struct page **pages, void *addr, NvU64 size)
 {
