From 0f52663c782927dc0222ae1096bb5042b4891325 Mon Sep 17 00:00:00 2001
From: Nate Graham <nate@kde.org>
Date: Wed, 16 Oct 2019 08:20:49 -0600
Subject: [PATCH 11/12] [KCM] Display scale factor as a percentage, not a
 decimal

Summary:
This is the way GNOME and Windows present this information, and I think it's clearer
than using a decimal value.

The underlying value is still a float, we just convert to an int in percentage form for
display purposes.

Test Plan: {F7500851}

Reviewers: #vdg, #plasma, romangg, ndavis

Reviewed By: #vdg, #plasma, romangg, ndavis

Subscribers: ndavis, dhaumann, plasma-devel

Tags: #plasma

Differential Revision: https://phabricator.kde.org/D24370
---
 kcm/package/contents/ui/OutputPanel.qml | 4 ++--
 kcm/package/contents/ui/Panel.qml       | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/kcm/package/contents/ui/OutputPanel.qml b/kcm/package/contents/ui/OutputPanel.qml
index 0c4824e..aac5daf 100644
--- a/kcm/package/contents/ui/OutputPanel.qml
+++ b/kcm/package/contents/ui/OutputPanel.qml
@@ -91,10 +91,10 @@ ColumnLayout {
                     top:  Math.max(spinbox.from, spinbox.to) * spinbox.factor
                 }
                 textFromValue: function(value, locale) {
-                    return parseFloat(value * 1.0 / factor).toFixed(2);
+                    return i18nc("Global scale factor expressed in percentage form", "%1%", parseFloat(value * 1.0 / factor * 100.0));
                 }
                 valueFromText: function(text, locale) {
-                    return Number.fromLocaleString(locale, text) * factor
+                    return Number.fromLocaleString(locale, text) * factor / 100.0
                 }
                 onValueModified: element.scale = realValue
             }
diff --git a/kcm/package/contents/ui/Panel.qml b/kcm/package/contents/ui/Panel.qml
index 294a21e..c1fa115 100644
--- a/kcm/package/contents/ui/Panel.qml
+++ b/kcm/package/contents/ui/Panel.qml
@@ -91,10 +91,10 @@ ColumnLayout {
                     top:  Math.max(spinbox.from, spinbox.to)*spinbox.factor
                 }
                 textFromValue: function(value, locale) {
-                    return parseFloat(value * 1.0 / factor).toFixed(2);
+                    return i18nc("Global scale factor expressed in percentage form", "%1%", parseFloat(value * 1.0 / factor * 100.0));
                 }
                 valueFromText: function(text, locale) {
-                    return Number.fromLocaleString(locale, text) * factor
+                    return Number.fromLocaleString(locale, text) * factor / 100.0
                 }
                 onValueModified: {
                     kcm.globalScale = realValue;
@@ -112,7 +112,7 @@ ColumnLayout {
             Kirigami.FormData.isSection: true
             Layout.fillWidth: true
             type: Kirigami.MessageType.Warning
-            text: i18n("Scale factors that are not a multiple of 0.25 may cause visual glitches in applications. Consider setting the scale factor to a multiple of 0.25 and adjusting the font size instead.")
+            text: i18n("Scale factors that are not a multiple of 25% may cause visual glitches in applications. Consider setting the scale factor to a multiple of 25% and adjusting the font size instead.")
             visible: false
             showCloseButton: true
         }
-- 
2.21.0

