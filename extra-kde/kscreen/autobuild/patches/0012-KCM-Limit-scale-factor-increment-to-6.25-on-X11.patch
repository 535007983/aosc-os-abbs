From 2b23256b0a47526715e98352fe3a12db520c306f Mon Sep 17 00:00:00 2001
From: Nate Graham <nate@kde.org>
Date: Wed, 2 Oct 2019 14:09:33 -0600
Subject: [PATCH 12/12] [KCM] Limit scale factor increment to 6.25% on X11

Summary:
Because of the nature of floating point math and various Qt and X11 bugs, limiting the
scale factor increment to 0.0625 (6.25% in percentage form) will improve the display in
many apps.

For more information, see the discussions in https://bugreports.qt.io/browse/QTBUG-66036 and
the following bug reports:
CCBUG: 412447
CCBUG: 390451
CCBUG: 373232

Depends on D24370
Depends on D24371

Test Plan: {F7500922}

Reviewers: #plasma, romangg, mart

Reviewed By: #plasma, romangg, mart

Subscribers: cullmann, plasma-devel

Tags: #plasma

Differential Revision: https://phabricator.kde.org/D24373
---
 kcm/package/contents/ui/Panel.qml | 13 +++++++++----
 kded/output.cpp                   |  4 ++--
 2 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/kcm/package/contents/ui/Panel.qml b/kcm/package/contents/ui/Panel.qml
index c1fa115..69e27de 100644
--- a/kcm/package/contents/ui/Panel.qml
+++ b/kcm/package/contents/ui/Panel.qml
@@ -77,14 +77,19 @@ ColumnLayout {
             }
             Controls.SpinBox {
                 id: spinbox
+                Layout.minimumWidth: Kirigami.Units.gridUnit * 6
+
                 // Because QQC2 SpinBox doesn't natively support decimal step
                 // sizes: https://bugreports.qt.io/browse/QTBUG-67349
-                property real factor: 20.0
+                property real factor: 16.0
                 property real realValue: value / factor
 
                 from : 1.0 * factor
                 to : 3.0 * factor
-                stepSize: 0.05 * factor
+                // On X11 We set the increment to this weird value to compensate
+                // for inherent difficulties with floating-point math and this
+                // Qt bug: https://bugreports.qt.io/browse/QTBUG-66036
+                stepSize: 0.0625 * factor
                 value: kcm.globalScale * factor
                 validator: DoubleValidator {
                     bottom: Math.min(spinbox.from, spinbox.to)*spinbox.factor
@@ -111,8 +116,8 @@ ColumnLayout {
             id: weirdScaleFactorMsg
             Kirigami.FormData.isSection: true
             Layout.fillWidth: true
-            type: Kirigami.MessageType.Warning
-            text: i18n("Scale factors that are not a multiple of 25% may cause visual glitches in applications. Consider setting the scale factor to a multiple of 25% and adjusting the font size instead.")
+            type: Kirigami.MessageType.Info
+            text: i18n("The global scale factor is limited to multiples of 6.25% to minimize visual glitches in applications using the X11 windowing system.")
             visible: false
             showCloseButton: true
         }
diff --git a/kded/output.cpp b/kded/output.cpp
index 9477ee2..b2d2bb8 100644
--- a/kded/output.cpp
+++ b/kded/output.cpp
@@ -359,8 +359,8 @@ bool Output::writeGlobalPart(const KScreen::OutputPtr &output, QVariantMap &info
     info[QStringLiteral("metadata")] = metadata(output);
     info[QStringLiteral("rotation")] = output->rotation();
 
-    // Round scale to two digits
-    info[QStringLiteral("scale")] = int(output->scale() * 100 + 0.5) / 100.;
+    // Round scale to four digits
+    info[QStringLiteral("scale")] = int(output->scale() * 10000 + 0.5) / 10000.;
 
     QVariantMap modeInfo;
     float refreshRate = -1.;
-- 
2.21.0

