Description: Catch errors in setpagesize, .setpagesize and setpagedevice and cleanup
 Bug 699794 showed that attempt to change page size in SAFER mode
 when the nulldevice was the currentdevice
 would leave 'false' on the stack.
 Run .setdevice in stopped and clean up,
 and also clean up .setpagesize
Origin: upstream, http://git.ghostscript.com/?p=ghostpdl.git;h=95aa78b
Author: Ray Johnston <ray.johnston@artifex.com>
Forwarded: yes
Bug: http://bugs.ghostscript.com/show_bug.cgi?id=699794
Last-Update: 2018-10-18
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Resource/Init/gs_lev2.ps
+++ b/Resource/Init/gs_lev2.ps
@@ -610,7 +610,14 @@
    .dicttomark setpagedevice
    /WaitTimeout exch mark /JobTimeout 5 2 roll .dicttomark setsystemparams
  } bind def
-/.setpagesize { 2 array astore /PageSize .dict1 setpagedevice } bind def
+/.setpagesize
+ { 2 copy 2 array astore /PageSize .dict1 { setpagedevice } stopped {
+     pop	% the setpagedevice dict
+     /setpagesize $error /errorname get signalerror
+   } {
+     pop pop	% success -- pop the arguments
+   } ifelse
+ } bind def
 /setduplexmode { /Duplex .dict1 setpagedevice } bind def
 /setmargins
  { exch 2 array astore /Margins .dict1 setpagedevice
--- a/Resource/Init/gs_setpd.ps
+++ b/Resource/Init/gs_setpd.ps
@@ -919,10 +919,15 @@
                 % Stack: mark ... <merged> <failed> <device> <eraseflag>
 SETPDDEBUG { (Installing.) = pstack flush } if
 
-    pop
+   pop
                 % .setdevice clears the current page device!
    .currentpagedevice pop exch
-   .setdevice pop
+   { .setdevice } stopped {
+     cleartomark exch pop
+     /setpagedevice $error /errorname get
+     signalerror
+   } if
+   pop
    .setpagedevice
 
                 % Implement UseCIEColor directly if this is a LL3 system.
--- a/Resource/Init/gs_statd.ps
+++ b/Resource/Init/gs_statd.ps
@@ -39,7 +39,13 @@
 % These procedures are also accessed as data structures during initialization,
 % so the page dimensions must be the first two elements of the procedure.
 
-/.setpagesize { /statusdict .systemvar begin .setpagesize end } bind def
+/.setpagesize {
+   /statusdict .systemvar begin
+   { .setpagesize } stopped {
+     /setpagesize $error /errorname get signalerror
+   } if
+   end
+} bind def
 
                 % Page sizes defined by Adobe documentation
                 % Note: these executable arrays should all begin with two
@@ -261,9 +267,17 @@
                 % The Adobe documentation only defines setpagetype
                 % (a Level 1 operator) as accepting the values 0 and 1,
                 % so we do too.
-      {/letter /note} 1 index get
-      //systemdict /userdict get exch get cvx exec
-      /pagetype exch def
+      dup type /integertype ne {
+        /setpage /typecheck signalerror
+      } {
+        dup 0 ne 1 index 1 ne or {
+          /setpage /rangecheck signalerror
+        } {
+          {/letter /note} 1 index get
+          //systemdict /userdict get exch get cvx exec
+        } ifelse
+        /pagetype exch def
+    } ifelse
     end
   } bind def
 
