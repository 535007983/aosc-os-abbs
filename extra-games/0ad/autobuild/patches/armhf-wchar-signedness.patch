Description: fix build failure on armhf due to unsigned wchar_t 
   * Fix "0ad FTBFS with on armhf with gcc 7: error: call of overloaded
     'abs(unsigned int)' is ambiguous" (Closes: #879071)
 The root cause of this failure is that wchar_t is unsigned on
 armhf. Subtracting a signed 32-bit number from an unsigned one results
 in an unsigned result which std::abs (understandablly)  does not support.
 Casting both arguments of the subtraction to int fixes the build failure
Author: Peter Michael Green <plugwash@debian.org>
Bug-Debian: https://bugs.debian.org/879071
Last-Update: 2017-11-21

--- 0ad-0.0.22.orig/source/gui/CDropDown.cpp
+++ 0ad-0.0.22/source/gui/CDropDown.cpp
@@ -352,7 +352,7 @@ InReaction CDropDown::ManuallyHandleEven
 					int diff = 0;
 					for (size_t j = 0; j < m_InputBuffer.length(); ++j)
 					{
-						diff = std::abs(pList->m_Items[i].GetRawString().LowerCase()[j] - (int)m_InputBuffer[j]);
+						diff = std::abs((int)(pList->m_Items[i].GetRawString().LowerCase()[j]) - (int)m_InputBuffer[j]);
 						if (diff == 0)
 							indexOfDifference = j+1;
 						else
