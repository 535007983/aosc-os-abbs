From 647b8ec55185ef589ffe7822b4c948443f54d7d1 Mon Sep 17 00:00:00 2001
From: Mark Laws <mdl@60hz.org>
Date: Thu, 12 Oct 2017 00:03:41 +0900
Subject: [PATCH] Fix type error in OCaml 4.05 printer

---
 src/extraction/ml/FStar_Extraction_ML_PrintML_4.05.X.ml | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/extraction/ml/FStar_Extraction_ML_PrintML_4.05.X.ml b/src/extraction/ml/FStar_Extraction_ML_PrintML_4.05.X.ml
index 39afcb4460..08d89214e3 100644
--- a/src/extraction/ml/FStar_Extraction_ML_PrintML_4.05.X.ml
+++ b/src/extraction/ml/FStar_Extraction_ML_PrintML_4.05.X.ml
@@ -231,6 +231,8 @@ let rec build_expr (e: mlexpr): expression =
       let args = map (fun x -> (Nolabel, build_expr x)) es in
       let f = build_expr e in
       resugar_app f args es
+   | MLE_TApp (e, ts) ->
+      build_expr e
    | MLE_Fun (l, e) -> build_fun l e
    | MLE_Match (e, branches) ->
       let ep = build_expr e in
@@ -359,11 +361,11 @@ let build_ty_manifest (b: mltybody): core_type option=
 let skip_type_defn (current_module:string) (type_name:string) :bool =
   current_module = "FStar_Pervasives" && type_name = "option"
 
-let type_attrs (attrs: tyattrs): attributes option =
+let type_attrs (attrs: metadata): attributes option =
   let deriving_show = (mk_sym "deriving", PStr [Str.eval (Exp.ident (mk_lident "show"))]) in
   if BatList.is_empty attrs then None else (Some [deriving_show])
 
-let add_deriving_const (attrs: tyattrs) (ptype_manifest: core_type option): core_type option =
+let add_deriving_const (attrs: metadata) (ptype_manifest: core_type option): core_type option =
   match attrs with
   | [PpxDerivingShowConstant s] ->
       let e = Exp.apply (Exp.ident (path_to_ident (["Format"], "pp_print_string"))) [(Nolabel, Exp.ident (mk_lident "fmt")); (Nolabel, Exp.constant (Const.string s))] in
