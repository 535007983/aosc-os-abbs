# Heck I'm not going to clean it up just yet...
GNFLAGS=(
    'google_api_key="AIzaSyBGpe01okUSW2GQDIgLovY23Mj1RKzzOOY"'
    'google_default_client_id="1006183841565.apps.googleusercontent.com"'
    'google_default_client_secret="XN6oYWBv7O7w_heXB8TVuldr"'
    'ffmpeg_branding="ChromeOS"'
    'proprietary_codecs=true'
    'is_component_ffmpeg=true'
    'is_component_build=true'
    'remove_webcore_debug_symbols=true'
    'enable_hangout_services_extension=true'
    'enable_hotwording=false'
    'use_aura=true'
    'enable_webrtc=true'
    'enable_widevine=true'
    'use_gold=false'
    'use_gtk3=false'
    'use_sysroot=false'
    'is_clang=false'
    'treat_warnings_as_errors=false'
    'is_debug=true'
    'asan=false'
    'clang=false'
    'host_clang=false'
    'clang_dynlib_flags=""'
    'clang_plugin_args=""'
    'clang_chrome_plugins_flags=""'
    'disable_glibc=true'
    'linux_fpic=true'
    'use_gconf=false'
    'use_gio=true'
    'use_gnome_keyring=true'
    'use_pulseaudio=true'
    'use_system_bzip2=true'
    'use_system_flac=true'
    'use_system_harfbuzz=false'
    'use_system_icu=false'
    'icu_use_data_file_flag=true'
    'use_system_libevent=false'
    'use_system_libjpeg=true'
    'use_system_libpng=true'
    'use_system_libusb=true'
    'use_system_libxml=true'
    'use_system_libxslt=true'
    'use_system_opus=true'
    'use_system_protobuf=false'
    'use_system_libsrtp=false'
    'use_system_xdg_utils=true'
    'use_system_yasm=true'
    'use_system_zlib=false'
    'use_system_re2=false'
    'linux_link_libspeechd=true'
    'linux_link_gnome_keyring=true'
    'linux_link_gsettings=true'
    'linux_link_libpci=true'
    'linux_link_libgps=false'
    'linux_strip_binary=true'
    'linux_use_bundled_binutils=false'
    'linux_use_bundled_gold=false'
    'linux_use_gold_binary=false'
    'linux_use_gold_flags=false'
    'linux_use_libgps=false'
    'proprietary_codecs=true'
    'no_strict_aliasing=true'
    'v8_no_strict_aliasing=true'
    'remove_webcore_debug_symbols=true'
    'logging_like_official_build=true'
    'enable_hotwording=false'
    'enable_hidpi=true'
    'enable_touch_ui=true'
    'enable_pepper_cdms=true'
    'enable_webrtc=true'
    'enable_widevine=true'
    'buildtype="Official"'
    'enable_nacl=false'
    'enable_nacl_nonsfi=false')

python2 tools/gn/bootstrap/bootstrap.py \
    --gn-gen-args "${GNFLAGS[*]}"
out/Release/gn gen out/Release --args="${GNFLAGS[*]}" \
    --script-executable=/usr/bin/python2

# HACK: listen to us, Chromium.
for i in `find . -type f -name '*.ninja'`; do
    sed -e "s|-O0 -g2|${CPPFLAGS} ${CXXFLAGS}|g" \
        -e "s|-pthread -Wl,--fatal-warnings|-pthread -Wl,--fatal-warnings ${LDFLAGS}|g" \
        -i "${i}"
done

# Enable verbose build with -v.
ninja -v -C out/Release chrome chrome_sandbox chromedriver widevinecdmadapter

# Instaling Chromium binaries.
install -Dm755 out/Release/chrome "$PKGDIR"/usr/lib/chromium/chromium
install -Dm644 out/Release/chrome.1 "$PKGDIR"/usr/share/man/man1/chromium.1
cp -a out/Release/{*.so,*.pak,*.bin,chromedriver,libwidevinecdmadapter.so,icudtl.dat} \
      out/Release/locales \
      out/Release/gen/content/content_resources.pak \
      "$PKGDIR"/usr/lib/chromium/
ln -s /usr/lib/chromium/chromedriver "$PKGDIR"/usr/bin/chromedriver

# Icons.
for size in 22 24 48 64 128 256; do
    install -Dm644 chrome/app/theme/chromium/product_logo_$size.png \
        "$PKGDIR"/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png
done
for size in 16 32; do
    install -Dm644 chrome/app/theme/default_100_percent/chromium/product_logo_$size.png \
        "$PKGDIR"/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png
done

# NaCl, if available.
#if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
#    cp out/Release/nacl_helper{,_bootstrap} out/Release/nacl_irt_*.nexe \
#       "$PKGDIR"/usr/lib/chromium/
#fi

pushd chromium-launcher-3
make PREFIX=/usr
make install DESTDIR="$PKGDIR" PREFIX=/usr
popd
