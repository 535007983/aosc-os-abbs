# FIXME: fails to build with 54+.
#if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
#    python2 build/download_nacl_toolchains.py \
#        --packages nacl_x86_newlib,pnacl_newlib,pnacl_translator \
#        sync --extract
#fi

# https://gcc.gnu.org/gcc-6/changes.html
#
# Value range propagation now assumes that the this pointer of C++
# member functions is non-null. This eliminates common null pointer
# checks but also breaks some non-conforming code-bases (such as
# Qt-5, Chromium, KDevelop).
#
# As a temporary work-around -fno-delete-null-pointer-checks can be
# used. Wrong code can be identified by using -fsanitize=undefined.

export CFLAGS="${CFLAGS} -fno-delete-null-pointer-checks"
export CXXFLAGS="${CXXFLAGS} -fno-delete-null-pointer-checks"

if [[ "${CROSS:-$ARCH}" = "armel" ]]; then
   ln -sv /usr/bin/gcc "$SRCDIR"/arm-linux-gnueabihf-gcc
   ln -sv /usr/bin/ld.bfd "$SRCDIR"/arm-linux-gnueabihf-ld
   ln -sv arm-linux-gnueabihf-ld "$SRCDIR"/ld
   ln -sv /usr/bin/g++ "$SRCDIR"/arm-linux-gnueabihf-g++
   ln -sv /usr/bin/ar "$SRCDIR"/arm-linux-gnueabihf-ar
   ln -sv /usr/bin/as "$SRCDIR"/arm-linux-gnueabihf-as
   ln -sv /usr/bin/nm "$SRCDIR"/arm-linux-gnueabihf-nm
   ln -sv /usr/bin/readelf "$SRCDIR"/arm-linux-gnueabihf-readelf
   export PATH="$SRCDIR:$PATH"
fi

if [[ "${CROSS:-$ARCH}" = "arm64" ]]; then
   ln -sv /usr/bin/gcc "$SRCDIR"/aarch64-linux-gnu-gcc
   ln -sv /usr/bin/ld.bfd "$SRCDIR"/aarch64-linux-gnu-ld
   ln -sv aarch64-linux-gnu-ld "$SRCDIR"/ld
   ln -sv /usr/bin/g++ "$SRCDIR"/aarch64-linux-gnu-g++
   ln -sv /usr/bin/ar "$SRCDIR"/aarch64-linux-gnu-ar
   ln -sv /usr/bin/as "$SRCDIR"/aarch64-linux-gnu-as
   ln -sv /usr/bin/nm "$SRCDIR"/aarch64-linux-gnu-nm
   ln -sv /usr/bin/readelf "$SRCDIR"/aarch64-linux-gnu-readelf
   export PATH="$SRCDIR:$PATH"
fi
